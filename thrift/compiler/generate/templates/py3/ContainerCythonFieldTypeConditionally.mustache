{{!

  Copyright 2016 Facebook, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!

This is used to declare a cython type that is referring to or wrapping a
c++ object. Most of the values are direct references to variables imported
from libcpp and friends. Structs are the special case, as they refer to the
struct by name as defined in the pxd file, with a 'c' prefix.

This file is almost identical to ContainerCythonFieldType, but it has extra
logic for structs to include the cython prefix only if it is an external program.
In the foo_types.pyx if it is referring to an object in the same library, there
should be no prefix, but if it is an object in a different library there should
be a prefix. In foo_services.pyx or foo_clients.pyx it is importing from the
foo_types library no matter what, so it always needs a prefix.

This file is included from Struct.pyx

}}{{#type:bool?}}cbool{{/type:bool?}}{{!
}}{{#type:byte?}}int8_t{{/type:byte?}}{{!
}}{{#type:i16?}}int16_t{{/type:i16?}}{{!
}}{{#type:i32?}}int32_t{{/type:i32?}}{{!
}}{{#type:i64?}}int64_t{{/type:i64?}}{{!
}}{{#type:double?}}double{{/type:double?}}{{!
}}{{#type:string?}}string{{/type:string?}}{{!
}}{{#type:binary?}}string{{/type:binary?}}{{!
}}{{#type:struct}}{{!
  }}{{#type:externalProgram?}}{{> common/ModulePath}}.{{/type:externalProgram?}}{{!
  }}c{{struct:name}}{{!
}}{{/type:struct}}{{!
}}{{#type:list?}}vector[{{!
  }}{{#type:listElemType}}{{> ContainerCythonFieldTypeConditionally}}{{/type:listElemType}}{{!
}}]{{/type:list?}}{{!
}}{{#type:set?}}cset[{{!
  }}{{#type:setElemType}}{{> ContainerCythonFieldTypeConditionally}}{{/type:setElemType}}{{!
}}]{{/type:set?}}{{!
}}{{#type:map?}}cmap[{{!
  }}{{#type:keyType}}{{> ContainerCythonFieldTypeConditionally}}{{/type:keyType}},{{!
  }}{{#type:valueType}}{{> ContainerCythonFieldTypeConditionally}}{{/type:valueType}}{{!
}}]{{/type:map?}}{{!
}}{{#type:enum}}{{#type:externalProgram?}}{{> common/ModulePath}}.{{/type:externalProgram?}}c{{enum:name}}{{/type:enum}}
