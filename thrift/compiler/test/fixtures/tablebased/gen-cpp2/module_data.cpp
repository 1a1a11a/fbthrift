/**
 * Autogenerated by Thrift for src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include "thrift/compiler/test/fixtures/tablebased/gen-cpp2/module_data.h"

#include <thrift/lib/cpp2/gen/module_data_cpp.h>

namespace apache {
namespace thrift {


const std::size_t TEnumDataStorage<::test::fixtures::tablebased::ExampleEnum>::size;
const std::array<::test::fixtures::tablebased::ExampleEnum, 2> TEnumDataStorage<::test::fixtures::tablebased::ExampleEnum>::values = {{
  type::ZERO,
  type::NONZERO,
}};
const std::array<folly::StringPiece, 2> TEnumDataStorage<::test::fixtures::tablebased::ExampleEnum>::names = {{
  "ZERO",
  "NONZERO",
}};


const std::size_t TEnumDataStorage<::test::fixtures::tablebased::ExampleUnion::Type>::size;
const std::array<::test::fixtures::tablebased::ExampleUnion::Type, 2> TEnumDataStorage<::test::fixtures::tablebased::ExampleUnion::Type>::values = {{
  type::fieldA,
  type::fieldB,
}};
const std::array<folly::StringPiece, 2> TEnumDataStorage<::test::fixtures::tablebased::ExampleUnion::Type>::names = {{
  "fieldA",
  "fieldB",
}};



const std::size_t TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_size;
const std::array<folly::StringPiece, TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_names = {{
  "fieldA",
  "fieldB",
  "fieldC",
  "fieldD",
  "fieldE",
}};
const std::array<int16_t, TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_ids = {{
  1,
  2,
  3,
  4,
  5,
}};
const std::array<apache::thrift::protocol::TType, TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::TrivialTypesStruct>::fields_types = {{
  TType::T_I32,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_STRING,
  TType::T_I32,
}};

const std::size_t TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_size;
const std::array<folly::StringPiece, TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_names = {{
  "fieldA",
  "fieldB",
  "fieldC",
  "fieldD",
  "fieldE",
  "fieldF",
  "fieldG",
  "fieldH",
}};
const std::array<int16_t, TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_ids = {{
  12,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
}};
const std::array<apache::thrift::protocol::TType, TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ContainerStruct>::fields_types = {{
  TType::T_LIST,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_LIST,
  TType::T_SET,
  TType::T_MAP,
  TType::T_LIST,
}};

const std::size_t TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_size;
const std::array<folly::StringPiece, TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_names = {{
  "fieldA",
  "fieldB",
}};
const std::array<int16_t, TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_ids = {{
  1,
  2,
}};
const std::array<apache::thrift::protocol::TType, TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_size> TStructDataStorage<::test::fixtures::tablebased::ExampleUnion>::fields_types = {{
  TType::T_STRUCT,
  TType::T_STRUCT,
}};

} // namespace thrift
} // namespace apache
