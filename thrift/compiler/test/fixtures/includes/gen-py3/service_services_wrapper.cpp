/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include <src/gen-py3/py3/service_services_wrapper.h>
#include <src/gen-py3/py3/service_services.h>
#include <thrift/lib/cpp2/async/AsyncProcessor.h>

namespace cpp2 {

MyServiceWrapper::MyServiceWrapper(PyObject *obj)
  : if_object(obj)
  {
    Py_XINCREF(this->if_object);
  }

MyServiceWrapper::~MyServiceWrapper() {
    Py_XDECREF(this->if_object);
}

folly::Future<folly::Unit> MyServiceWrapper::future_query(
  std::unique_ptr<cpp2::MyStruct> s,
  std::unique_ptr<cpp2::Included> i
) {
  folly::Promise<folly::Unit> promise;
  auto future = promise.getFuture();
  call_cy_MyService_query(
    this->if_object,
    std::move(promise),
    std::move(s),
    std::move(i)
  );
  return future;
}

std::shared_ptr<apache::thrift::ServerInterface> MyServiceInterface(PyObject *if_object) {
  return std::make_shared<MyServiceWrapper>(if_object);
}
} // namespace cpp2
