/**
 * Autogenerated by Thrift for src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include  "thrift/compiler/test/fixtures/types/gen-cpp2/include_fatal_types.h"

#include "thrift/compiler/test/fixtures/types/gen-cpp2/module_types.h"

#include "thrift/compiler/test/fixtures/types/gen-cpp2/module_fatal.h"

#include <fatal/type/traits.h>
#include <fatal/type/list.h>

namespace apache { namespace thrift { namespace fixtures { namespace types {

namespace __fbthrift_refl {

class decorated_struct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_field {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using field = ::apache::thrift::reflected_annotations<__fbthrift_field_field>;
    };

    struct __fbthrift_keys {
      using cpp_declare_equal_to = __fbthrift_strings_module::cpp_declare_equal_to;
      using cpp_declare_hash = __fbthrift_strings_module::cpp_declare_hash;
    };

    struct __fbthrift_values {
      using cpp_declare_equal_to = ::fatal::sequence<char, '1'>;
      using cpp_declare_hash = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_declare_equal_to, values::cpp_declare_equal_to>,
      ::apache::thrift::annotation<keys::cpp_declare_hash, values::cpp_declare_hash>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using field = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::field,
      ::std::string, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field>,
      decorated_struct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ContainerStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_fieldA {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldB {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldC {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldD {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldE {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldF {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldG {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldH {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using fieldA = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldA>;
      using fieldB = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldB>;
      using fieldC = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldC>;
      using fieldD = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldD>;
      using fieldE = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldE>;
      using fieldF = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldF>;
      using fieldG = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldG>;
      using fieldH = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldH>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using fieldA = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldA,
      ::std::vector<int32_t>, 12, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldA>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldA>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldA>,
      ContainerStruct
    >;
    using fieldB = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldB,
      std::list<int32_t>, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldB>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldB>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldB>,
      ContainerStruct
    >;
    using fieldC = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldC,
      std::deque<int32_t>, 3, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldC>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldC>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldC>,
      ContainerStruct
    >;
    using fieldD = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldD,
      folly::fbvector<int32_t>, 4, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldD>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldD>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldD>,
      ContainerStruct
    >;
    using fieldE = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldE,
      folly::small_vector<int32_t>, 5, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldE>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldE>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldE>,
      ContainerStruct
    >;
    using fieldF = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldF,
      folly::sorted_vector_set<int32_t>, 6, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldF>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldF>,
      ::apache::thrift::type_class::set<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldF>,
      ContainerStruct
    >;
    using fieldG = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldG,
      folly::sorted_vector_map<int32_t, ::std::string>, 7, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldG>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldG>,
      ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::string>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldG>,
      ContainerStruct
    >;
    using fieldH = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldH,
       ::apache::thrift::fixtures::types::SomeMap, 8, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldH>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldH>,
      ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::string>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldH>,
      ContainerStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class CppTypeStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_fieldA {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using fieldA = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldA>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using fieldA = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::fieldA,
      std::list<int32_t>, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldA>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldA>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldA>,
      CppTypeStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class VirtualStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_MyIntField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using MyIntField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyIntField>;
    };

    struct __fbthrift_keys {
      using cpp_virtual = __fbthrift_strings_module::cpp_virtual;
    };

    struct __fbthrift_values {
      using cpp_virtual = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_virtual, values::cpp_virtual>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using MyIntField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyIntField,
      int64_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyIntField>,
      VirtualStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class MyStructWithForwardRefEnum_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using a = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::a,
       ::apache::thrift::fixtures::types::MyForwardRefEnum, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>,
      ::apache::thrift::type_class::enumeration,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>,
      MyStructWithForwardRefEnum
    >;
    using b = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::b,
       ::apache::thrift::fixtures::types::MyForwardRefEnum, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>,
      ::apache::thrift::type_class::enumeration,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>,
      MyStructWithForwardRefEnum
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class TrivialNumeric_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using a = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::a,
      int32_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>,
      TrivialNumeric
    >;
    using b = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::b,
      bool, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>,
      TrivialNumeric
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class TrivialNestedWithDefault_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_z {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_n {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using z = ::apache::thrift::reflected_annotations<__fbthrift_field_z>;
      using n = ::apache::thrift::reflected_annotations<__fbthrift_field_n>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using z = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::z,
      int32_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::z>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::z>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::z>,
      TrivialNestedWithDefault
    >;
    using n = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::n,
       ::apache::thrift::fixtures::types::TrivialNumeric, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::n>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::n>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::n>,
      TrivialNestedWithDefault
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ComplexString_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using a = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::a,
      ::std::string, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>,
      ComplexString
    >;
    using b = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::b,
      ::std::map<::std::string, int32_t>, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>,
      ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>,
      ComplexString
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ComplexNestedWithDefault_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_z {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_n {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using z = ::apache::thrift::reflected_annotations<__fbthrift_field_z>;
      using n = ::apache::thrift::reflected_annotations<__fbthrift_field_n>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using z = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::z,
      ::std::string, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::z>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::z>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::z>,
      ComplexNestedWithDefault
    >;
    using n = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::n,
       ::apache::thrift::fixtures::types::ComplexString, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::n>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::n>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::n>,
      ComplexNestedWithDefault
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class MinPadding_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_small {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_big {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_medium {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_biggish {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_tiny {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using small = ::apache::thrift::reflected_annotations<__fbthrift_field_small>;
      using big = ::apache::thrift::reflected_annotations<__fbthrift_field_big>;
      using medium = ::apache::thrift::reflected_annotations<__fbthrift_field_medium>;
      using biggish = ::apache::thrift::reflected_annotations<__fbthrift_field_biggish>;
      using tiny = ::apache::thrift::reflected_annotations<__fbthrift_field_tiny>;
    };

    struct __fbthrift_keys {
      using cpp_minimize_padding = __fbthrift_strings_module::cpp_minimize_padding;
    };

    struct __fbthrift_values {
      using cpp_minimize_padding = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_minimize_padding, values::cpp_minimize_padding>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using small = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::small,
      int8_t, 1, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::small>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::small>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::small>,
      MinPadding
    >;
    using big = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::big,
      int64_t, 2, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::big>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::big>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::big>,
      MinPadding
    >;
    using medium = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::medium,
      int16_t, 3, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::medium>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::medium>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::medium>,
      MinPadding
    >;
    using biggish = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::biggish,
      int32_t, 4, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::biggish>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::biggish>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::biggish>,
      MinPadding
    >;
    using tiny = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::tiny,
      int8_t, 5, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::tiny>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::tiny>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::tiny>,
      MinPadding
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class MyDataItem_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
     public:
    };

    struct __fbthrift_keys {
      using cpp2_noncomparable = __fbthrift_strings_module::cpp2_noncomparable;
    };

    struct __fbthrift_values {
      using cpp2_noncomparable = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp2_noncomparable, values::cpp2_noncomparable>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class MyStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_MyIntField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyStringField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_majorVer {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_data {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using MyIntField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyIntField>;
      using MyStringField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyStringField>;
      using majorVer = ::apache::thrift::reflected_annotations<__fbthrift_field_majorVer>;
      using data = ::apache::thrift::reflected_annotations<__fbthrift_field_data>;
    };

    struct __fbthrift_keys {
      using cpp2_noncomparable = __fbthrift_strings_module::cpp2_noncomparable;
    };

    struct __fbthrift_values {
      using cpp2_noncomparable = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp2_noncomparable, values::cpp2_noncomparable>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using MyIntField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyIntField,
      int64_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyIntField>,
      MyStruct
    >;
    using MyStringField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyStringField,
      ::std::string, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyStringField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyStringField>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyStringField>,
      MyStruct
    >;
    using majorVer = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::majorVer,
      int64_t, 3, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::majorVer>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::majorVer>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::majorVer>,
      MyStruct
    >;
    using data = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::data,
       ::apache::thrift::fixtures::types::MyDataItem, 4, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::data>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::data>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::data>,
      MyStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class Renaming_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_bar {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using bar = ::apache::thrift::reflected_annotations<__fbthrift_field_bar>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using bar = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::bar,
      int64_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::bar>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::bar>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::bar>,
      Renaming
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class AnnotatedTypes_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_binary_field {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_list_field {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using binary_field = ::apache::thrift::reflected_annotations<__fbthrift_field_binary_field>;
      using list_field = ::apache::thrift::reflected_annotations<__fbthrift_field_list_field>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using binary_field = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::binary_field,
       ::apache::thrift::fixtures::types::TBinary, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::binary_field>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::binary_field>,
      ::apache::thrift::type_class::binary,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::binary_field>,
      AnnotatedTypes
    >;
    using list_field = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::list_field,
       ::apache::thrift::fixtures::types::SomeListOfTypeMap, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::list_field>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::list_field>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::string>>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::list_field>,
      AnnotatedTypes
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ForwardUsageStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_foo {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using foo = ::apache::thrift::reflected_annotations<__fbthrift_field_foo>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using foo = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::foo,
       ::apache::thrift::fixtures::types::ForwardUsageRoot, 1, ::apache::thrift::optionality::optional,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::foo>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::foo>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::foo>,
      ForwardUsageStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ForwardUsageRoot_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_ForwardUsageStruct {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_ForwardUsageByRef {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using ForwardUsageStruct = ::apache::thrift::reflected_annotations<__fbthrift_field_ForwardUsageStruct>;
      using ForwardUsageByRef = ::apache::thrift::reflected_annotations<__fbthrift_field_ForwardUsageByRef>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using ForwardUsageStruct = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::ForwardUsageStruct,
       ::apache::thrift::fixtures::types::ForwardUsageStruct, 1, ::apache::thrift::optionality::optional,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::ForwardUsageStruct>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::ForwardUsageStruct>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::ForwardUsageStruct>,
      ForwardUsageRoot
    >;
    using ForwardUsageByRef = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::ForwardUsageByRef,
       ::apache::thrift::fixtures::types::ForwardUsageByRef, 2, ::apache::thrift::optionality::optional,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::ForwardUsageByRef>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::ForwardUsageByRef>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::ForwardUsageByRef>,
      ForwardUsageRoot
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class ForwardUsageByRef_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_foo {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using foo = ::apache::thrift::reflected_annotations<__fbthrift_field_foo>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using foo = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::foo,
       ::apache::thrift::fixtures::types::ForwardUsageRoot, 1, ::apache::thrift::optionality::optional,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::foo>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::foo>,
      ::apache::thrift::type_class::structure,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::foo>,
      ForwardUsageByRef
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class NoexceptMoveEmpty_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
     public:
    };

    struct __fbthrift_keys {
      using cpp_noexcept_move = __fbthrift_strings_module::cpp_noexcept_move;
    };

    struct __fbthrift_values {
      using cpp_noexcept_move = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_noexcept_move, values::cpp_noexcept_move>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class NoexceptMoveSimpleStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_boolField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using boolField = ::apache::thrift::reflected_annotations<__fbthrift_field_boolField>;
    };

    struct __fbthrift_keys {
      using cpp_noexcept_move = __fbthrift_strings_module::cpp_noexcept_move;
    };

    struct __fbthrift_values {
      using cpp_noexcept_move = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_noexcept_move, values::cpp_noexcept_move>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using boolField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::boolField,
      int64_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::boolField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::boolField>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::boolField>,
      NoexceptMoveSimpleStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class NoexceptMoveComplexStruct_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_MyBoolField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyIntField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyStringField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyStringField2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyBinaryField {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyBinaryField2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyBinaryField3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyBinaryListField4 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_MyMapEnumAndInt {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using MyBoolField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyBoolField>;
      using MyIntField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyIntField>;
      using MyStringField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyStringField>;
      using MyStringField2 = ::apache::thrift::reflected_annotations<__fbthrift_field_MyStringField2>;
      using MyBinaryField = ::apache::thrift::reflected_annotations<__fbthrift_field_MyBinaryField>;
      using MyBinaryField2 = ::apache::thrift::reflected_annotations<__fbthrift_field_MyBinaryField2>;
      using MyBinaryField3 = ::apache::thrift::reflected_annotations<__fbthrift_field_MyBinaryField3>;
      using MyBinaryListField4 = ::apache::thrift::reflected_annotations<__fbthrift_field_MyBinaryListField4>;
      using MyMapEnumAndInt = ::apache::thrift::reflected_annotations<__fbthrift_field_MyMapEnumAndInt>;
    };

    struct __fbthrift_keys {
      using cpp_noexcept_move = __fbthrift_strings_module::cpp_noexcept_move;
    };

    struct __fbthrift_values {
      using cpp_noexcept_move = ::fatal::sequence<char, '1'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_noexcept_move, values::cpp_noexcept_move>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using MyBoolField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyBoolField,
      bool, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyBoolField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyBoolField>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyBoolField>,
      NoexceptMoveComplexStruct
    >;
    using MyIntField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyIntField,
      int64_t, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyIntField>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyIntField>,
      NoexceptMoveComplexStruct
    >;
    using MyStringField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyStringField,
      ::std::string, 3, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyStringField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyStringField>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyStringField>,
      NoexceptMoveComplexStruct
    >;
    using MyStringField2 = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyStringField2,
      ::std::string, 4, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyStringField2>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyStringField2>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyStringField2>,
      NoexceptMoveComplexStruct
    >;
    using MyBinaryField = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyBinaryField,
      ::std::string, 5, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyBinaryField>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyBinaryField>,
      ::apache::thrift::type_class::binary,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyBinaryField>,
      NoexceptMoveComplexStruct
    >;
    using MyBinaryField2 = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyBinaryField2,
      ::std::string, 6, ::apache::thrift::optionality::optional,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyBinaryField2>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyBinaryField2>,
      ::apache::thrift::type_class::binary,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyBinaryField2>,
      NoexceptMoveComplexStruct
    >;
    using MyBinaryField3 = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyBinaryField3,
      ::std::string, 7, ::apache::thrift::optionality::required,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyBinaryField3>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyBinaryField3>,
      ::apache::thrift::type_class::binary,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyBinaryField3>,
      NoexceptMoveComplexStruct
    >;
    using MyBinaryListField4 = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyBinaryListField4,
      ::std::vector<::std::string>, 8, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyBinaryListField4>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyBinaryListField4>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::binary>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyBinaryListField4>,
      NoexceptMoveComplexStruct
    >;
    using MyMapEnumAndInt = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::MyMapEnumAndInt,
      ::std::map< ::apache::thrift::fixtures::types::MyEnumA, ::std::string>, 9, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::MyMapEnumAndInt>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::MyMapEnumAndInt>,
      ::apache::thrift::type_class::map<::apache::thrift::type_class::enumeration, ::apache::thrift::type_class::string>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::MyMapEnumAndInt>,
      NoexceptMoveComplexStruct
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class AllocatorAware_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_aa_list {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_aa_set {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_aa_map {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_aa_string {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_not_a_container {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using aa_list = ::apache::thrift::reflected_annotations<__fbthrift_field_aa_list>;
      using aa_set = ::apache::thrift::reflected_annotations<__fbthrift_field_aa_set>;
      using aa_map = ::apache::thrift::reflected_annotations<__fbthrift_field_aa_map>;
      using aa_string = ::apache::thrift::reflected_annotations<__fbthrift_field_aa_string>;
      using not_a_container = ::apache::thrift::reflected_annotations<__fbthrift_field_not_a_container>;
    };

    struct __fbthrift_keys {
      using cpp_allocator = __fbthrift_strings_module::cpp_allocator;
    };

    struct __fbthrift_values {
      using cpp_allocator = ::fatal::sequence<char, 's', 'o', 'm', 'e', '_', 'a', 'l', 'l', 'o', 'c', 'a', 't', 'o', 'r'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_allocator, values::cpp_allocator>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using aa_list = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::aa_list,
      ::std::vector<int32_t>, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::aa_list>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::aa_list>,
      ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::aa_list>,
      AllocatorAware
    >;
    using aa_set = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::aa_set,
      ::std::set<int32_t>, 2, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::aa_set>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::aa_set>,
      ::apache::thrift::type_class::set<::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::aa_set>,
      AllocatorAware
    >;
    using aa_map = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::aa_map,
      ::std::map<int32_t, int32_t>, 3, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::aa_map>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::aa_map>,
      ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::integral>,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::aa_map>,
      AllocatorAware
    >;
    using aa_string = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::aa_string,
      ::std::string, 4, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::aa_string>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::aa_string>,
      ::apache::thrift::type_class::string,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::aa_string>,
      AllocatorAware
    >;
    using not_a_container = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::not_a_container,
      int32_t, 5, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::not_a_container>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::not_a_container>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::not_a_container>,
      AllocatorAware
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

class AllocatorAware2_struct_traits {
 private:
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_not_a_container {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using not_a_container = ::apache::thrift::reflected_annotations<__fbthrift_field_not_a_container>;
    };

    struct __fbthrift_keys {
      using cpp_allocator = __fbthrift_strings_module::cpp_allocator;
    };

    struct __fbthrift_values {
      using cpp_allocator = ::fatal::sequence<char, 's', 'o', 'm', 'e', '_', 'a', 'l', 'l', 'o', 'c', 'a', 't', 'o', 'r'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
      ::apache::thrift::annotation<keys::cpp_allocator, values::cpp_allocator>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_members {
    using not_a_container = ::apache::thrift::reflected_struct_data_member<
      __fbthrift_strings_module::not_a_container,
      int32_t, 1, ::apache::thrift::optionality::required_of_writer,
      ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::not_a_container>,
      ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::not_a_container>,
      ::apache::thrift::type_class::integral,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::not_a_container>,
      AllocatorAware2
    >;
  };
 public:
  using annotations = __fbthrift_annotations;
  using members = __fbthrift_members;
};

} // __fbthrift_refl

THRIFT_REGISTER_STRUCT_TRAITS(
  decorated_struct,
  __fbthrift_refl::__fbthrift_strings_module::decorated_struct,
  __fbthrift_refl::decorated_struct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::decorated_struct_struct_traits::members::field
  >,
  __fbthrift_refl::decorated_struct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::decorated_struct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(2133116297910176940ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ContainerStruct,
  __fbthrift_refl::__fbthrift_strings_module::ContainerStruct,
  __fbthrift_refl::ContainerStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldA,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldB,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldC,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldD,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldE,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldF,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldG,
      __fbthrift_refl::ContainerStruct_struct_traits::members::fieldH
  >,
  __fbthrift_refl::ContainerStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ContainerStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(11962737781608441260ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  CppTypeStruct,
  __fbthrift_refl::__fbthrift_strings_module::CppTypeStruct,
  __fbthrift_refl::CppTypeStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::CppTypeStruct_struct_traits::members::fieldA
  >,
  __fbthrift_refl::CppTypeStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::CppTypeStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(15199837033647160364ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  VirtualStruct,
  __fbthrift_refl::__fbthrift_strings_module::VirtualStruct,
  __fbthrift_refl::VirtualStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::VirtualStruct_struct_traits::members::MyIntField
  >,
  __fbthrift_refl::VirtualStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::VirtualStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(6433147857901895308ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  MyStructWithForwardRefEnum,
  __fbthrift_refl::__fbthrift_strings_module::MyStructWithForwardRefEnum,
  __fbthrift_refl::MyStructWithForwardRefEnum_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::MyStructWithForwardRefEnum_struct_traits::members::a,
      __fbthrift_refl::MyStructWithForwardRefEnum_struct_traits::members::b
  >,
  __fbthrift_refl::MyStructWithForwardRefEnum_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::MyStructWithForwardRefEnum_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(4311102400659715084ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  TrivialNumeric,
  __fbthrift_refl::__fbthrift_strings_module::TrivialNumeric,
  __fbthrift_refl::TrivialNumeric_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::TrivialNumeric_struct_traits::members::a,
      __fbthrift_refl::TrivialNumeric_struct_traits::members::b
  >,
  __fbthrift_refl::TrivialNumeric_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::TrivialNumeric_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(15631381314040922508ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  TrivialNestedWithDefault,
  __fbthrift_refl::__fbthrift_strings_module::TrivialNestedWithDefault,
  __fbthrift_refl::TrivialNestedWithDefault_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::TrivialNestedWithDefault_struct_traits::members::z,
      __fbthrift_refl::TrivialNestedWithDefault_struct_traits::members::n
  >,
  __fbthrift_refl::TrivialNestedWithDefault_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::TrivialNestedWithDefault_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(6528453523498201964ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ComplexString,
  __fbthrift_refl::__fbthrift_strings_module::ComplexString,
  __fbthrift_refl::ComplexString_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ComplexString_struct_traits::members::a,
      __fbthrift_refl::ComplexString_struct_traits::members::b
  >,
  __fbthrift_refl::ComplexString_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ComplexString_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(15088647206859143756ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ComplexNestedWithDefault,
  __fbthrift_refl::__fbthrift_strings_module::ComplexNestedWithDefault,
  __fbthrift_refl::ComplexNestedWithDefault_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ComplexNestedWithDefault_struct_traits::members::z,
      __fbthrift_refl::ComplexNestedWithDefault_struct_traits::members::n
  >,
  __fbthrift_refl::ComplexNestedWithDefault_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ComplexNestedWithDefault_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(2062586248581855212ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  MinPadding,
  __fbthrift_refl::__fbthrift_strings_module::MinPadding,
  __fbthrift_refl::MinPadding_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::MinPadding_struct_traits::members::small,
      __fbthrift_refl::MinPadding_struct_traits::members::big,
      __fbthrift_refl::MinPadding_struct_traits::members::medium,
      __fbthrift_refl::MinPadding_struct_traits::members::biggish,
      __fbthrift_refl::MinPadding_struct_traits::members::tiny
  >,
  __fbthrift_refl::MinPadding_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::MinPadding_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(1783103042197984780ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  MyDataItem,
  __fbthrift_refl::__fbthrift_strings_module::MyDataItem,
  __fbthrift_refl::MyDataItem_struct_traits::members,
  ::fatal::list<
  >,
  __fbthrift_refl::MyDataItem_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::MyDataItem_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(4790436723586763884ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  MyStruct,
  __fbthrift_refl::__fbthrift_strings_module::MyStruct,
  __fbthrift_refl::MyStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::MyStruct_struct_traits::members::MyIntField,
      __fbthrift_refl::MyStruct_struct_traits::members::MyStringField,
      __fbthrift_refl::MyStruct_struct_traits::members::majorVer,
      __fbthrift_refl::MyStruct_struct_traits::members::data
  >,
  __fbthrift_refl::MyStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::MyStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(7958971832214294220ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  Renaming,
  __fbthrift_refl::__fbthrift_strings_module::Renaming,
  __fbthrift_refl::Renaming_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::Renaming_struct_traits::members::bar
  >,
  __fbthrift_refl::Renaming_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::Renaming_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(10718802463879262636ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  AnnotatedTypes,
  __fbthrift_refl::__fbthrift_strings_module::AnnotatedTypes,
  __fbthrift_refl::AnnotatedTypes_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::AnnotatedTypes_struct_traits::members::binary_field,
      __fbthrift_refl::AnnotatedTypes_struct_traits::members::list_field
  >,
  __fbthrift_refl::AnnotatedTypes_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::AnnotatedTypes_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(17983424159904177676ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ForwardUsageStruct,
  __fbthrift_refl::__fbthrift_strings_module::ForwardUsageStruct,
  __fbthrift_refl::ForwardUsageStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ForwardUsageStruct_struct_traits::members::foo
  >,
  __fbthrift_refl::ForwardUsageStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ForwardUsageStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(17360210329199062572ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ForwardUsageRoot,
  __fbthrift_refl::__fbthrift_strings_module::ForwardUsageRoot,
  __fbthrift_refl::ForwardUsageRoot_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ForwardUsageRoot_struct_traits::members::ForwardUsageStruct,
      __fbthrift_refl::ForwardUsageRoot_struct_traits::members::ForwardUsageByRef
  >,
  __fbthrift_refl::ForwardUsageRoot_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ForwardUsageRoot_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(15709653741992939980ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  ForwardUsageByRef,
  __fbthrift_refl::__fbthrift_strings_module::ForwardUsageByRef,
  __fbthrift_refl::ForwardUsageByRef_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::ForwardUsageByRef_struct_traits::members::foo
  >,
  __fbthrift_refl::ForwardUsageByRef_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::ForwardUsageByRef_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(7502886793208594252ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  NoexceptMoveEmpty,
  __fbthrift_refl::__fbthrift_strings_module::NoexceptMoveEmpty,
  __fbthrift_refl::NoexceptMoveEmpty_struct_traits::members,
  ::fatal::list<
  >,
  __fbthrift_refl::NoexceptMoveEmpty_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::NoexceptMoveEmpty_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(11676134689775956652ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  NoexceptMoveSimpleStruct,
  __fbthrift_refl::__fbthrift_strings_module::NoexceptMoveSimpleStruct,
  __fbthrift_refl::NoexceptMoveSimpleStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::NoexceptMoveSimpleStruct_struct_traits::members::boolField
  >,
  __fbthrift_refl::NoexceptMoveSimpleStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::NoexceptMoveSimpleStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(18391302915442473772ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  NoexceptMoveComplexStruct,
  __fbthrift_refl::__fbthrift_strings_module::NoexceptMoveComplexStruct,
  __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyBoolField,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyIntField,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyStringField,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyStringField2,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyBinaryField,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyBinaryField2,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyBinaryField3,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyBinaryListField4,
      __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::members::MyMapEnumAndInt
  >,
  __fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::NoexceptMoveComplexStruct_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(4890647338471635948ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  AllocatorAware,
  __fbthrift_refl::__fbthrift_strings_module::AllocatorAware,
  __fbthrift_refl::AllocatorAware_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::AllocatorAware_struct_traits::members::aa_list,
      __fbthrift_refl::AllocatorAware_struct_traits::members::aa_set,
      __fbthrift_refl::AllocatorAware_struct_traits::members::aa_map,
      __fbthrift_refl::AllocatorAware_struct_traits::members::aa_string,
      __fbthrift_refl::AllocatorAware_struct_traits::members::not_a_container
  >,
  __fbthrift_refl::AllocatorAware_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::AllocatorAware_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(5560513471192516556ull)
  >
);
THRIFT_REGISTER_STRUCT_TRAITS(
  AllocatorAware2,
  __fbthrift_refl::__fbthrift_strings_module::AllocatorAware2,
  __fbthrift_refl::AllocatorAware2_struct_traits::members,
  ::fatal::list<
      __fbthrift_refl::AllocatorAware2_struct_traits::members::not_a_container
  >,
  __fbthrift_refl::AllocatorAware2_struct_traits::annotations::members,
  ::apache::thrift::detail::type_common_metadata_impl<
    module_tags::module,
    ::apache::thrift::reflected_annotations<__fbthrift_refl::AllocatorAware2_struct_traits::annotations>,
    static_cast<::apache::thrift::legacy_type_id_t>(8959389212932404140ull)
  >
);

}}}} // apache::thrift::fixtures::types
