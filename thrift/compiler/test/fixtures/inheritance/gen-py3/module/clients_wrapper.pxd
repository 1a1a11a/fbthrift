#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from cpython.ref cimport PyObject
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp cimport bool as cbool
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.set cimport set as cset
from libcpp.string cimport string
from libcpp.vector cimport vector

from folly cimport cFollyFuture, cFollyTry, cFollyUnit
from thrift.py3.client cimport cRequestChannel_ptr

cimport module.types as _module_types



cdef extern from "src/gen-cpp2/MyRoot.h" namespace "cpp2":
  cdef cppclass cMyRootAsyncClient "cpp2::MyRootAsyncClient":
      pass

cdef extern from "src/gen-cpp2/MyNode.h" namespace "cpp2":
  cdef cppclass cMyNodeAsyncClient "cpp2::MyNodeAsyncClient":
      pass

cdef extern from "src/gen-cpp2/MyLeaf.h" namespace "cpp2":
  cdef cppclass cMyLeafAsyncClient "cpp2::MyLeafAsyncClient":
      pass

cdef extern from "src/gen-py3/module/clients_wrapper.h" namespace "cpp2":
  cdef cppclass cRequestChannel "apache::thrift::RequestChannel":
      pass
  ctypedef shared_ptr[cRequestChannel] cRequestChannel_ptr
  cdef cppclass cMyRootClientWrapper "cpp2::MyRootClientWrapper":
    cMyRootClientWrapper(
      shared_ptr[cMyRootAsyncClient] async_client)
    cMyRootClientWrapper(cRequestChannel_ptr channel)
    cFollyFuture[cFollyUnit] disconnect()
    void setPersistentHeader(const string& key, const string& value)

    cFollyFuture[cFollyUnit] do_root()

  cdef cppclass cMyNodeClientWrapper "cpp2::MyNodeClientWrapper"(cMyRootClientWrapper):
    cMyNodeClientWrapper(
      shared_ptr[cMyNodeAsyncClient] async_client)
    cMyNodeClientWrapper(cRequestChannel_ptr channel)

    cFollyFuture[cFollyUnit] do_mid()

  cdef cppclass cMyLeafClientWrapper "cpp2::MyLeafClientWrapper"(cMyNodeClientWrapper):
    cMyLeafClientWrapper(
      shared_ptr[cMyLeafAsyncClient] async_client)
    cMyLeafClientWrapper(cRequestChannel_ptr channel)

    cFollyFuture[cFollyUnit] do_leaf()

