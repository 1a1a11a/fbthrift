/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include <thrift/lib/cpp2/gen/module_metadata_cpp.h>
#include "thrift/compiler/test/fixtures/basic-client-buffered-stream/gen-cpp2/module_metadata.h"

namespace apache::thrift::detail::metadata {

using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftPrimitiveType = ::apache::thrift::metadata::ThriftPrimitiveType;
using ThriftType = ::apache::thrift::metadata::ThriftType;

void GeneratedEnumMetadata<::cpp2::MyEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.MyEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_MyEnum = res.first->second;
  module_MyEnum.name = "module.MyEnum";
  module_MyEnum.elements[0] = "MyValue1";
  module_MyEnum.elements[1] = "MyValue2";
}

void GeneratedStructMetadata<::cpp2::MyDataItem>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyDataItem", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyDataItem = res.first->second;
  module_MyDataItem.name = "module.MyDataItem";
  module_MyDataItem.is_union = false;
}
void GeneratedStructMetadata<::cpp2::MyStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyStruct = res.first->second;
  module_MyStruct.name = "module.MyStruct";
  module_MyStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyIntField_1;
  module_MyStruct_MyIntField_1.id = 1;
  module_MyStruct_MyIntField_1.name = "MyIntField";
  module_MyStruct_MyIntField_1.is_optional = false;
  auto module_MyStruct_MyIntField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_MyStruct_MyIntField_1_type->initialize(module_MyStruct_MyIntField_1.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyIntField_1));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyStringField_2;
  module_MyStruct_MyStringField_2.id = 2;
  module_MyStruct_MyStringField_2.name = "MyStringField";
  module_MyStruct_MyStringField_2.is_optional = false;
  auto module_MyStruct_MyStringField_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_MyStruct_MyStringField_2_type->initialize(module_MyStruct_MyStringField_2.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyStringField_2));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyDataField_3;
  module_MyStruct_MyDataField_3.id = 3;
  module_MyStruct_MyDataField_3.name = "MyDataField";
  module_MyStruct_MyDataField_3.is_optional = false;
  auto module_MyStruct_MyDataField_3_type = std::make_unique<Typedef>("module.MyDataItem", std::make_unique<Struct< ::cpp2::MyDataItem>>("module.MyDataItem", metadata));
  module_MyStruct_MyDataField_3_type->initialize(module_MyStruct_MyDataField_3.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyDataField_3));
  ::apache::thrift::metadata::ThriftField module_MyStruct_myEnum_4;
  module_MyStruct_myEnum_4.id = 4;
  module_MyStruct_myEnum_4.name = "myEnum";
  module_MyStruct_myEnum_4.is_optional = false;
  auto module_MyStruct_myEnum_4_type = std::make_unique<Enum< ::cpp2::MyEnum>>("module.MyEnum", metadata);
  module_MyStruct_myEnum_4_type->initialize(module_MyStruct_myEnum_4.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_myEnum_4));
}
void GeneratedStructMetadata<::cpp2::MyUnion>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyUnion", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyUnion = res.first->second;
  module_MyUnion.name = "module.MyUnion";
  module_MyUnion.is_union = true;
  ::apache::thrift::metadata::ThriftField module_MyUnion_myEnum_1;
  module_MyUnion_myEnum_1.id = 1;
  module_MyUnion_myEnum_1.name = "myEnum";
  module_MyUnion_myEnum_1.is_optional = false;
  auto module_MyUnion_myEnum_1_type = std::make_unique<Enum< ::cpp2::MyEnum>>("module.MyEnum", metadata);
  module_MyUnion_myEnum_1_type->initialize(module_MyUnion_myEnum_1.type);
  module_MyUnion.fields.push_back(std::move(module_MyUnion_myEnum_1));
  ::apache::thrift::metadata::ThriftField module_MyUnion_myStruct_2;
  module_MyUnion_myStruct_2.id = 2;
  module_MyUnion_myStruct_2.name = "myStruct";
  module_MyUnion_myStruct_2.is_optional = false;
  auto module_MyUnion_myStruct_2_type = std::make_unique<Struct< ::cpp2::MyStruct>>("module.MyStruct", metadata);
  module_MyUnion_myStruct_2_type->initialize(module_MyUnion_myStruct_2.type);
  module_MyUnion.fields.push_back(std::move(module_MyUnion_myStruct_2));
  ::apache::thrift::metadata::ThriftField module_MyUnion_myDataItem_3;
  module_MyUnion_myDataItem_3.id = 3;
  module_MyUnion_myDataItem_3.name = "myDataItem";
  module_MyUnion_myDataItem_3.is_optional = false;
  auto module_MyUnion_myDataItem_3_type = std::make_unique<Struct< ::cpp2::MyDataItem>>("module.MyDataItem", metadata);
  module_MyUnion_myDataItem_3_type->initialize(module_MyUnion_myDataItem_3.type);
  module_MyUnion.fields.push_back(std::move(module_MyUnion_myDataItem_3));
}

} // apache::thrift::detail::metadata
