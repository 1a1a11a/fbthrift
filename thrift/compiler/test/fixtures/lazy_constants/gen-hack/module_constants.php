<?hh // strict
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
class module_CONSTANTS {
  /**
   * Original thrift constant:-
   * i32 myInt
   */
  const int myInt = 1337;

  /**
   * Original thrift constant:-
   * string name
   */
  const string name = "Mark Zuckerberg";

  /**
   * Original thrift constant:-
   * list<map<string, i32>> states
   */
  <<__Memoize>>
  public static function states(): ConstVector<ConstMap<string, int>>{
    return ImmVector {
      ImmMap {
        "San Diego" => 3211000,
        "Sacramento" => 479600,
        "SF" => 837400,
      },
      ImmMap {
        "New York" => 8406000,
        "Albany" => 98400,
      },
    };
  }

  /**
   * Original thrift constant:-
   * double x
   */
  const float x = 1.0;

  /**
   * Original thrift constant:-
   * double y
   */
  const float y = 1000000.0;

  /**
   * Original thrift constant:-
   * double z
   */
  const float z = 1e+09;

  /**
   * Original thrift constant:-
   * struct module.Internship instagram
   */
  <<__Memoize>>
  public static function instagram(): Internship{
    return Internship::fromShape(
      shape(
        "weeks" => 12,
        "title" => "Software Engineer",
        "employer" => Company::INSTAGRAM,
      )
    );
  }

  /**
   * Original thrift constant:-
   * list<struct module.Range> kRanges
   */
  <<__Memoize>>
  public static function kRanges(): ConstVector<Range>{
    return ImmVector {
      Range::fromShape(
        shape(
          "min" => 1,
          "max" => 2,
        )
      ),
      Range::fromShape(
        shape(
          "min" => 5,
          "max" => 6,
        )
      ),
    };
  }

  /**
   * Original thrift constant:-
   * list<struct module.Internship> internList
   */
  <<__Memoize>>
  public static function internList(): ConstVector<Internship>{
    return ImmVector {
      Internship::fromShape(
        shape(
          "weeks" => 12,
          "title" => "Software Engineer",
          "employer" => Company::INSTAGRAM,
        )
      ),
      Internship::fromShape(
        shape(
          "weeks" => 10,
          "title" => "Sales Intern",
          "employer" => Company::FACEBOOK,
        )
      ),
    };
  }

  /**
   * Original thrift constant:-
   * string apostrophe
   */
  const string apostrophe = "'";

  /**
   * Original thrift constant:-
   * string tripleApostrophe
   */
  const string tripleApostrophe = "'''";

  /**
   * Original thrift constant:-
   * string quotationMark
   */
  const string quotationMark = "\"";

  /**
   * Original thrift constant:-
   * string backslash
   */
  const string backslash = "\\";

  /**
   * Original thrift constant:-
   * string escaped_a
   */
  const string escaped_a = "\x61";

  /**
   * Original thrift constant:-
   * map<string, i32> char2ascii
   */
  <<__Memoize>>
  public static function char2ascii(): ConstMap<string, int>{
    return ImmMap {
      "'" => 39,
      "\"" => 34,
      "\\" => 92,
      "\x61" => 97,
    };
  }


  public static function getAllStructuredAnnotations(): dict<string, dict<string, \IThriftStruct>> {
    return dict[
      'myInt' => dict[],
      'name' => dict[],
      'states' => dict[],
      'x' => dict[],
      'y' => dict[],
      'z' => dict[],
      'instagram' => dict[],
      'kRanges' => dict[],
      'internList' => dict[],
      'apostrophe' => dict[],
      'tripleApostrophe' => dict[],
      'quotationMark' => dict[],
      'backslash' => dict[],
      'escaped_a' => dict[],
      'char2ascii' => dict[],
    ];
  }
}

