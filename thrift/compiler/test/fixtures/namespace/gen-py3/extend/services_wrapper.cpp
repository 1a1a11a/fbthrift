/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include <src/gen-py3/extend/services_wrapper.h>
#include <src/gen-py3/extend/services_api.h>
#include <thrift/lib/cpp2/async/AsyncProcessor.h>

namespace cpp2 {

ExtendTestServiceWrapper::ExtendTestServiceWrapper(PyObject *obj)
  : cpp2::HsTestServiceWrapper(obj)
  {
    import_my__namespacing__extend__test__extend__services();
  }

folly::Future<bool> ExtendTestServiceWrapper::future_check(
  std::unique_ptr<cpp2::HsFoo> struct1
) {
  folly::Promise<bool> promise;
  auto future = promise.getFuture();
  call_cy_ExtendTestService_check(
    this->if_object,
    std::move(promise),
    std::move(struct1)
  );
  return future;
}

std::shared_ptr<apache::thrift::ServerInterface> ExtendTestServiceInterface(PyObject *if_object) {
  return std::make_shared<ExtendTestServiceWrapper>(if_object);
}
} // namespace cpp2
