/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <thrift/lib/cpp2/async/RequestChannel.h>
#include <src/gen-cpp2/ExtendTestService.h>
#include <gen-py3/hsmodule/clients_wrapper.h>

#include <folly/futures/Future.h>
#include <folly/futures/Promise.h>
#include <folly/Unit.h>

#include <cstdint>
#include <functional>
#include <map>
#include <memory>
#include <set>
#include <vector>

namespace cpp2 {

typedef std::shared_ptr<apache::thrift::RequestChannel> RequestChannel_ptr;

class ExtendTestServiceClientWrapper : public cpp2::HsTestServiceClientWrapper {
  protected:
    std::unique_ptr<cpp2::ExtendTestServiceAsyncClient> async_client;

  public:
    explicit ExtendTestServiceClientWrapper(
        std::unique_ptr<cpp2::ExtendTestServiceAsyncClient> client)
        : HsTestServiceClientWrapper(std::move(client)) { }
    explicit ExtendTestServiceClientWrapper(RequestChannel_ptr channel)
        : ExtendTestServiceClientWrapper(std::make_unique<cpp2::ExtendTestServiceAsyncClient>(channel))  { }


    folly::Future<bool> check(
      cpp2::HsFoo arg_struct1);
};


} // namespace cpp2
