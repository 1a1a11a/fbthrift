/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#include <src/gen-py3/extend/clients_wrapper.h>

namespace cpp2 {


ExtendTestServiceClientWrapper::ExtendTestServiceClientWrapper(
    std::unique_ptr<::cpp2::ExtendTestServiceAsyncClient> async_client,
    std::shared_ptr<apache::thrift::RequestChannel> channel) :
    HsTestServiceClientWrapper(std::move(async_client), std::move(channel)) {}


folly::Future<bool>
ExtendTestServiceClientWrapper::check(
    apache::thrift::RpcOptions& rpcOptions,
    ::cpp2::HsFoo arg_struct1) {
  folly::Promise<bool> _promise;
  auto _future = _promise.getFuture();
  auto* client = static_cast<::cpp2::ExtendTestServiceAsyncClient*>(async_client_.get());
  auto callback = std::make_unique<::thrift::py3::FutureCallback<bool>>(
    std::move(_promise), rpcOptions, client->recv_wrapped_check, channel_);
  client->check(
    rpcOptions,
    std::move(callback),
    arg_struct1
  );
  return _future;
}


} // namespace cpp2
