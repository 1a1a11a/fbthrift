/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/compiler/test/fixtures/deprecated/gen-cpp2/module_types.h"

#include "thrift/compiler/test/fixtures/deprecated/gen-cpp2/module_types.tcc"


#include <algorithm>

namespace cpp2 {

void struct_dep::__clear() {
  a = 0;
  b = 0;
  __isset.__clear();
}

bool struct_dep::operator==(const struct_dep& rhs) const {
  if (!((a == rhs.a))) {
    return false;
  }
  if (!((b == rhs.b))) {
    return false;
  }
  return true;
}

void swap(struct_dep& a, struct_dep& b) {
  using ::std::swap;
  swap(a.a, b.a);
  swap(a.b, b.b);
  swap(a.__isset, b.__isset);
}

template uint32_t struct_dep::read<>(apache::thrift::BinaryProtocolReader*);
template uint32_t struct_dep::write<>(apache::thrift::BinaryProtocolWriter*) const;
template uint32_t struct_dep::serializedSize<>(apache::thrift::BinaryProtocolWriter const*) const;
template uint32_t struct_dep::serializedSizeZC<>(apache::thrift::BinaryProtocolWriter const*) const;
template uint32_t struct_dep::read<>(apache::thrift::CompactProtocolReader*);
template uint32_t struct_dep::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t struct_dep::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t struct_dep::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

} // cpp2
namespace apache { namespace thrift {

}} // apache::thrift
namespace cpp2 {

void struct_dep_msg::__clear() {
  a = 0;
  b = 0;
  __isset.__clear();
}

bool struct_dep_msg::operator==(const struct_dep_msg& rhs) const {
  if (!((a == rhs.a))) {
    return false;
  }
  if (!((b == rhs.b))) {
    return false;
  }
  return true;
}

void swap(struct_dep_msg& a, struct_dep_msg& b) {
  using ::std::swap;
  swap(a.a, b.a);
  swap(a.b, b.b);
  swap(a.__isset, b.__isset);
}

template uint32_t struct_dep_msg::read<>(apache::thrift::BinaryProtocolReader*);
template uint32_t struct_dep_msg::write<>(apache::thrift::BinaryProtocolWriter*) const;
template uint32_t struct_dep_msg::serializedSize<>(apache::thrift::BinaryProtocolWriter const*) const;
template uint32_t struct_dep_msg::serializedSizeZC<>(apache::thrift::BinaryProtocolWriter const*) const;
template uint32_t struct_dep_msg::read<>(apache::thrift::CompactProtocolReader*);
template uint32_t struct_dep_msg::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t struct_dep_msg::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t struct_dep_msg::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

} // cpp2
namespace apache { namespace thrift {

}} // apache::thrift
namespace cpp2 {

} // cpp2