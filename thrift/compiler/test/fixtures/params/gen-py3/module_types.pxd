#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libcpp.string cimport string
from libcpp cimport bool as cbool
from cpython cimport bool as pbool
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from thrift.lib.py3.thrift_server cimport cTException, TException








cdef class Map__i32_List__i32:
    cdef shared_ptr[cmap[int32_t,]] _map
    @staticmethod
    cdef create(shared_ptr[cmap[int32_t,]])

cdef class Map__i32_Set__i32:
    cdef shared_ptr[cmap[int32_t,]] _map
    @staticmethod
    cdef create(shared_ptr[cmap[int32_t,]])

cdef class List__Map__i32_i32:
    cdef shared_ptr[vector[]] _vector
    @staticmethod
    cdef create(shared_ptr[vector[]])

cdef class List__Set__i32:
    cdef shared_ptr[vector[]] _vector
    @staticmethod
    cdef create(shared_ptr[vector[]])

cdef class List__List__Map__i32_Map__i32_Set__i32:
    cdef shared_ptr[vector[]] _vector
    @staticmethod
    cdef create(shared_ptr[vector[]])

cdef extern from "<utility>" namespace "std" nogil:
    cdef shared_ptr[cmap[int32_t,]] move(unique_ptr[cmap[int32_t,]])
    cdef shared_ptr[cmap[int32_t,]] move(unique_ptr[cmap[int32_t,]])
    cdef shared_ptr[vector[]] move(unique_ptr[vector[]])
    cdef shared_ptr[vector[]] move(unique_ptr[vector[]])
    cdef shared_ptr[vector[]] move(unique_ptr[vector[]])

