/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <src/gen-cpp2/NestedContainers.h>
#include <Python.h>
#include <memory.h>

namespace cpp2 {

class NestedContainersWrapper : virtual public NestedContainersSvIf {
  protected:
    PyObject *if_object;
  public:
    explicit NestedContainersWrapper(PyObject *if_object);
    virtual ~NestedContainersWrapper();
    folly::Future<folly::Unit> future_mapList(
        std::unique_ptr<std::map<int32_t,std::vector<int32_t>>> foo
    ) override;
    folly::Future<folly::Unit> future_mapSet(
        std::unique_ptr<std::map<int32_t,std::set<int32_t>>> foo
    ) override;
    folly::Future<folly::Unit> future_listMap(
        std::unique_ptr<std::vector<std::map<int32_t,int32_t>>> foo
    ) override;
    folly::Future<folly::Unit> future_listSet(
        std::unique_ptr<std::vector<std::set<int32_t>>> foo
    ) override;
    folly::Future<folly::Unit> future_turtles(
        std::unique_ptr<std::vector<std::vector<std::map<int32_t,std::map<int32_t,std::set<int32_t>>>>>> foo
    ) override;
};

std::shared_ptr<apache::thrift::ServerInterface> NestedContainersInterface(PyObject *if_object);
} // namespace cpp2
