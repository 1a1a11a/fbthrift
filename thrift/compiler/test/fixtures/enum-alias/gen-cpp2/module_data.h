/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <array>
#include <cstddef>
#include <thrift/lib/cpp/Thrift.h>

#include "thrift/compiler/test/fixtures/enum-alias/gen-cpp2/module_types.h"

namespace cpp2 {

struct _MyEnumEnumDataStorage {
  using type = MyEnum;
  static constexpr const std::size_t size = 3;
  static constexpr const std::array<MyEnum, 3> values = {{
    MyEnum::MyValue1,
    MyEnum::MyValue2,
    MyEnum::MyValue2_dup,
  }};
  static constexpr const std::array<folly::StringPiece, 3> names = {{
    "MyValue1",
    "MyValue2",
    "MyValue2_dup",
  }};
};

} // cpp2
namespace apache { namespace thrift {

template <> struct TEnumDataStorage< ::cpp2::MyEnum> {
  using storage_type =  ::cpp2::_MyEnumEnumDataStorage;
};

}} // apache::thrift

