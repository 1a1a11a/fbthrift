/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include <thrift/lib/cpp2/gen/module_metadata_cpp.h>
#include "thrift/compiler/test/fixtures/constants/gen-cpp2/module_metadata.h"

namespace apache::thrift::detail::metadata {

using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftPrimitiveType = ::apache::thrift::metadata::ThriftPrimitiveType;
using ThriftType = ::apache::thrift::metadata::ThriftType;

void GeneratedEnumMetadata<::cpp2::EmptyEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.EmptyEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_EmptyEnum = res.first->second;
  module_EmptyEnum.name = "module.EmptyEnum";
}
void GeneratedEnumMetadata<::cpp2::City>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.City", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_City = res.first->second;
  module_City.name = "module.City";
  module_City.elements[0] = "NYC";
  module_City.elements[1] = "MPK";
  module_City.elements[2] = "SEA";
  module_City.elements[3] = "LON";
}
void GeneratedEnumMetadata<::cpp2::Company>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.Company", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_Company = res.first->second;
  module_Company.name = "module.Company";
  module_Company.elements[0] = "FACEBOOK";
  module_Company.elements[1] = "WHATSAPP";
  module_Company.elements[2] = "OCULUS";
  module_Company.elements[3] = "INSTAGRAM";
}

void GeneratedStructMetadata<::cpp2::Internship>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.Internship", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_Internship = res.first->second;
  module_Internship.name = "module.Internship";
  module_Internship.is_union = false;
  ::apache::thrift::metadata::ThriftField module_Internship_weeks_1;
  module_Internship_weeks_1.id = 1;
  module_Internship_weeks_1.name = "weeks";
  module_Internship_weeks_1.is_optional = false;
  auto module_Internship_weeks_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_Internship_weeks_1_type->initialize(module_Internship_weeks_1.type);
  module_Internship.fields.push_back(std::move(module_Internship_weeks_1));
  ::apache::thrift::metadata::ThriftField module_Internship_title_2;
  module_Internship_title_2.id = 2;
  module_Internship_title_2.name = "title";
  module_Internship_title_2.is_optional = false;
  auto module_Internship_title_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_Internship_title_2_type->initialize(module_Internship_title_2.type);
  module_Internship.fields.push_back(std::move(module_Internship_title_2));
  ::apache::thrift::metadata::ThriftField module_Internship_employer_3;
  module_Internship_employer_3.id = 3;
  module_Internship_employer_3.name = "employer";
  module_Internship_employer_3.is_optional = true;
  auto module_Internship_employer_3_type = std::make_unique<Enum< ::cpp2::Company>>("module.Company", metadata);
  module_Internship_employer_3_type->initialize(module_Internship_employer_3.type);
  module_Internship.fields.push_back(std::move(module_Internship_employer_3));
}
void GeneratedStructMetadata<::cpp2::UnEnumStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.UnEnumStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_UnEnumStruct = res.first->second;
  module_UnEnumStruct.name = "module.UnEnumStruct";
  module_UnEnumStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_UnEnumStruct_city_1;
  module_UnEnumStruct_city_1.id = 1;
  module_UnEnumStruct_city_1.name = "city";
  module_UnEnumStruct_city_1.is_optional = false;
  auto module_UnEnumStruct_city_1_type = std::make_unique<Enum< ::cpp2::City>>("module.City", metadata);
  module_UnEnumStruct_city_1_type->initialize(module_UnEnumStruct_city_1.type);
  module_UnEnumStruct.fields.push_back(std::move(module_UnEnumStruct_city_1));
}
void GeneratedStructMetadata<::cpp2::Range>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.Range", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_Range = res.first->second;
  module_Range.name = "module.Range";
  module_Range.is_union = false;
  ::apache::thrift::metadata::ThriftField module_Range_min_1;
  module_Range_min_1.id = 1;
  module_Range_min_1.name = "min";
  module_Range_min_1.is_optional = false;
  auto module_Range_min_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_Range_min_1_type->initialize(module_Range_min_1.type);
  module_Range.fields.push_back(std::move(module_Range_min_1));
  ::apache::thrift::metadata::ThriftField module_Range_max_2;
  module_Range_max_2.id = 2;
  module_Range_max_2.name = "max";
  module_Range_max_2.is_optional = false;
  auto module_Range_max_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_Range_max_2_type->initialize(module_Range_max_2.type);
  module_Range.fields.push_back(std::move(module_Range_max_2));
}
void GeneratedStructMetadata<::cpp2::struct1>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.struct1", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_struct1 = res.first->second;
  module_struct1.name = "module.struct1";
  module_struct1.is_union = false;
  ::apache::thrift::metadata::ThriftField module_struct1_a_1;
  module_struct1_a_1.id = 1;
  module_struct1_a_1.name = "a";
  module_struct1_a_1.is_optional = false;
  auto module_struct1_a_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_struct1_a_1_type->initialize(module_struct1_a_1.type);
  module_struct1.fields.push_back(std::move(module_struct1_a_1));
  ::apache::thrift::metadata::ThriftField module_struct1_b_2;
  module_struct1_b_2.id = 2;
  module_struct1_b_2.name = "b";
  module_struct1_b_2.is_optional = false;
  auto module_struct1_b_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_struct1_b_2_type->initialize(module_struct1_b_2.type);
  module_struct1.fields.push_back(std::move(module_struct1_b_2));
}
void GeneratedStructMetadata<::cpp2::struct2>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.struct2", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_struct2 = res.first->second;
  module_struct2.name = "module.struct2";
  module_struct2.is_union = false;
  ::apache::thrift::metadata::ThriftField module_struct2_a_1;
  module_struct2_a_1.id = 1;
  module_struct2_a_1.name = "a";
  module_struct2_a_1.is_optional = false;
  auto module_struct2_a_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_struct2_a_1_type->initialize(module_struct2_a_1.type);
  module_struct2.fields.push_back(std::move(module_struct2_a_1));
  ::apache::thrift::metadata::ThriftField module_struct2_b_2;
  module_struct2_b_2.id = 2;
  module_struct2_b_2.name = "b";
  module_struct2_b_2.is_optional = false;
  auto module_struct2_b_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_struct2_b_2_type->initialize(module_struct2_b_2.type);
  module_struct2.fields.push_back(std::move(module_struct2_b_2));
  ::apache::thrift::metadata::ThriftField module_struct2_c_3;
  module_struct2_c_3.id = 3;
  module_struct2_c_3.name = "c";
  module_struct2_c_3.is_optional = false;
  auto module_struct2_c_3_type = std::make_unique<Struct< ::cpp2::struct1>>("module.struct1", metadata);
  module_struct2_c_3_type->initialize(module_struct2_c_3.type);
  module_struct2.fields.push_back(std::move(module_struct2_c_3));
  ::apache::thrift::metadata::ThriftField module_struct2_d_4;
  module_struct2_d_4.id = 4;
  module_struct2_d_4.name = "d";
  module_struct2_d_4.is_optional = false;
  auto module_struct2_d_4_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_struct2_d_4_type->initialize(module_struct2_d_4.type);
  module_struct2.fields.push_back(std::move(module_struct2_d_4));
}
void GeneratedStructMetadata<::cpp2::struct3>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.struct3", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_struct3 = res.first->second;
  module_struct3.name = "module.struct3";
  module_struct3.is_union = false;
  ::apache::thrift::metadata::ThriftField module_struct3_a_1;
  module_struct3_a_1.id = 1;
  module_struct3_a_1.name = "a";
  module_struct3_a_1.is_optional = false;
  auto module_struct3_a_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_struct3_a_1_type->initialize(module_struct3_a_1.type);
  module_struct3.fields.push_back(std::move(module_struct3_a_1));
  ::apache::thrift::metadata::ThriftField module_struct3_b_2;
  module_struct3_b_2.id = 2;
  module_struct3_b_2.name = "b";
  module_struct3_b_2.is_optional = false;
  auto module_struct3_b_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_struct3_b_2_type->initialize(module_struct3_b_2.type);
  module_struct3.fields.push_back(std::move(module_struct3_b_2));
  ::apache::thrift::metadata::ThriftField module_struct3_c_3;
  module_struct3_c_3.id = 3;
  module_struct3_c_3.name = "c";
  module_struct3_c_3.is_optional = false;
  auto module_struct3_c_3_type = std::make_unique<Struct< ::cpp2::struct2>>("module.struct2", metadata);
  module_struct3_c_3_type->initialize(module_struct3_c_3.type);
  module_struct3.fields.push_back(std::move(module_struct3_c_3));
}
void GeneratedStructMetadata<::cpp2::union1>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.union1", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_union1 = res.first->second;
  module_union1.name = "module.union1";
  module_union1.is_union = true;
  ::apache::thrift::metadata::ThriftField module_union1_i_1;
  module_union1_i_1.id = 1;
  module_union1_i_1.name = "i";
  module_union1_i_1.is_optional = false;
  auto module_union1_i_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_union1_i_1_type->initialize(module_union1_i_1.type);
  module_union1.fields.push_back(std::move(module_union1_i_1));
  ::apache::thrift::metadata::ThriftField module_union1_d_2;
  module_union1_d_2.id = 2;
  module_union1_d_2.name = "d";
  module_union1_d_2.is_optional = false;
  auto module_union1_d_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE);
  module_union1_d_2_type->initialize(module_union1_d_2.type);
  module_union1.fields.push_back(std::move(module_union1_d_2));
}
void GeneratedStructMetadata<::cpp2::union2>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.union2", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_union2 = res.first->second;
  module_union2.name = "module.union2";
  module_union2.is_union = true;
  ::apache::thrift::metadata::ThriftField module_union2_i_1;
  module_union2_i_1.id = 1;
  module_union2_i_1.name = "i";
  module_union2_i_1.is_optional = false;
  auto module_union2_i_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_union2_i_1_type->initialize(module_union2_i_1.type);
  module_union2.fields.push_back(std::move(module_union2_i_1));
  ::apache::thrift::metadata::ThriftField module_union2_d_2;
  module_union2_d_2.id = 2;
  module_union2_d_2.name = "d";
  module_union2_d_2.is_optional = false;
  auto module_union2_d_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE);
  module_union2_d_2_type->initialize(module_union2_d_2.type);
  module_union2.fields.push_back(std::move(module_union2_d_2));
  ::apache::thrift::metadata::ThriftField module_union2_s_3;
  module_union2_s_3.id = 3;
  module_union2_s_3.name = "s";
  module_union2_s_3.is_optional = false;
  auto module_union2_s_3_type = std::make_unique<Struct< ::cpp2::struct1>>("module.struct1", metadata);
  module_union2_s_3_type->initialize(module_union2_s_3.type);
  module_union2.fields.push_back(std::move(module_union2_s_3));
  ::apache::thrift::metadata::ThriftField module_union2_u_4;
  module_union2_u_4.id = 4;
  module_union2_u_4.name = "u";
  module_union2_u_4.is_optional = false;
  auto module_union2_u_4_type = std::make_unique<Union< ::cpp2::union1>>("module.union1", metadata);
  module_union2_u_4_type->initialize(module_union2_u_4.type);
  module_union2.fields.push_back(std::move(module_union2_u_4));
}

} // apache::thrift::detail::metadata
