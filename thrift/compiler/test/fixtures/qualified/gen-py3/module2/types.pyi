#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import thrift.py3.types
import thrift.py3.exceptions
from thrift.py3.types import NOTSET
from thrift.py3.serializer import Protocol
import typing as _typing

import sys
import itertools
from enum import Enum
import module0.types as _module0_types
import module1.types as _module1_types


# Forward Definitions for Structs
class Struct(thrift.py3.types.Struct): ...
class BigStruct(thrift.py3.types.Struct): ...


class Struct(thrift.py3.types.Struct):
    def __init__(
        self, *,
        first: _module0_types.Struct=None,
        second: _module1_types.Struct=None
    ) -> None: ...

    def __call__(
        self, *,
        first: _typing.Union[_module0_types.Struct, NOTSET, None]=NOTSET,
        second: _typing.Union[_module1_types.Struct, NOTSET, None]=NOTSET
    ): ...

    def __reduce__(self) -> _typing.Tuple[Callable, _typing.Tuple[_typing.Type[Struct], bytes]]: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...
    def __bool__(self) -> bool: ...
    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: Struct) -> bool: ...
    def __lt__(self, other: Struct) -> bool: ...

    @property
    def first(self) -> _module0_types.Struct: ...
    @property
    def second(self) -> _module1_types.Struct: ...


class BigStruct(thrift.py3.types.Struct):
    def __init__(
        self, *,
        s: Struct=None,
        id: int=None
    ) -> None: ...

    def __call__(
        self, *,
        s: _typing.Union[Struct, NOTSET, None]=NOTSET,
        id: _typing.Union[int, NOTSET, None]=NOTSET
    ): ...

    def __reduce__(self) -> _typing.Tuple[Callable, _typing.Tuple[_typing.Type[BigStruct], bytes]]: ...
    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...
    def __bool__(self) -> bool: ...
    def __hash__(self) -> int: ...
    def __repr__(self) -> str: ...
    def __eq__(self, other: BigStruct) -> bool: ...
    def __lt__(self, other: BigStruct) -> bool: ...

    @property
    def s(self) -> Struct: ...
    @property
    def id(self) -> int: ...


