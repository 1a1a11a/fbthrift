/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.complex_union;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@SwiftGenerated
@ThriftUnion("ValUnion")
public final class ValUnion {
    private final Object value;
    private final int id;
    private final String name;


    @ThriftConstructor
    public ValUnion(final test.fixtures.complex_union.Val v1) {
        this.value = v1;
        this.id = 1;
        this.name = "v1";
    }

    @ThriftConstructor
    public ValUnion(final test.fixtures.complex_union.Val v2) {
        this.value = v2;
        this.id = 2;
        this.name = "v2";
    }

    @ThriftField(value=1, name="v1", requiredness=Requiredness.NONE)
    public test.fixtures.complex_union.Val getV1() {
        if (this.id != 1) {
            throw new IllegalStateException("Not a v1 element!");
        }
        return (test.fixtures.complex_union.Val) value;
    }

    public boolean isSetV1() {
        return this.id == 1;
    }

    @ThriftField(value=2, name="v2", requiredness=Requiredness.NONE)
    public test.fixtures.complex_union.Val getV2() {
        if (this.id != 2) {
            throw new IllegalStateException("Not a v2 element!");
        }
        return (test.fixtures.complex_union.Val) value;
    }

    public boolean isSetV2() {
        return this.id == 2;
    }

    @ThriftUnionId
    public int getThriftId() {
        return this.id;
    }

    public String getThriftName() {
        return this.name;
    }

    @Override
    public String toString() {
        return toStringHelper(this)
            .add("value", value)
            .add("id", id)
            .add("name", name)
            .add("type", value == null ? "<null>" : value.getClass().getSimpleName())
            .toString();
    }
}
