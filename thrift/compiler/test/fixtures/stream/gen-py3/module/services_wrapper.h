/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <src/gen-cpp2/PubSubStreamingService.h>
#include <folly/python/futures.h>
#include <Python.h>

#include <memory>

namespace cpp2 {

class PubSubStreamingServiceWrapper : virtual public PubSubStreamingServiceSvIf {
  protected:
    PyObject *if_object;
    folly::Executor *executor;
  public:
    explicit PubSubStreamingServiceWrapper(PyObject *if_object, folly::Executor *exc);
    virtual ~PubSubStreamingServiceWrapper();
    folly::Future<apache::thrift::Stream<int32_t>> future_returnstream(
        int32_t i32_from,
        int32_t i32_to
    ) override;
    folly::Future<apache::thrift::Stream<int32_t>> future_streamthrows(
        int32_t foo
    ) override;
    folly::Future<apache::thrift::Stream<int32_t>> future_boththrows(
        int32_t foo
    ) override;
    folly::Future<apache::thrift::ResponseAndStream<int32_t,int32_t>> future_responseandstreamthrows(
        int32_t foo
    ) override;
};

std::shared_ptr<apache::thrift::ServerInterface> PubSubStreamingServiceInterface(PyObject *if_object, folly::Executor *exc);
} // namespace cpp2
