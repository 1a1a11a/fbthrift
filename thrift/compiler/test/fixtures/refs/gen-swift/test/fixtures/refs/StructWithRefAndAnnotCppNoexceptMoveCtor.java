/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.refs;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import org.apache.thrift.*;
import org.apache.thrift.async.*;
import org.apache.thrift.server.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;

@SwiftGenerated
@ThriftStruct(value="StructWithRefAndAnnotCppNoexceptMoveCtor", builder=StructWithRefAndAnnotCppNoexceptMoveCtor.Builder.class)
public final class StructWithRefAndAnnotCppNoexceptMoveCtor {
    @ThriftConstructor
    public StructWithRefAndAnnotCppNoexceptMoveCtor(
        @ThriftField(value=1, name="def_field", requiredness=Requiredness.NONE) final test.fixtures.refs.Empty defField
    ) {
        this.defField = defField;
    }
    
    @ThriftConstructor
    protected StructWithRefAndAnnotCppNoexceptMoveCtor() {
      this.defField = null;
    }
    
    public static class Builder {
        private test.fixtures.refs.Empty defField;
        @ThriftField(value=1, name="def_field", requiredness=Requiredness.NONE)
        public Builder setDefField(test.fixtures.refs.Empty defField) {
            this.defField = defField;
            return this;
        }
    
        public Builder() { }
        public Builder(StructWithRefAndAnnotCppNoexceptMoveCtor other) {
            this.defField = other.defField;
        }
    
        @ThriftConstructor
        public StructWithRefAndAnnotCppNoexceptMoveCtor build() {
            return new StructWithRefAndAnnotCppNoexceptMoveCtor (
                this.defField
            );
        }
    }
    
    private static final TStruct STRUCT_DESC = new TStruct("StructWithRefAndAnnotCppNoexceptMoveCtor");
    private final test.fixtures.refs.Empty defField;
    public static final int _DEF_FIELD = 1;
    private static final TField DEF_FIELD_FIELD_DESC = new TField("defField", TType.STRUCT, (short)1);

    
    @ThriftField(value=1, name="def_field", requiredness=Requiredness.NONE)
    public test.fixtures.refs.Empty getDefField() { return defField; }
    
    @Override
    public String toString() {
        return toStringHelper(this)
            .add("defField", defField)
            .toString();
    }
    
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        StructWithRefAndAnnotCppNoexceptMoveCtor other = (StructWithRefAndAnnotCppNoexceptMoveCtor)o;
    
        return
            Objects.equals(defField, other.defField) &&
            true;
    }
    
    @Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            defField
        });
    }
    
    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.defField != null) {
        oprot.writeFieldBegin(DEF_FIELD_FIELD_DESC);
        this.defField.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
}
