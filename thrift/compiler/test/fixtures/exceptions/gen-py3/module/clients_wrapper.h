/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <src/gen-cpp2/Raiser.h>

#include <folly/Try.h>
#include <folly/Unit.h>
#include <folly/io/async/EventBase.h>

#include <Python.h>

#include <cstdint>
#include <functional>
#include <map>
#include <memory>
#include <set>
#include <vector>

namespace cpp2 {

class RaiserClientWrapper {
  protected:
    std::shared_ptr<cpp2::RaiserAsyncClient> async_client;
    std::shared_ptr<folly::EventBase> event_base;
  public:
    explicit RaiserClientWrapper(
      std::shared_ptr<cpp2::RaiserAsyncClient> async_client,
      std::shared_ptr<folly::EventBase> event_base);
    virtual ~RaiserClientWrapper();
    void doBland(
      std::function<void(PyObject*, folly::Try<folly::Unit>)> callback,
      PyObject* py_future);
    void doRaise(
      std::function<void(PyObject*, folly::Try<folly::Unit>)> callback,
      PyObject* py_future);
    void get200(
      std::function<void(PyObject*, folly::Try<std::string>)> callback,
      PyObject* py_future);
    void get500(
      std::function<void(PyObject*, folly::Try<std::string>)> callback,
      PyObject* py_future);
};


} // namespace cpp2
