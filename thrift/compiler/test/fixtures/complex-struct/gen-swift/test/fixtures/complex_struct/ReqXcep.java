/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.complex_struct;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

@SwiftGenerated
@ThriftStruct("reqXcep")
public final class ReqXcep extends java.lang.Exception {
    private static final long serialVersionUID = 1L;

    @ThriftConstructor
    public ReqXcep(
        @ThriftField(value=1, name="message", requiredness=Requiredness.REQUIRED) final String message,
        @ThriftField(value=2, name="errorCode", requiredness=Requiredness.REQUIRED) final int errorCode
    ) {
        this.message = message;
        this.errorCode = errorCode;
    }
    
    @ThriftConstructor
    protected ReqXcep() {
      this.message = null;
      this.errorCode = 0;
    }
    
    public static class Builder {
        private String message;
        @ThriftField(value=1, name="message", requiredness=Requiredness.REQUIRED)
        public Builder setMessage(String message) {
            this.message = message;
            return this;
        }
        private int errorCode;
        @ThriftField(value=2, name="errorCode", requiredness=Requiredness.REQUIRED)
        public Builder setErrorCode(int errorCode) {
            this.errorCode = errorCode;
            return this;
        }
    
        public Builder() { }
        public Builder(ReqXcep other) {
            this.message = other.message;
            this.errorCode = other.errorCode;
        }
    
        @ThriftConstructor
        public ReqXcep build() {
            return new ReqXcep (
                this.message,
                this.errorCode
            );
        }
    }
    
    private final String message;
    private final int errorCode;

    
    @ThriftField(value=1, name="message", requiredness=Requiredness.REQUIRED)
    public String getMessage() { return message; }
        
    @ThriftField(value=2, name="errorCode", requiredness=Requiredness.REQUIRED)
    public int getErrorCode() { return errorCode; }
    }
