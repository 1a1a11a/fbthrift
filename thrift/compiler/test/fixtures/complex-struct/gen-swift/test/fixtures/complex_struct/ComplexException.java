/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.complex_struct;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;

@SwiftGenerated
@ThriftStruct("complexException")
public final class ComplexException extends java.lang.Exception {
    private static final long serialVersionUID = 1L;

    @ThriftConstructor
    public ComplexException(
        @ThriftField(value=1, name="message", requiredness=Requiredness.NONE) final String message,
        @ThriftField(value=2, name="listStrings", requiredness=Requiredness.NONE) final List<String> listStrings,
        @ThriftField(value=3, name="errorEnum", requiredness=Requiredness.NONE) final test.fixtures.complex_struct.MyEnum errorEnum,
        @ThriftField(value=4, name="unionError", requiredness=Requiredness.OPTIONAL) final test.fixtures.complex_struct.MyUnion unionError,
        @ThriftField(value=5, name="structError", requiredness=Requiredness.NONE) final test.fixtures.complex_struct.MyStruct structError,
        @ThriftField(value=6, name="lsMap", requiredness=Requiredness.NONE) final it.unimi.dsi.fastutil.longs.Long2ObjectArrayMap<String> lsMap
    ) {
        this.message = message;
        this.listStrings = listStrings;
        this.errorEnum = errorEnum;
        this.unionError = unionError;
        this.structError = structError;
        this.lsMap = lsMap;
    }
    
    @ThriftConstructor
    protected ComplexException() {
      this.message = null;
      this.listStrings = null;
      this.errorEnum = null;
      this.unionError = null;
      this.structError = null;
      this.lsMap = null;
    }
    
    public static class Builder {
        private String message;
        @ThriftField(value=1, name="message", requiredness=Requiredness.NONE)
        public Builder setMessage(String message) {
            this.message = message;
            return this;
        }
        private List<String> listStrings;
        @ThriftField(value=2, name="listStrings", requiredness=Requiredness.NONE)
        public Builder setListStrings(List<String> listStrings) {
            this.listStrings = listStrings;
            return this;
        }
        private test.fixtures.complex_struct.MyEnum errorEnum;
        @ThriftField(value=3, name="errorEnum", requiredness=Requiredness.NONE)
        public Builder setErrorEnum(test.fixtures.complex_struct.MyEnum errorEnum) {
            this.errorEnum = errorEnum;
            return this;
        }
        private test.fixtures.complex_struct.MyUnion unionError;
        @ThriftField(value=4, name="unionError", requiredness=Requiredness.OPTIONAL)
        public Builder setUnionError(test.fixtures.complex_struct.MyUnion unionError) {
            this.unionError = unionError;
            return this;
        }
        private test.fixtures.complex_struct.MyStruct structError;
        @ThriftField(value=5, name="structError", requiredness=Requiredness.NONE)
        public Builder setStructError(test.fixtures.complex_struct.MyStruct structError) {
            this.structError = structError;
            return this;
        }
        private it.unimi.dsi.fastutil.longs.Long2ObjectArrayMap<String> lsMap;
        @ThriftField(value=6, name="lsMap", requiredness=Requiredness.NONE)
        public Builder setLsMap(it.unimi.dsi.fastutil.longs.Long2ObjectArrayMap<String> lsMap) {
            this.lsMap = lsMap;
            return this;
        }
    
        public Builder() { }
        public Builder(ComplexException other) {
            this.message = other.message;
            this.listStrings = other.listStrings;
            this.errorEnum = other.errorEnum;
            this.unionError = other.unionError;
            this.structError = other.structError;
            this.lsMap = other.lsMap;
        }
    
        @ThriftConstructor
        public ComplexException build() {
            return new ComplexException (
                this.message,
                this.listStrings,
                this.errorEnum,
                this.unionError,
                this.structError,
                this.lsMap
            );
        }
    }
    
    private final String message;
    private final List<String> listStrings;
    private final test.fixtures.complex_struct.MyEnum errorEnum;
    private final test.fixtures.complex_struct.MyUnion unionError;
    private final test.fixtures.complex_struct.MyStruct structError;
    private final it.unimi.dsi.fastutil.longs.Long2ObjectArrayMap<String> lsMap;

    
    @ThriftField(value=1, name="message", requiredness=Requiredness.NONE)
    public String getMessage() { return message; }
        
    @ThriftField(value=2, name="listStrings", requiredness=Requiredness.NONE)
    public List<String> getListStrings() { return listStrings; }
        
    @ThriftField(value=3, name="errorEnum", requiredness=Requiredness.NONE)
    public test.fixtures.complex_struct.MyEnum getErrorEnum() { return errorEnum; }
        
    @ThriftField(value=4, name="unionError", requiredness=Requiredness.OPTIONAL)
    public test.fixtures.complex_struct.MyUnion getUnionError() { return unionError; }
        
    @ThriftField(value=5, name="structError", requiredness=Requiredness.NONE)
    public test.fixtures.complex_struct.MyStruct getStructError() { return structError; }
        
    @ThriftField(value=6, name="lsMap", requiredness=Requiredness.NONE)
    public it.unimi.dsi.fastutil.longs.Long2ObjectArrayMap<String> getLsMap() { return lsMap; }
    }
