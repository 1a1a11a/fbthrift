/**
 * Autogenerated by Thrift for src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include  "thrift/compiler/test/fixtures/fatal/gen-cpp2/reflection_dep_B_fatal_types.h"
#include  "thrift/compiler/test/fixtures/fatal/gen-cpp2/reflection_dep_C_fatal_types.h"

#include "thrift/compiler/test/fixtures/fatal/gen-cpp2/module_types.h"

#include "thrift/compiler/test/fixtures/fatal/gen-cpp2/module_fatal.h"

#include <fatal/type/traits.h>
#include <fatal/type/list.h>

namespace test_cpp2 { namespace cpp_reflection {

namespace __fbthrift_refl {

class structA_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_a {
    using owner = ::test_cpp2::cpp_reflection::structA;
    using name = __fbthrift_strings_module::a;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>;
  };
  struct __fbthrift_member_b {
    using owner = ::test_cpp2::cpp_reflection::structA;
    using name = __fbthrift_strings_module::b;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>;
  };

  struct __fbthrift_member {
    using a = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_a>;
    using b = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_b>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::structA;
  using name = __fbthrift_strings_module::structA;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::a,
      member::b
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(9663308154247018828ull)
  >;
};

class structB_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_c {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_d {
        struct __fbthrift_keys {
          using another_annotation = __fbthrift_strings_module::another_annotation;
          using some_annotation = __fbthrift_strings_module::some_annotation;
        };

        struct __fbthrift_values {
          using another_annotation = ::fatal::sequence<char, 'a', 'n', 'o', 't', 'h', 'e', 'r', ' ', 'v', 'a', 'l', 'u', 'e'>;
          using some_annotation = ::fatal::sequence<char, 's', 'o', 'm', 'e', ' ', 'v', 'a', 'l', 'u', 'e'>;
        };

       public:
        using keys = __fbthrift_keys;
        using values = __fbthrift_values;
        using map = ::fatal::list<
            ::apache::thrift::annotation<keys::another_annotation, values::another_annotation>,
            ::apache::thrift::annotation<keys::some_annotation, values::some_annotation>
        >;
      };

     public:
      using c = ::apache::thrift::reflected_annotations<__fbthrift_field_c>;
      using d = ::apache::thrift::reflected_annotations<__fbthrift_field_d>;
    };

    struct __fbthrift_keys {
      using multi_line_annotation = __fbthrift_strings_module::multi_line_annotation;
      using some_annotation = __fbthrift_strings_module::some_annotation;
      using some_other_annotation = __fbthrift_strings_module::some_other_annotation;
    };

    struct __fbthrift_values {
      using multi_line_annotation = ::fatal::sequence<char, 'l', 'i', 'n', 'e', ' ', 'o', 'n', 'e', '\n', 'l', 'i', 'n', 'e', ' ', 't', 'w', 'o'>;
      using some_annotation = ::fatal::sequence<char, 't', 'h', 'i', 's', ' ', 'i', 's', ' ', 'i', 't', 's', ' ', 'v', 'a', 'l', 'u', 'e'>;
      using some_other_annotation = ::fatal::sequence<char, 't', 'h', 'i', 's', ' ', 'i', 's', ' ', 'i', 't', 's', ' ', 'o', 't', 'h', 'e', 'r', ' ', 'v', 'a', 'l', 'u', 'e'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
        ::apache::thrift::annotation<keys::multi_line_annotation, values::multi_line_annotation>,
        ::apache::thrift::annotation<keys::some_annotation, values::some_annotation>,
        ::apache::thrift::annotation<keys::some_other_annotation, values::some_other_annotation>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_c {
    using owner = ::test_cpp2::cpp_reflection::structB;
    using name = __fbthrift_strings_module::c;
    using type = double;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::c>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::c>;
    using type_class = ::apache::thrift::type_class::floating_point;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::c>;
  };
  struct __fbthrift_member_d {
    using owner = ::test_cpp2::cpp_reflection::structB;
    using name = __fbthrift_strings_module::d;
    using type = bool;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::d>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::d>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::d>;
  };

  struct __fbthrift_member {
    using c = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_c>;
    using d = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_d>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::structB;
  using name = __fbthrift_strings_module::structB;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::c,
      member::d
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(10239267202130913964ull)
  >;
};

class structC_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_c {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_d {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_e {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_f {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_g {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_h {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_i {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_j {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_j1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_j2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_j3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_k {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_k1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_k2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_k3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_l {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_l1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_l2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_l3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_m1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_m2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_m3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_n1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_n2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_n3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_o1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_o2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_o3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
      using c = ::apache::thrift::reflected_annotations<__fbthrift_field_c>;
      using d = ::apache::thrift::reflected_annotations<__fbthrift_field_d>;
      using e = ::apache::thrift::reflected_annotations<__fbthrift_field_e>;
      using f = ::apache::thrift::reflected_annotations<__fbthrift_field_f>;
      using g = ::apache::thrift::reflected_annotations<__fbthrift_field_g>;
      using h = ::apache::thrift::reflected_annotations<__fbthrift_field_h>;
      using i = ::apache::thrift::reflected_annotations<__fbthrift_field_i>;
      using j = ::apache::thrift::reflected_annotations<__fbthrift_field_j>;
      using j1 = ::apache::thrift::reflected_annotations<__fbthrift_field_j1>;
      using j2 = ::apache::thrift::reflected_annotations<__fbthrift_field_j2>;
      using j3 = ::apache::thrift::reflected_annotations<__fbthrift_field_j3>;
      using k = ::apache::thrift::reflected_annotations<__fbthrift_field_k>;
      using k1 = ::apache::thrift::reflected_annotations<__fbthrift_field_k1>;
      using k2 = ::apache::thrift::reflected_annotations<__fbthrift_field_k2>;
      using k3 = ::apache::thrift::reflected_annotations<__fbthrift_field_k3>;
      using l = ::apache::thrift::reflected_annotations<__fbthrift_field_l>;
      using l1 = ::apache::thrift::reflected_annotations<__fbthrift_field_l1>;
      using l2 = ::apache::thrift::reflected_annotations<__fbthrift_field_l2>;
      using l3 = ::apache::thrift::reflected_annotations<__fbthrift_field_l3>;
      using m1 = ::apache::thrift::reflected_annotations<__fbthrift_field_m1>;
      using m2 = ::apache::thrift::reflected_annotations<__fbthrift_field_m2>;
      using m3 = ::apache::thrift::reflected_annotations<__fbthrift_field_m3>;
      using n1 = ::apache::thrift::reflected_annotations<__fbthrift_field_n1>;
      using n2 = ::apache::thrift::reflected_annotations<__fbthrift_field_n2>;
      using n3 = ::apache::thrift::reflected_annotations<__fbthrift_field_n3>;
      using o1 = ::apache::thrift::reflected_annotations<__fbthrift_field_o1>;
      using o2 = ::apache::thrift::reflected_annotations<__fbthrift_field_o2>;
      using o3 = ::apache::thrift::reflected_annotations<__fbthrift_field_o3>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_a {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::a;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>;
  };
  struct __fbthrift_member_b {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::b;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>;
  };
  struct __fbthrift_member_c {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::c;
    using type = double;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::c>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::c>;
    using type_class = ::apache::thrift::type_class::floating_point;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::c>;
  };
  struct __fbthrift_member_d {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::d;
    using type = bool;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::d>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::d>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::d>;
  };
  struct __fbthrift_member_e {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::e;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::e>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::e>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::e>;
  };
  struct __fbthrift_member_f {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::f;
    using type =  ::test_cpp2::cpp_reflection::enum2;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::f>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::f>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::f>;
  };
  struct __fbthrift_member_g {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::g;
    using type =  ::test_cpp2::cpp_reflection::union1;
    static constexpr ::apache::thrift::field_id_t id = 7;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::g>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::g>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::g>;
  };
  struct __fbthrift_member_h {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::h;
    using type =  ::test_cpp2::cpp_reflection::unionA;
    static constexpr ::apache::thrift::field_id_t id = 8;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::h>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::h>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::h>;
  };
  struct __fbthrift_member_i {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::i;
    using type =  ::test_cpp2::cpp_reflection::unionA;
    static constexpr ::apache::thrift::field_id_t id = 9;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::i>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::i>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::i>;
  };
  struct __fbthrift_member_j {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::j;
    using type = ::std::vector<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 10;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::j>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::j>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::j>;
  };
  struct __fbthrift_member_j1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::j1;
    using type = ::std::vector<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 11;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::j1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::j1>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::j1>;
  };
  struct __fbthrift_member_j2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::j2;
    using type = ::std::vector< ::test_cpp2::cpp_reflection::enum1>;
    static constexpr ::apache::thrift::field_id_t id = 12;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::j2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::j2>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::j2>;
  };
  struct __fbthrift_member_j3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::j3;
    using type = ::std::vector< ::test_cpp2::cpp_reflection::structA>;
    static constexpr ::apache::thrift::field_id_t id = 13;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::j3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::j3>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::j3>;
  };
  struct __fbthrift_member_k {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::k;
    using type = ::std::set<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 14;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::k>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::k>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::k>;
  };
  struct __fbthrift_member_k1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::k1;
    using type = ::std::set<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 15;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::k1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::k1>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::k1>;
  };
  struct __fbthrift_member_k2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::k2;
    using type = ::std::set< ::test_cpp2::cpp_reflection::enum2>;
    static constexpr ::apache::thrift::field_id_t id = 16;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::k2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::k2>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::k2>;
  };
  struct __fbthrift_member_k3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::k3;
    using type = ::std::set< ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 17;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::k3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::k3>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::k3>;
  };
  struct __fbthrift_member_l {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::l;
    using type = ::std::map<int32_t, int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 18;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::l>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::l>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::l>;
  };
  struct __fbthrift_member_l1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::l1;
    using type = ::std::map<int32_t, int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 19;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::l1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::l1>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::l1>;
  };
  struct __fbthrift_member_l2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::l2;
    using type = ::std::map<int32_t,  ::test_cpp2::cpp_reflection::enum1>;
    static constexpr ::apache::thrift::field_id_t id = 20;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::l2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::l2>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::l2>;
  };
  struct __fbthrift_member_l3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::l3;
    using type = ::std::map<int32_t,  ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 21;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::l3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::l3>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::integral, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::l3>;
  };
  struct __fbthrift_member_m1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::m1;
    using type = ::std::map< ::test_cpp2::cpp_reflection::enum1, int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 22;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::m1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::m1>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::enumeration, ::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::m1>;
  };
  struct __fbthrift_member_m2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::m2;
    using type = ::std::map< ::test_cpp2::cpp_reflection::enum1,  ::test_cpp2::cpp_reflection::enum2>;
    static constexpr ::apache::thrift::field_id_t id = 23;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::m2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::m2>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::enumeration, ::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::m2>;
  };
  struct __fbthrift_member_m3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::m3;
    using type = ::std::map< ::test_cpp2::cpp_reflection::enum1,  ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 24;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::m3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::m3>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::enumeration, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::m3>;
  };
  struct __fbthrift_member_n1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::n1;
    using type = ::std::map<::std::string, int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 25;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::n1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::n1>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::n1>;
  };
  struct __fbthrift_member_n2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::n2;
    using type = ::std::map<::std::string,  ::test_cpp2::cpp_reflection::enum1>;
    static constexpr ::apache::thrift::field_id_t id = 26;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::n2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::n2>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::n2>;
  };
  struct __fbthrift_member_n3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::n3;
    using type = ::std::map<::std::string,  ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 27;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::n3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::n3>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::n3>;
  };
  struct __fbthrift_member_o1 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::o1;
    using type = ::std::map< ::test_cpp2::cpp_reflection::structA, int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 28;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::o1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::o1>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::structure, ::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::o1>;
  };
  struct __fbthrift_member_o2 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::o2;
    using type = ::std::map< ::test_cpp2::cpp_reflection::structA,  ::test_cpp2::cpp_reflection::enum1>;
    static constexpr ::apache::thrift::field_id_t id = 29;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::o2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::o2>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::structure, ::apache::thrift::type_class::enumeration>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::o2>;
  };
  struct __fbthrift_member_o3 {
    using owner = ::test_cpp2::cpp_reflection::structC;
    using name = __fbthrift_strings_module::o3;
    using type = ::std::map< ::test_cpp2::cpp_reflection::structA,  ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 30;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::o3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::o3>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::structure, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::o3>;
  };

  struct __fbthrift_member {
    using a = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_a>;
    using b = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_b>;
    using c = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_c>;
    using d = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_d>;
    using e = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_e>;
    using f = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_f>;
    using g = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_g>;
    using h = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_h>;
    using i = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_i>;
    using j = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_j>;
    using j1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_j1>;
    using j2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_j2>;
    using j3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_j3>;
    using k = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_k>;
    using k1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_k1>;
    using k2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_k2>;
    using k3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_k3>;
    using l = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_l>;
    using l1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_l1>;
    using l2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_l2>;
    using l3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_l3>;
    using m1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_m1>;
    using m2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_m2>;
    using m3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_m3>;
    using n1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_n1>;
    using n2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_n2>;
    using n3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_n3>;
    using o1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_o1>;
    using o2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_o2>;
    using o3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_o3>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::structC;
  using name = __fbthrift_strings_module::structC;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::a,
      member::b,
      member::c,
      member::d,
      member::e,
      member::f,
      member::g,
      member::h,
      member::i,
      member::j,
      member::j1,
      member::j2,
      member::j3,
      member::k,
      member::k1,
      member::k2,
      member::k3,
      member::l,
      member::l1,
      member::l2,
      member::l3,
      member::m1,
      member::m2,
      member::m3,
      member::n1,
      member::n2,
      member::n3,
      member::o1,
      member::o2,
      member::o3
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(18130273386912691148ull)
  >;
};

class struct1_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_field0 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field4 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field5 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using field0 = ::apache::thrift::reflected_annotations<__fbthrift_field_field0>;
      using field1 = ::apache::thrift::reflected_annotations<__fbthrift_field_field1>;
      using field2 = ::apache::thrift::reflected_annotations<__fbthrift_field_field2>;
      using field3 = ::apache::thrift::reflected_annotations<__fbthrift_field_field3>;
      using field4 = ::apache::thrift::reflected_annotations<__fbthrift_field_field4>;
      using field5 = ::apache::thrift::reflected_annotations<__fbthrift_field_field5>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_field0 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field0;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field0>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field0>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field0>;
  };
  struct __fbthrift_member_field1 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field1;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::optional;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field1>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field1>;
  };
  struct __fbthrift_member_field2 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field2;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field2>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field2>;
  };
  struct __fbthrift_member_field3 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field3;
    using type =  ::test_cpp2::cpp_reflection::enum2;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field3>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field3>;
  };
  struct __fbthrift_member_field4 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field4;
    using type =  ::test_cpp2::cpp_reflection::union1;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::optional;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field4>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field4>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field4>;
  };
  struct __fbthrift_member_field5 {
    using owner = ::test_cpp2::cpp_reflection::struct1;
    using name = __fbthrift_strings_module::field5;
    using type =  ::test_cpp2::cpp_reflection::union2;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field5>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field5>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field5>;
  };

  struct __fbthrift_member {
    using field0 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field0>;
    using field1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field1>;
    using field2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field2>;
    using field3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field3>;
    using field4 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field4>;
    using field5 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field5>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct1;
  using name = __fbthrift_strings_module::struct1;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::field0,
      member::field1,
      member::field2,
      member::field3,
      member::field4,
      member::field5
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(18317194148543753228ull)
  >;
};

class struct2_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_fieldA {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldB {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldC {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldD {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldE {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldF {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldG {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using fieldA = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldA>;
      using fieldB = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldB>;
      using fieldC = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldC>;
      using fieldD = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldD>;
      using fieldE = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldE>;
      using fieldF = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldF>;
      using fieldG = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldG>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_fieldA {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldA;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldA>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldA>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldA>;
  };
  struct __fbthrift_member_fieldB {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldB;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldB>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldB>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldB>;
  };
  struct __fbthrift_member_fieldC {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldC;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldC>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldC>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldC>;
  };
  struct __fbthrift_member_fieldD {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldD;
    using type =  ::test_cpp2::cpp_reflection::enum2;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldD>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldD>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldD>;
  };
  struct __fbthrift_member_fieldE {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldE;
    using type =  ::test_cpp2::cpp_reflection::union1;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldE>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldE>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldE>;
  };
  struct __fbthrift_member_fieldF {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldF;
    using type =  ::test_cpp2::cpp_reflection::union2;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldF>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldF>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldF>;
  };
  struct __fbthrift_member_fieldG {
    using owner = ::test_cpp2::cpp_reflection::struct2;
    using name = __fbthrift_strings_module::fieldG;
    using type =  ::test_cpp2::cpp_reflection::struct1;
    static constexpr ::apache::thrift::field_id_t id = 7;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldG>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldG>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldG>;
  };

  struct __fbthrift_member {
    using fieldA = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldA>;
    using fieldB = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldB>;
    using fieldC = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldC>;
    using fieldD = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldD>;
    using fieldE = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldE>;
    using fieldF = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldF>;
    using fieldG = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldG>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct2;
  using name = __fbthrift_strings_module::struct2;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::fieldA,
      member::fieldB,
      member::fieldC,
      member::fieldD,
      member::fieldE,
      member::fieldF,
      member::fieldG
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(13919930284671800588ull)
  >;
};

class struct3_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_fieldA {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldB {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldC {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldD {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldE {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldF {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldG {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldH {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldI {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldJ {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldK {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldL {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldM {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldN {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldO {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldP {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldQ {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fieldR {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using fieldA = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldA>;
      using fieldB = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldB>;
      using fieldC = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldC>;
      using fieldD = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldD>;
      using fieldE = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldE>;
      using fieldF = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldF>;
      using fieldG = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldG>;
      using fieldH = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldH>;
      using fieldI = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldI>;
      using fieldJ = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldJ>;
      using fieldK = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldK>;
      using fieldL = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldL>;
      using fieldM = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldM>;
      using fieldN = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldN>;
      using fieldO = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldO>;
      using fieldP = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldP>;
      using fieldQ = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldQ>;
      using fieldR = ::apache::thrift::reflected_annotations<__fbthrift_field_fieldR>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_fieldA {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldA;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldA>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldA>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldA>;
  };
  struct __fbthrift_member_fieldB {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldB;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldB>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldB>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldB>;
  };
  struct __fbthrift_member_fieldC {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldC;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldC>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldC>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldC>;
  };
  struct __fbthrift_member_fieldD {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldD;
    using type =  ::test_cpp2::cpp_reflection::enum2;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldD>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldD>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldD>;
  };
  struct __fbthrift_member_fieldE {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldE;
    using type =  ::test_cpp2::cpp_reflection::union1;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldE>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldE>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldE>;
  };
  struct __fbthrift_member_fieldF {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldF;
    using type =  ::test_cpp2::cpp_reflection::union2;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldF>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldF>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldF>;
  };
  struct __fbthrift_member_fieldG {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldG;
    using type =  ::test_cpp2::cpp_reflection::struct1;
    static constexpr ::apache::thrift::field_id_t id = 7;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldG>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldG>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldG>;
  };
  struct __fbthrift_member_fieldH {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldH;
    using type =  ::test_cpp2::cpp_reflection::union2;
    static constexpr ::apache::thrift::field_id_t id = 8;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldH>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldH>;
    using type_class = ::apache::thrift::type_class::variant;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldH>;
  };
  struct __fbthrift_member_fieldI {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldI;
    using type = ::std::vector<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 9;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldI>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldI>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldI>;
  };
  struct __fbthrift_member_fieldJ {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldJ;
    using type = ::std::vector<::std::string>;
    static constexpr ::apache::thrift::field_id_t id = 10;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldJ>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldJ>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::string>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldJ>;
  };
  struct __fbthrift_member_fieldK {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldK;
    using type = ::std::vector<::std::string>;
    static constexpr ::apache::thrift::field_id_t id = 11;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldK>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldK>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::string>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldK>;
  };
  struct __fbthrift_member_fieldL {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldL;
    using type = ::std::vector< ::test_cpp2::cpp_reflection::structA>;
    static constexpr ::apache::thrift::field_id_t id = 12;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldL>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldL>;
    using type_class = ::apache::thrift::type_class::list<::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldL>;
  };
  struct __fbthrift_member_fieldM {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldM;
    using type = ::std::set<int32_t>;
    static constexpr ::apache::thrift::field_id_t id = 13;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldM>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldM>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::integral>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldM>;
  };
  struct __fbthrift_member_fieldN {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldN;
    using type = ::std::set<::std::string>;
    static constexpr ::apache::thrift::field_id_t id = 14;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldN>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldN>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::string>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldN>;
  };
  struct __fbthrift_member_fieldO {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldO;
    using type = ::std::set<::std::string>;
    static constexpr ::apache::thrift::field_id_t id = 15;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldO>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldO>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::string>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldO>;
  };
  struct __fbthrift_member_fieldP {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldP;
    using type = ::std::set< ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 16;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldP>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldP>;
    using type_class = ::apache::thrift::type_class::set<::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldP>;
  };
  struct __fbthrift_member_fieldQ {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldQ;
    using type = ::std::map<::std::string,  ::test_cpp2::cpp_reflection::structA>;
    static constexpr ::apache::thrift::field_id_t id = 17;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldQ>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldQ>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldQ>;
  };
  struct __fbthrift_member_fieldR {
    using owner = ::test_cpp2::cpp_reflection::struct3;
    using name = __fbthrift_strings_module::fieldR;
    using type = ::std::map<::std::string,  ::test_cpp2::cpp_reflection::structB>;
    static constexpr ::apache::thrift::field_id_t id = 18;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fieldR>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fieldR>;
    using type_class = ::apache::thrift::type_class::map<::apache::thrift::type_class::string, ::apache::thrift::type_class::structure>;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fieldR>;
  };

  struct __fbthrift_member {
    using fieldA = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldA>;
    using fieldB = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldB>;
    using fieldC = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldC>;
    using fieldD = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldD>;
    using fieldE = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldE>;
    using fieldF = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldF>;
    using fieldG = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldG>;
    using fieldH = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldH>;
    using fieldI = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldI>;
    using fieldJ = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldJ>;
    using fieldK = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldK>;
    using fieldL = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldL>;
    using fieldM = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldM>;
    using fieldN = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldN>;
    using fieldO = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldO>;
    using fieldP = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldP>;
    using fieldQ = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldQ>;
    using fieldR = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fieldR>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct3;
  using name = __fbthrift_strings_module::struct3;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::fieldA,
      member::fieldB,
      member::fieldC,
      member::fieldD,
      member::fieldE,
      member::fieldF,
      member::fieldG,
      member::fieldH,
      member::fieldI,
      member::fieldJ,
      member::fieldK,
      member::fieldL,
      member::fieldM,
      member::fieldN,
      member::fieldO,
      member::fieldP,
      member::fieldQ,
      member::fieldR
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(16392874475279945260ull)
  >;
};

class struct4_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_field0 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field3 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using field0 = ::apache::thrift::reflected_annotations<__fbthrift_field_field0>;
      using field1 = ::apache::thrift::reflected_annotations<__fbthrift_field_field1>;
      using field2 = ::apache::thrift::reflected_annotations<__fbthrift_field_field2>;
      using field3 = ::apache::thrift::reflected_annotations<__fbthrift_field_field3>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_field0 {
    using owner = ::test_cpp2::cpp_reflection::struct4;
    using name = __fbthrift_strings_module::field0;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field0>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field0>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field0>;
  };
  struct __fbthrift_member_field1 {
    using owner = ::test_cpp2::cpp_reflection::struct4;
    using name = __fbthrift_strings_module::field1;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::optional;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field1>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field1>;
  };
  struct __fbthrift_member_field2 {
    using owner = ::test_cpp2::cpp_reflection::struct4;
    using name = __fbthrift_strings_module::field2;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field2>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field2>;
  };
  struct __fbthrift_member_field3 {
    using owner = ::test_cpp2::cpp_reflection::struct4;
    using name = __fbthrift_strings_module::field3;
    using type =  ::test_cpp2::cpp_reflection::structA;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field3>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field3>;
  };

  struct __fbthrift_member {
    using field0 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field0>;
    using field1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field1>;
    using field2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field2>;
    using field3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field3>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct4;
  using name = __fbthrift_strings_module::struct4;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::field0,
      member::field1,
      member::field2,
      member::field3
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(7898252530621438604ull)
  >;
};

class struct5_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_field0 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field1 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field2 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field3 {
        struct __fbthrift_keys {
          using annotate_here = __fbthrift_strings_module::annotate_here;
        };

        struct __fbthrift_values {
          using annotate_here = ::fatal::sequence<char, 'w', 'i', 't', 'h', ' ', 't', 'e', 'x', 't'>;
        };

       public:
        using keys = __fbthrift_keys;
        using values = __fbthrift_values;
        using map = ::fatal::list<
            ::apache::thrift::annotation<keys::annotate_here, values::annotate_here>
        >;
      };

      class __fbthrift_field_field4 {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using field0 = ::apache::thrift::reflected_annotations<__fbthrift_field_field0>;
      using field1 = ::apache::thrift::reflected_annotations<__fbthrift_field_field1>;
      using field2 = ::apache::thrift::reflected_annotations<__fbthrift_field_field2>;
      using field3 = ::apache::thrift::reflected_annotations<__fbthrift_field_field3>;
      using field4 = ::apache::thrift::reflected_annotations<__fbthrift_field_field4>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_field0 {
    using owner = ::test_cpp2::cpp_reflection::struct5;
    using name = __fbthrift_strings_module::field0;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field0>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field0>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field0>;
  };
  struct __fbthrift_member_field1 {
    using owner = ::test_cpp2::cpp_reflection::struct5;
    using name = __fbthrift_strings_module::field1;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::optional;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field1>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field1>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field1>;
  };
  struct __fbthrift_member_field2 {
    using owner = ::test_cpp2::cpp_reflection::struct5;
    using name = __fbthrift_strings_module::field2;
    using type =  ::test_cpp2::cpp_reflection::enum1;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field2>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field2>;
    using type_class = ::apache::thrift::type_class::enumeration;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field2>;
  };
  struct __fbthrift_member_field3 {
    using owner = ::test_cpp2::cpp_reflection::struct5;
    using name = __fbthrift_strings_module::field3;
    using type =  ::test_cpp2::cpp_reflection::structA;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field3>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field3>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field3>;
  };
  struct __fbthrift_member_field4 {
    using owner = ::test_cpp2::cpp_reflection::struct5;
    using name = __fbthrift_strings_module::field4;
    using type =  ::test_cpp2::cpp_reflection::structB;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field4>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field4>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field4>;
  };

  struct __fbthrift_member {
    using field0 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field0>;
    using field1 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field1>;
    using field2 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field2>;
    using field3 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field3>;
    using field4 = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field4>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct5;
  using name = __fbthrift_strings_module::struct5;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::field0,
      member::field1,
      member::field2,
      member::field3,
      member::field4
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(16358384009565610188ull)
  >;
};

class struct_binary_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_bi {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using bi = ::apache::thrift::reflected_annotations<__fbthrift_field_bi>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_bi {
    using owner = ::test_cpp2::cpp_reflection::struct_binary;
    using name = __fbthrift_strings_module::bi;
    using type = ::std::string;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::bi>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::bi>;
    using type_class = ::apache::thrift::type_class::binary;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::bi>;
  };

  struct __fbthrift_member {
    using bi = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_bi>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct_binary;
  using name = __fbthrift_strings_module::struct_binary;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::bi
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(6812073435240150444ull)
  >;
};

class dep_A_struct_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_c {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_i_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
      using c = ::apache::thrift::reflected_annotations<__fbthrift_field_c>;
      using i_a = ::apache::thrift::reflected_annotations<__fbthrift_field_i_a>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_b {
    using owner = ::test_cpp2::cpp_reflection::dep_A_struct;
    using name = __fbthrift_strings_module::b;
    using type =  ::test_cpp2::cpp_reflection::dep_B_struct;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>;
  };
  struct __fbthrift_member_c {
    using owner = ::test_cpp2::cpp_reflection::dep_A_struct;
    using name = __fbthrift_strings_module::c;
    using type =  ::test_cpp2::cpp_reflection::dep_C_struct;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::c>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::c>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::c>;
  };
  struct __fbthrift_member_i_a {
    using owner = ::test_cpp2::cpp_reflection::dep_A_struct;
    using name = __fbthrift_strings_module::i_a;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::i_a>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::i_a>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::i_a>;
  };

  struct __fbthrift_member {
    using b = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_b>;
    using c = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_c>;
    using i_a = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_i_a>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::dep_A_struct;
  using name = __fbthrift_strings_module::dep_A_struct;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::b,
      member::c,
      member::i_a
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(11652604999991056108ull)
  >;
};

class dep_B_struct_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_b {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_c {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_i_a {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using b = ::apache::thrift::reflected_annotations<__fbthrift_field_b>;
      using c = ::apache::thrift::reflected_annotations<__fbthrift_field_c>;
      using i_a = ::apache::thrift::reflected_annotations<__fbthrift_field_i_a>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_b {
    using owner = ::test_cpp2::cpp_reflection::dep_B_struct;
    using name = __fbthrift_strings_module::b;
    using type =  ::test_cpp2::cpp_reflection::dep_B_struct;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::b>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::b>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::b>;
  };
  struct __fbthrift_member_c {
    using owner = ::test_cpp2::cpp_reflection::dep_B_struct;
    using name = __fbthrift_strings_module::c;
    using type =  ::test_cpp2::cpp_reflection::dep_C_struct;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::c>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::c>;
    using type_class = ::apache::thrift::type_class::structure;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::c>;
  };
  struct __fbthrift_member_i_a {
    using owner = ::test_cpp2::cpp_reflection::dep_B_struct;
    using name = __fbthrift_strings_module::i_a;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::i_a>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::i_a>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::i_a>;
  };

  struct __fbthrift_member {
    using b = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_b>;
    using c = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_c>;
    using i_a = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_i_a>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::dep_B_struct;
  using name = __fbthrift_strings_module::dep_B_struct;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::b,
      member::c,
      member::i_a
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(9714134117356966700ull)
  >;
};

class annotated_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_a {
        struct __fbthrift_keys {
          using m_b_false = __fbthrift_strings_module::m_b_false;
          using m_b_true = __fbthrift_strings_module::m_b_true;
          using m_int = __fbthrift_strings_module::m_int;
          using m_int_list = __fbthrift_strings_module::m_int_list;
          using m_int_map = __fbthrift_strings_module::m_int_map;
          using m_mixed_list = __fbthrift_strings_module::m_mixed_list;
          using m_mixed_map = __fbthrift_strings_module::m_mixed_map;
          using m_str_list = __fbthrift_strings_module::m_str_list;
          using m_str_map = __fbthrift_strings_module::m_str_map;
          using m_string = __fbthrift_strings_module::m_string;
        };

        struct __fbthrift_values {
          using m_b_false = ::fatal::sequence<char, 'f', 'a', 'l', 's', 'e'>;
          using m_b_true = ::fatal::sequence<char, 't', 'r', 'u', 'e'>;
          using m_int = ::fatal::sequence<char, '1', '0'>;
          using m_int_list = ::fatal::sequence<char, '[', '-', '1', ',', ' ', '2', ',', ' ', '3', ']'>;
          using m_int_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '1', ',', ' ', '"', 'b', '"', ':', ' ', '-', '2', ',', ' ', '"', 'c', '"', ':', ' ', '-', '3', '}'>;
          using m_mixed_list = ::fatal::sequence<char, '[', '"', 'a', '"', ',', ' ', '1', ',', ' ', '"', 'b', '"', ',', ' ', '2', ']'>;
          using m_mixed_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '-', '2', ',', ' ', '"', 'b', '"', ':', ' ', '"', 'B', '"', ',', ' ', '"', 'c', '"', ':', ' ', '3', '}'>;
          using m_str_list = ::fatal::sequence<char, '[', '"', 'a', '"', ',', ' ', '"', 'b', '"', ',', ' ', '"', 'c', '"', ']'>;
          using m_str_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '"', 'A', '"', ',', ' ', '"', 'b', '"', ':', ' ', '"', 'B', '"', ',', ' ', '"', 'c', '"', ':', ' ', '"', 'C', '"', '}'>;
          using m_string = ::fatal::sequence<char, '"', 'h', 'e', 'l', 'l', 'o', '"'>;
        };

       public:
        using keys = __fbthrift_keys;
        using values = __fbthrift_values;
        using map = ::fatal::list<
            ::apache::thrift::annotation<keys::m_b_false, values::m_b_false>,
            ::apache::thrift::annotation<keys::m_b_true, values::m_b_true>,
            ::apache::thrift::annotation<keys::m_int, values::m_int>,
            ::apache::thrift::annotation<keys::m_int_list, values::m_int_list>,
            ::apache::thrift::annotation<keys::m_int_map, values::m_int_map>,
            ::apache::thrift::annotation<keys::m_mixed_list, values::m_mixed_list>,
            ::apache::thrift::annotation<keys::m_mixed_map, values::m_mixed_map>,
            ::apache::thrift::annotation<keys::m_str_list, values::m_str_list>,
            ::apache::thrift::annotation<keys::m_str_map, values::m_str_map>,
            ::apache::thrift::annotation<keys::m_string, values::m_string>
        >;
      };

     public:
      using a = ::apache::thrift::reflected_annotations<__fbthrift_field_a>;
    };

    struct __fbthrift_keys {
      using s_b_false = __fbthrift_strings_module::s_b_false;
      using s_b_true = __fbthrift_strings_module::s_b_true;
      using s_int = __fbthrift_strings_module::s_int;
      using s_int_list = __fbthrift_strings_module::s_int_list;
      using s_int_map = __fbthrift_strings_module::s_int_map;
      using s_mixed_list = __fbthrift_strings_module::s_mixed_list;
      using s_mixed_map = __fbthrift_strings_module::s_mixed_map;
      using s_str_list = __fbthrift_strings_module::s_str_list;
      using s_str_map = __fbthrift_strings_module::s_str_map;
      using s_string = __fbthrift_strings_module::s_string;
    };

    struct __fbthrift_values {
      using s_b_false = ::fatal::sequence<char, 'f', 'a', 'l', 's', 'e'>;
      using s_b_true = ::fatal::sequence<char, 't', 'r', 'u', 'e'>;
      using s_int = ::fatal::sequence<char, '1', '0'>;
      using s_int_list = ::fatal::sequence<char, '[', '-', '1', ',', ' ', '2', ',', ' ', '3', ']'>;
      using s_int_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '1', ',', ' ', '"', 'b', '"', ':', ' ', '-', '2', ',', ' ', '"', 'c', '"', ':', ' ', '-', '3', '}'>;
      using s_mixed_list = ::fatal::sequence<char, '[', '"', 'a', '"', ',', ' ', '1', ',', ' ', '"', 'b', '"', ',', ' ', '2', ']'>;
      using s_mixed_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '-', '2', ',', ' ', '"', 'b', '"', ':', ' ', '"', 'B', '"', ',', ' ', '"', 'c', '"', ':', ' ', '3', '}'>;
      using s_str_list = ::fatal::sequence<char, '[', '"', 'a', '"', ',', ' ', '"', 'b', '"', ',', ' ', '"', 'c', '"', ']'>;
      using s_str_map = ::fatal::sequence<char, '{', '"', 'a', '"', ':', ' ', '"', 'A', '"', ',', ' ', '"', 'b', '"', ':', ' ', '"', 'B', '"', ',', ' ', '"', 'c', '"', ':', ' ', '"', 'C', '"', '}'>;
      using s_string = ::fatal::sequence<char, '"', 'h', 'e', 'l', 'l', 'o', '"'>;
    };

   public:
    using keys = __fbthrift_keys;
    using values = __fbthrift_values;
    using map = ::fatal::list<
        ::apache::thrift::annotation<keys::s_b_false, values::s_b_false>,
        ::apache::thrift::annotation<keys::s_b_true, values::s_b_true>,
        ::apache::thrift::annotation<keys::s_int, values::s_int>,
        ::apache::thrift::annotation<keys::s_int_list, values::s_int_list>,
        ::apache::thrift::annotation<keys::s_int_map, values::s_int_map>,
        ::apache::thrift::annotation<keys::s_mixed_list, values::s_mixed_list>,
        ::apache::thrift::annotation<keys::s_mixed_map, values::s_mixed_map>,
        ::apache::thrift::annotation<keys::s_str_list, values::s_str_list>,
        ::apache::thrift::annotation<keys::s_str_map, values::s_str_map>,
        ::apache::thrift::annotation<keys::s_string, values::s_string>
    >;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_a {
    using owner = ::test_cpp2::cpp_reflection::annotated;
    using name = __fbthrift_strings_module::a;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::a>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::a>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::a>;
  };

  struct __fbthrift_member {
    using a = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_a>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::annotated;
  using name = __fbthrift_strings_module::annotated;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::a
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(300598955218934796ull)
  >;
};

class struct_with_special_names_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_get {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_getter {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_lists {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_maps {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_name {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_name_to_value {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_names {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_prefix_tree {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_sets {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_setter {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_str {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_strings {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_type {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_value {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_value_to_name {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_values {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_id {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_ids {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_descriptor {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_descriptors {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_key {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_keys {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_annotation {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_annotations {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_member {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_members {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_field {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fields {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using get = ::apache::thrift::reflected_annotations<__fbthrift_field_get>;
      using getter = ::apache::thrift::reflected_annotations<__fbthrift_field_getter>;
      using lists = ::apache::thrift::reflected_annotations<__fbthrift_field_lists>;
      using maps = ::apache::thrift::reflected_annotations<__fbthrift_field_maps>;
      using name = ::apache::thrift::reflected_annotations<__fbthrift_field_name>;
      using name_to_value = ::apache::thrift::reflected_annotations<__fbthrift_field_name_to_value>;
      using names = ::apache::thrift::reflected_annotations<__fbthrift_field_names>;
      using prefix_tree = ::apache::thrift::reflected_annotations<__fbthrift_field_prefix_tree>;
      using sets = ::apache::thrift::reflected_annotations<__fbthrift_field_sets>;
      using setter = ::apache::thrift::reflected_annotations<__fbthrift_field_setter>;
      using str = ::apache::thrift::reflected_annotations<__fbthrift_field_str>;
      using strings = ::apache::thrift::reflected_annotations<__fbthrift_field_strings>;
      using type = ::apache::thrift::reflected_annotations<__fbthrift_field_type>;
      using value = ::apache::thrift::reflected_annotations<__fbthrift_field_value>;
      using value_to_name = ::apache::thrift::reflected_annotations<__fbthrift_field_value_to_name>;
      using values = ::apache::thrift::reflected_annotations<__fbthrift_field_values>;
      using id = ::apache::thrift::reflected_annotations<__fbthrift_field_id>;
      using ids = ::apache::thrift::reflected_annotations<__fbthrift_field_ids>;
      using descriptor = ::apache::thrift::reflected_annotations<__fbthrift_field_descriptor>;
      using descriptors = ::apache::thrift::reflected_annotations<__fbthrift_field_descriptors>;
      using key = ::apache::thrift::reflected_annotations<__fbthrift_field_key>;
      using keys = ::apache::thrift::reflected_annotations<__fbthrift_field_keys>;
      using annotation = ::apache::thrift::reflected_annotations<__fbthrift_field_annotation>;
      using annotations = ::apache::thrift::reflected_annotations<__fbthrift_field_annotations>;
      using member = ::apache::thrift::reflected_annotations<__fbthrift_field_member>;
      using members = ::apache::thrift::reflected_annotations<__fbthrift_field_members>;
      using field = ::apache::thrift::reflected_annotations<__fbthrift_field_field>;
      using fields = ::apache::thrift::reflected_annotations<__fbthrift_field_fields>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_get {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::get;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::get>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::get>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::get>;
  };
  struct __fbthrift_member_getter {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::getter;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::getter>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::getter>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::getter>;
  };
  struct __fbthrift_member_lists {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::lists;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::lists>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::lists>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::lists>;
  };
  struct __fbthrift_member_maps {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::maps;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::maps>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::maps>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::maps>;
  };
  struct __fbthrift_member_name {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::name;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::name>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::name>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::name>;
  };
  struct __fbthrift_member_name_to_value {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::name_to_value;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 6;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::name_to_value>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::name_to_value>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::name_to_value>;
  };
  struct __fbthrift_member_names {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::names;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 7;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::names>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::names>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::names>;
  };
  struct __fbthrift_member_prefix_tree {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::prefix_tree;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 8;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::prefix_tree>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::prefix_tree>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::prefix_tree>;
  };
  struct __fbthrift_member_sets {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::sets;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 9;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::sets>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::sets>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::sets>;
  };
  struct __fbthrift_member_setter {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::setter;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 10;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::setter>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::setter>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::setter>;
  };
  struct __fbthrift_member_str {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::str;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 11;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::str>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::str>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::str>;
  };
  struct __fbthrift_member_strings {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::strings;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 12;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::strings>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::strings>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::strings>;
  };
  struct __fbthrift_member_type {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::type;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 13;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::type>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::type>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::type>;
  };
  struct __fbthrift_member_value {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::value;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 14;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::value>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::value>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::value>;
  };
  struct __fbthrift_member_value_to_name {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::value_to_name;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 15;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::value_to_name>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::value_to_name>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::value_to_name>;
  };
  struct __fbthrift_member_values {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::values;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 16;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::values>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::values>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::values>;
  };
  struct __fbthrift_member_id {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::id;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 17;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::id>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::id>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::id>;
  };
  struct __fbthrift_member_ids {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::ids;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 18;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::ids>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::ids>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::ids>;
  };
  struct __fbthrift_member_descriptor {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::descriptor;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 19;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::descriptor>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::descriptor>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::descriptor>;
  };
  struct __fbthrift_member_descriptors {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::descriptors;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 20;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::descriptors>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::descriptors>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::descriptors>;
  };
  struct __fbthrift_member_key {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::key;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 21;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::key>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::key>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::key>;
  };
  struct __fbthrift_member_keys {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::keys;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 22;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::keys>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::keys>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::keys>;
  };
  struct __fbthrift_member_annotation {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::annotation;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 23;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::annotation>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::annotation>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::annotation>;
  };
  struct __fbthrift_member_annotations {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::annotations;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 24;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::annotations>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::annotations>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::annotations>;
  };
  struct __fbthrift_member_member {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::member;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 25;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::member>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::member>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::member>;
  };
  struct __fbthrift_member_members {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::members;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 26;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::members>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::members>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::members>;
  };
  struct __fbthrift_member_field {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::field;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 27;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::field>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::field>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::field>;
  };
  struct __fbthrift_member_fields {
    using owner = ::test_cpp2::cpp_reflection::struct_with_special_names;
    using name = __fbthrift_strings_module::fields;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 28;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fields>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fields>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fields>;
  };

  struct __fbthrift_member {
    using get = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_get>;
    using getter = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_getter>;
    using lists = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_lists>;
    using maps = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_maps>;
    using name = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_name>;
    using name_to_value = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_name_to_value>;
    using names = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_names>;
    using prefix_tree = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_prefix_tree>;
    using sets = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_sets>;
    using setter = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_setter>;
    using str = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_str>;
    using strings = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_strings>;
    using type = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_type>;
    using value = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_value>;
    using value_to_name = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_value_to_name>;
    using values = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_values>;
    using id = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_id>;
    using ids = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_ids>;
    using descriptor = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_descriptor>;
    using descriptors = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_descriptors>;
    using key = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_key>;
    using keys = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_keys>;
    using annotation = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_annotation>;
    using annotations = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_annotations>;
    using member = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_member>;
    using members = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_members>;
    using field = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_field>;
    using fields = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fields>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct_with_special_names;
  using name = __fbthrift_strings_module::struct_with_special_names;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::get,
      member::getter,
      member::lists,
      member::maps,
      member::name,
      member::name_to_value,
      member::names,
      member::prefix_tree,
      member::sets,
      member::setter,
      member::str,
      member::strings,
      member::type,
      member::value,
      member::value_to_name,
      member::values,
      member::id,
      member::ids,
      member::descriptor,
      member::descriptors,
      member::key,
      member::keys,
      member::annotation,
      member::annotations,
      member::member,
      member::members,
      member::field,
      member::fields
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(8634504681174503372ull)
  >;
};

class struct_with_indirections_struct_traits {
  class __fbthrift_annotations {
    class __fbthrift_members {
      class __fbthrift_field_real {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_fake {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_number {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_result {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

      class __fbthrift_field_phrase {
       public:
        using keys = void;
        using values = void;
        using map = ::fatal::list<>;
      };

     public:
      using real = ::apache::thrift::reflected_annotations<__fbthrift_field_real>;
      using fake = ::apache::thrift::reflected_annotations<__fbthrift_field_fake>;
      using number = ::apache::thrift::reflected_annotations<__fbthrift_field_number>;
      using result = ::apache::thrift::reflected_annotations<__fbthrift_field_result>;
      using phrase = ::apache::thrift::reflected_annotations<__fbthrift_field_phrase>;
    };

   public:
    using keys = void;
    using values = void;
    using map = ::fatal::list<>;
    using members = __fbthrift_members;
  };

  struct __fbthrift_member_real {
    using owner = ::test_cpp2::cpp_reflection::struct_with_indirections;
    using name = __fbthrift_strings_module::real;
    using type = int32_t;
    static constexpr ::apache::thrift::field_id_t id = 1;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::real>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::real>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::real>;
  };
  struct __fbthrift_member_fake {
    using owner = ::test_cpp2::cpp_reflection::struct_with_indirections;
    using name = __fbthrift_strings_module::fake;
    using type =  ::test_cpp2::cpp_reflection::FakeI32;
    static constexpr ::apache::thrift::field_id_t id = 2;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::fake>;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::fake>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::fake>;
  };
  struct __fbthrift_member_number {
    using owner = ::test_cpp2::cpp_reflection::struct_with_indirections;
    using name = __fbthrift_strings_module::number;
    using type =  ::test_cpp2::cpp_reflection::HasANumber;
    static constexpr ::apache::thrift::field_id_t id = 3;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::chained_data_member_accessor<
        ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::number>,
        ::apache::thrift::detail::apply_indirection_fn
    >;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::number>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::number>;
  };
  struct __fbthrift_member_result {
    using owner = ::test_cpp2::cpp_reflection::struct_with_indirections;
    using name = __fbthrift_strings_module::result;
    using type =  ::test_cpp2::cpp_reflection::HasAResult;
    static constexpr ::apache::thrift::field_id_t id = 4;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::chained_data_member_accessor<
        ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::result>,
        ::apache::thrift::detail::apply_indirection_fn
    >;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::result>;
    using type_class = ::apache::thrift::type_class::integral;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::result>;
  };
  struct __fbthrift_member_phrase {
    using owner = ::test_cpp2::cpp_reflection::struct_with_indirections;
    using name = __fbthrift_strings_module::phrase;
    using type =  ::test_cpp2::cpp_reflection::HasAPhrase;
    static constexpr ::apache::thrift::field_id_t id = 5;
    static constexpr auto optional = ::apache::thrift::optionality::required_of_writer;
    using getter = ::apache::thrift::detail::reflection_impl::chained_data_member_accessor<
        ::apache::thrift::detail::reflection_impl::data_member_accessor<::apache::thrift::tag::phrase>,
        ::apache::thrift::detail::apply_indirection_fn
    >;
    using field_ref_getter = ::apache::thrift::detail::invoke_reffer<::apache::thrift::tag::phrase>;
    using type_class = ::apache::thrift::type_class::string;
    using annotations = ::apache::thrift::reflected_annotations<__fbthrift_annotations::members::phrase>;
  };

  struct __fbthrift_member {
    using real = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_real>;
    using fake = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_fake>;
    using number = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_number>;
    using result = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_result>;
    using phrase = ::apache::thrift::reflected_struct_data_member<__fbthrift_member_phrase>;
  };
 public:
  using type = ::test_cpp2::cpp_reflection::struct_with_indirections;
  using name = __fbthrift_strings_module::struct_with_indirections;
  using member = __fbthrift_member;
  using members = ::fatal::list<
      member::real,
      member::fake,
      member::number,
      member::result,
      member::phrase
  >;
  using members_annotations = __fbthrift_annotations::members;
  using metadata = ::apache::thrift::detail::type_common_metadata_impl<
      module_tags::module,
      ::apache::thrift::reflected_annotations<__fbthrift_annotations>,
      static_cast<::apache::thrift::legacy_type_id_t>(1743512479375461036ull)
  >;
};

} // __fbthrift_refl

THRIFT_REGISTER_STRUCT_TRAITS(structA, __fbthrift_refl::structA_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(structB, __fbthrift_refl::structB_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(structC, __fbthrift_refl::structC_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct1, __fbthrift_refl::struct1_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct2, __fbthrift_refl::struct2_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct3, __fbthrift_refl::struct3_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct4, __fbthrift_refl::struct4_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct5, __fbthrift_refl::struct5_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct_binary, __fbthrift_refl::struct_binary_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(dep_A_struct, __fbthrift_refl::dep_A_struct_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(dep_B_struct, __fbthrift_refl::dep_B_struct_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(annotated, __fbthrift_refl::annotated_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct_with_special_names, __fbthrift_refl::struct_with_special_names_struct_traits);
THRIFT_REGISTER_STRUCT_TRAITS(struct_with_indirections, __fbthrift_refl::struct_with_indirections_struct_traits);

}} // test_cpp2::cpp_reflection
