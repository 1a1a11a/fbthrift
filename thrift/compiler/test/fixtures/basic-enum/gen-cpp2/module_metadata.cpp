/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include <thrift/lib/cpp2/gen/module_metadata_cpp.h>
#include "thrift/compiler/test/fixtures/basic-enum/gen-cpp2/module_metadata.h"

namespace apache::thrift::detail::metadata {

using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftPrimitiveType = ::apache::thrift::metadata::ThriftPrimitiveType;
using ThriftType = ::apache::thrift::metadata::ThriftType;

void GeneratedEnumMetadata<::test::fixtures::enumstrict::EmptyEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.EmptyEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_EmptyEnum = res.first->second;
  module_EmptyEnum.name = "module.EmptyEnum";
}
void GeneratedEnumMetadata<::test::fixtures::enumstrict::MyEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.MyEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_MyEnum = res.first->second;
  module_MyEnum.name = "module.MyEnum";
  module_MyEnum.elements[1] = "ONE";
  module_MyEnum.elements[2] = "TWO";
}
void GeneratedEnumMetadata<::test::fixtures::enumstrict::MyBigEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.MyBigEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_MyBigEnum = res.first->second;
  module_MyBigEnum.name = "module.MyBigEnum";
  module_MyBigEnum.elements[0] = "UNKNOWN";
  module_MyBigEnum.elements[1] = "ONE";
  module_MyBigEnum.elements[2] = "TWO";
  module_MyBigEnum.elements[3] = "THREE";
  module_MyBigEnum.elements[4] = "FOUR";
  module_MyBigEnum.elements[5] = "FIVE";
  module_MyBigEnum.elements[6] = "SIX";
  module_MyBigEnum.elements[7] = "SEVEN";
  module_MyBigEnum.elements[8] = "EIGHT";
  module_MyBigEnum.elements[9] = "NINE";
  module_MyBigEnum.elements[10] = "TEN";
  module_MyBigEnum.elements[11] = "ELEVEN";
  module_MyBigEnum.elements[12] = "TWELVE";
  module_MyBigEnum.elements[13] = "THIRTEEN";
  module_MyBigEnum.elements[14] = "FOURTEEN";
  module_MyBigEnum.elements[15] = "FIFTEEN";
  module_MyBigEnum.elements[16] = "SIXTEEN";
  module_MyBigEnum.elements[17] = "SEVENTEEN";
  module_MyBigEnum.elements[18] = "EIGHTEEN";
  module_MyBigEnum.elements[19] = "NINETEEN";
}

void GeneratedStructMetadata<::test::fixtures::enumstrict::MyStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyStruct = res.first->second;
  module_MyStruct.name = "module.MyStruct";
  module_MyStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_MyStruct_myEnum_1;
  module_MyStruct_myEnum_1.id = 1;
  module_MyStruct_myEnum_1.name = "myEnum";
  module_MyStruct_myEnum_1.is_optional = false;
  auto module_MyStruct_myEnum_1_type = std::make_unique<Enum< ::test::fixtures::enumstrict::MyEnum>>("module.MyEnum", metadata);
  module_MyStruct_myEnum_1_type->initialize(module_MyStruct_myEnum_1.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_myEnum_1));
  ::apache::thrift::metadata::ThriftField module_MyStruct_myBigEnum_2;
  module_MyStruct_myBigEnum_2.id = 2;
  module_MyStruct_myBigEnum_2.name = "myBigEnum";
  module_MyStruct_myBigEnum_2.is_optional = false;
  auto module_MyStruct_myBigEnum_2_type = std::make_unique<Enum< ::test::fixtures::enumstrict::MyBigEnum>>("module.MyBigEnum", metadata);
  module_MyStruct_myBigEnum_2_type->initialize(module_MyStruct_myBigEnum_2.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_myBigEnum_2));
}

} // apache::thrift::detail::metadata
