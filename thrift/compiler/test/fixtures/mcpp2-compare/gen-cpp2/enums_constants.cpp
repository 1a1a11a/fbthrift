/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/enums_constants.h"

#include <folly/Indestructible.h>

namespace facebook { namespace ns { namespace qwerty {

std::map<std::string,  ::facebook::ns::qwerty::AnEnumB> const& enums_constants::MapStringEnum() {
  static folly::Indestructible<std::map<std::string,  ::facebook::ns::qwerty::AnEnumB>> const instance(std::initializer_list<std::pair<const std::string,  ::facebook::ns::qwerty::AnEnumB>>{{apache::thrift::StringTraits< std::string>::fromStringLiteral("0"),  ::facebook::ns::qwerty::AnEnumB::FIELDB}});
  return *instance;
}

std::map< ::facebook::ns::qwerty::AnEnumC, std::string> const& enums_constants::MapEnumString() {
  static folly::Indestructible<std::map< ::facebook::ns::qwerty::AnEnumC, std::string>> const instance(std::initializer_list<std::pair<const  ::facebook::ns::qwerty::AnEnumC, std::string>>{{ ::facebook::ns::qwerty::AnEnumC::FIELDC, apache::thrift::StringTraits< std::string>::fromStringLiteral("unknown")}});
  return *instance;
}

}}} // facebook::ns::qwerty
