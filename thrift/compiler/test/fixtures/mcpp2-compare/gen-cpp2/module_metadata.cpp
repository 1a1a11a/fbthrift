/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include <thrift/lib/cpp2/gen/module_metadata_cpp.h>
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/module_metadata.h"
#include "thrift/compiler/test/fixtures/mcpp2-compare/gen-cpp2/includes_metadata.h"

namespace apache::thrift::detail::metadata {

using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftPrimitiveType = ::apache::thrift::metadata::ThriftPrimitiveType;
using ThriftType = ::apache::thrift::metadata::ThriftType;

void GeneratedEnumMetadata<::some::valid::ns::MyEnumA>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.MyEnumA", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_MyEnumA = res.first->second;
  module_MyEnumA.name = "module.MyEnumA";
  module_MyEnumA.elements[1] = "fieldA";
  module_MyEnumA.elements[2] = "fieldB";
  module_MyEnumA.elements[4] = "fieldC";
}
void GeneratedEnumMetadata<::some::valid::ns::AnnotatedEnum>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.AnnotatedEnum", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_AnnotatedEnum = res.first->second;
  module_AnnotatedEnum.name = "module.AnnotatedEnum";
  module_AnnotatedEnum.elements[2] = "FIELDA";
  module_AnnotatedEnum.elements[4] = "FIELDB";
  module_AnnotatedEnum.elements[9] = "FIELDC";
}
void GeneratedEnumMetadata<::some::valid::ns::AnnotatedEnum2>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.AnnotatedEnum2", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_AnnotatedEnum2 = res.first->second;
  module_AnnotatedEnum2.name = "module.AnnotatedEnum2";
  module_AnnotatedEnum2.elements[2] = "FIELDA";
  module_AnnotatedEnum2.elements[4] = "FIELDB";
  module_AnnotatedEnum2.elements[9] = "FIELDC";
}
void GeneratedEnumMetadata<::some::valid::ns::MyEnumB>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.enums.emplace("module.MyEnumB", ::apache::thrift::metadata::ThriftEnum{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftEnum& module_MyEnumB = res.first->second;
  module_MyEnumB.name = "module.MyEnumB";
  module_MyEnumB.elements[0] = "AField";
}

void GeneratedStructMetadata<::some::valid::ns::Empty>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.Empty", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_Empty = res.first->second;
  module_Empty.name = "module.Empty";
  module_Empty.is_union = false;
}
void GeneratedStructMetadata<::some::valid::ns::ASimpleStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.ASimpleStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_ASimpleStruct = res.first->second;
  module_ASimpleStruct.name = "module.ASimpleStruct";
  module_ASimpleStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_ASimpleStruct_boolField_1;
  module_ASimpleStruct_boolField_1.id = 1;
  module_ASimpleStruct_boolField_1.name = "boolField";
  module_ASimpleStruct_boolField_1.is_optional = false;
  auto module_ASimpleStruct_boolField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_ASimpleStruct_boolField_1_type->initialize(module_ASimpleStruct_boolField_1.type);
  module_ASimpleStruct.fields.push_back(std::move(module_ASimpleStruct_boolField_1));
}
void GeneratedStructMetadata<::some::valid::ns::ASimpleStructNoexcept>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.ASimpleStructNoexcept", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_ASimpleStructNoexcept = res.first->second;
  module_ASimpleStructNoexcept.name = "module.ASimpleStructNoexcept";
  module_ASimpleStructNoexcept.is_union = false;
  ::apache::thrift::metadata::ThriftField module_ASimpleStructNoexcept_boolField_1;
  module_ASimpleStructNoexcept_boolField_1.id = 1;
  module_ASimpleStructNoexcept_boolField_1.name = "boolField";
  module_ASimpleStructNoexcept_boolField_1.is_optional = false;
  auto module_ASimpleStructNoexcept_boolField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_ASimpleStructNoexcept_boolField_1_type->initialize(module_ASimpleStructNoexcept_boolField_1.type);
  module_ASimpleStructNoexcept.fields.push_back(std::move(module_ASimpleStructNoexcept_boolField_1));
}
void GeneratedStructMetadata<::some::valid::ns::MyStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyStruct = res.first->second;
  module_MyStruct.name = "module.MyStruct";
  module_MyStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyBoolField_1;
  module_MyStruct_MyBoolField_1.id = 1;
  module_MyStruct_MyBoolField_1.name = "MyBoolField";
  module_MyStruct_MyBoolField_1.is_optional = false;
  auto module_MyStruct_MyBoolField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_MyStruct_MyBoolField_1_type->initialize(module_MyStruct_MyBoolField_1.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyBoolField_1));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyIntField_2;
  module_MyStruct_MyIntField_2.id = 2;
  module_MyStruct_MyIntField_2.name = "MyIntField";
  module_MyStruct_MyIntField_2.is_optional = false;
  auto module_MyStruct_MyIntField_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_MyStruct_MyIntField_2_type->initialize(module_MyStruct_MyIntField_2.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyIntField_2));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyStringField_3;
  module_MyStruct_MyStringField_3.id = 3;
  module_MyStruct_MyStringField_3.name = "MyStringField";
  module_MyStruct_MyStringField_3.is_optional = false;
  auto module_MyStruct_MyStringField_3_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_MyStruct_MyStringField_3_type->initialize(module_MyStruct_MyStringField_3.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyStringField_3));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyStringField2_4;
  module_MyStruct_MyStringField2_4.id = 4;
  module_MyStruct_MyStringField2_4.name = "MyStringField2";
  module_MyStruct_MyStringField2_4.is_optional = false;
  auto module_MyStruct_MyStringField2_4_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_MyStruct_MyStringField2_4_type->initialize(module_MyStruct_MyStringField2_4.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyStringField2_4));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyBinaryField_5;
  module_MyStruct_MyBinaryField_5.id = 5;
  module_MyStruct_MyBinaryField_5.name = "MyBinaryField";
  module_MyStruct_MyBinaryField_5.is_optional = false;
  auto module_MyStruct_MyBinaryField_5_type = std::make_unique<Primitive>(ThriftPrimitiveType::BINARY);
  module_MyStruct_MyBinaryField_5_type->initialize(module_MyStruct_MyBinaryField_5.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyBinaryField_5));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyBinaryField2_6;
  module_MyStruct_MyBinaryField2_6.id = 6;
  module_MyStruct_MyBinaryField2_6.name = "MyBinaryField2";
  module_MyStruct_MyBinaryField2_6.is_optional = true;
  auto module_MyStruct_MyBinaryField2_6_type = std::make_unique<Primitive>(ThriftPrimitiveType::BINARY);
  module_MyStruct_MyBinaryField2_6_type->initialize(module_MyStruct_MyBinaryField2_6.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyBinaryField2_6));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyBinaryField3_7;
  module_MyStruct_MyBinaryField3_7.id = 7;
  module_MyStruct_MyBinaryField3_7.name = "MyBinaryField3";
  module_MyStruct_MyBinaryField3_7.is_optional = false;
  auto module_MyStruct_MyBinaryField3_7_type = std::make_unique<Primitive>(ThriftPrimitiveType::BINARY);
  module_MyStruct_MyBinaryField3_7_type->initialize(module_MyStruct_MyBinaryField3_7.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyBinaryField3_7));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyBinaryListField4_8;
  module_MyStruct_MyBinaryListField4_8.id = 8;
  module_MyStruct_MyBinaryListField4_8.name = "MyBinaryListField4";
  module_MyStruct_MyBinaryListField4_8.is_optional = false;
  auto module_MyStruct_MyBinaryListField4_8_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::BINARY));
  module_MyStruct_MyBinaryListField4_8_type->initialize(module_MyStruct_MyBinaryListField4_8.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyBinaryListField4_8));
  ::apache::thrift::metadata::ThriftField module_MyStruct_MyMapEnumAndInt_9;
  module_MyStruct_MyMapEnumAndInt_9.id = 9;
  module_MyStruct_MyMapEnumAndInt_9.name = "MyMapEnumAndInt";
  module_MyStruct_MyMapEnumAndInt_9.is_optional = false;
  auto module_MyStruct_MyMapEnumAndInt_9_type = std::make_unique<Map>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata), std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_MyStruct_MyMapEnumAndInt_9_type->initialize(module_MyStruct_MyMapEnumAndInt_9.type);
  module_MyStruct.fields.push_back(std::move(module_MyStruct_MyMapEnumAndInt_9));
}
void GeneratedStructMetadata<::some::valid::ns::SimpleUnion>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.SimpleUnion", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_SimpleUnion = res.first->second;
  module_SimpleUnion.name = "module.SimpleUnion";
  module_SimpleUnion.is_union = true;
  ::apache::thrift::metadata::ThriftField module_SimpleUnion_intValue_7;
  module_SimpleUnion_intValue_7.id = 7;
  module_SimpleUnion_intValue_7.name = "intValue";
  module_SimpleUnion_intValue_7.is_optional = false;
  auto module_SimpleUnion_intValue_7_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_SimpleUnion_intValue_7_type->initialize(module_SimpleUnion_intValue_7.type);
  module_SimpleUnion.fields.push_back(std::move(module_SimpleUnion_intValue_7));
  ::apache::thrift::metadata::ThriftField module_SimpleUnion_stringValue_2;
  module_SimpleUnion_stringValue_2.id = 2;
  module_SimpleUnion_stringValue_2.name = "stringValue";
  module_SimpleUnion_stringValue_2.is_optional = false;
  auto module_SimpleUnion_stringValue_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_SimpleUnion_stringValue_2_type->initialize(module_SimpleUnion_stringValue_2.type);
  module_SimpleUnion.fields.push_back(std::move(module_SimpleUnion_stringValue_2));
}
void GeneratedStructMetadata<::some::valid::ns::ComplexUnion>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.ComplexUnion", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_ComplexUnion = res.first->second;
  module_ComplexUnion.name = "module.ComplexUnion";
  module_ComplexUnion.is_union = true;
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_intValue_1;
  module_ComplexUnion_intValue_1.id = 1;
  module_ComplexUnion_intValue_1.name = "intValue";
  module_ComplexUnion_intValue_1.is_optional = false;
  auto module_ComplexUnion_intValue_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_ComplexUnion_intValue_1_type->initialize(module_ComplexUnion_intValue_1.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_intValue_1));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_opt_intValue_201;
  module_ComplexUnion_opt_intValue_201.id = 201;
  module_ComplexUnion_opt_intValue_201.name = "opt_intValue";
  module_ComplexUnion_opt_intValue_201.is_optional = true;
  auto module_ComplexUnion_opt_intValue_201_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_ComplexUnion_opt_intValue_201_type->initialize(module_ComplexUnion_opt_intValue_201.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_opt_intValue_201));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_stringValue_3;
  module_ComplexUnion_stringValue_3.id = 3;
  module_ComplexUnion_stringValue_3.name = "stringValue";
  module_ComplexUnion_stringValue_3.is_optional = false;
  auto module_ComplexUnion_stringValue_3_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_ComplexUnion_stringValue_3_type->initialize(module_ComplexUnion_stringValue_3.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_stringValue_3));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_opt_stringValue_203;
  module_ComplexUnion_opt_stringValue_203.id = 203;
  module_ComplexUnion_opt_stringValue_203.name = "opt_stringValue";
  module_ComplexUnion_opt_stringValue_203.is_optional = true;
  auto module_ComplexUnion_opt_stringValue_203_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_ComplexUnion_opt_stringValue_203_type->initialize(module_ComplexUnion_opt_stringValue_203.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_opt_stringValue_203));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_intValue2_4;
  module_ComplexUnion_intValue2_4.id = 4;
  module_ComplexUnion_intValue2_4.name = "intValue2";
  module_ComplexUnion_intValue2_4.is_optional = false;
  auto module_ComplexUnion_intValue2_4_type = std::make_unique<Primitive>(ThriftPrimitiveType::I16);
  module_ComplexUnion_intValue2_4_type->initialize(module_ComplexUnion_intValue2_4.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_intValue2_4));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_intValue3_6;
  module_ComplexUnion_intValue3_6.id = 6;
  module_ComplexUnion_intValue3_6.name = "intValue3";
  module_ComplexUnion_intValue3_6.is_optional = false;
  auto module_ComplexUnion_intValue3_6_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_ComplexUnion_intValue3_6_type->initialize(module_ComplexUnion_intValue3_6.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_intValue3_6));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_doubelValue_7;
  module_ComplexUnion_doubelValue_7.id = 7;
  module_ComplexUnion_doubelValue_7.name = "doubelValue";
  module_ComplexUnion_doubelValue_7.is_optional = false;
  auto module_ComplexUnion_doubelValue_7_type = std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE);
  module_ComplexUnion_doubelValue_7_type->initialize(module_ComplexUnion_doubelValue_7.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_doubelValue_7));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_boolValue_8;
  module_ComplexUnion_boolValue_8.id = 8;
  module_ComplexUnion_boolValue_8.name = "boolValue";
  module_ComplexUnion_boolValue_8.is_optional = false;
  auto module_ComplexUnion_boolValue_8_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_ComplexUnion_boolValue_8_type->initialize(module_ComplexUnion_boolValue_8.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_boolValue_8));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_union_list_9;
  module_ComplexUnion_union_list_9.id = 9;
  module_ComplexUnion_union_list_9.name = "union_list";
  module_ComplexUnion_union_list_9.is_optional = false;
  auto module_ComplexUnion_union_list_9_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_ComplexUnion_union_list_9_type->initialize(module_ComplexUnion_union_list_9.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_union_list_9));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_union_set_10;
  module_ComplexUnion_union_set_10.id = 10;
  module_ComplexUnion_union_set_10.name = "union_set";
  module_ComplexUnion_union_set_10.is_optional = false;
  auto module_ComplexUnion_union_set_10_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I64));
  module_ComplexUnion_union_set_10_type->initialize(module_ComplexUnion_union_set_10.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_union_set_10));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_union_map_11;
  module_ComplexUnion_union_map_11.id = 11;
  module_ComplexUnion_union_map_11.name = "union_map";
  module_ComplexUnion_union_map_11.is_optional = false;
  auto module_ComplexUnion_union_map_11_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_ComplexUnion_union_map_11_type->initialize(module_ComplexUnion_union_map_11.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_union_map_11));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_opt_union_map_211;
  module_ComplexUnion_opt_union_map_211.id = 211;
  module_ComplexUnion_opt_union_map_211.name = "opt_union_map";
  module_ComplexUnion_opt_union_map_211.is_optional = true;
  auto module_ComplexUnion_opt_union_map_211_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_ComplexUnion_opt_union_map_211_type->initialize(module_ComplexUnion_opt_union_map_211.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_opt_union_map_211));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_enum_field_12;
  module_ComplexUnion_enum_field_12.id = 12;
  module_ComplexUnion_enum_field_12.name = "enum_field";
  module_ComplexUnion_enum_field_12.is_optional = false;
  auto module_ComplexUnion_enum_field_12_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_ComplexUnion_enum_field_12_type->initialize(module_ComplexUnion_enum_field_12.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_enum_field_12));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_enum_container_13;
  module_ComplexUnion_enum_container_13.id = 13;
  module_ComplexUnion_enum_container_13.name = "enum_container";
  module_ComplexUnion_enum_container_13.is_optional = false;
  auto module_ComplexUnion_enum_container_13_type = std::make_unique<List>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata));
  module_ComplexUnion_enum_container_13_type->initialize(module_ComplexUnion_enum_container_13.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_enum_container_13));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_struct_14;
  module_ComplexUnion_a_struct_14.id = 14;
  module_ComplexUnion_a_struct_14.name = "a_struct";
  module_ComplexUnion_a_struct_14.is_optional = false;
  auto module_ComplexUnion_a_struct_14_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_ComplexUnion_a_struct_14_type->initialize(module_ComplexUnion_a_struct_14.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_struct_14));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_set_struct_15;
  module_ComplexUnion_a_set_struct_15.id = 15;
  module_ComplexUnion_a_set_struct_15.name = "a_set_struct";
  module_ComplexUnion_a_set_struct_15.is_optional = false;
  auto module_ComplexUnion_a_set_struct_15_type = std::make_unique<Set>(std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata));
  module_ComplexUnion_a_set_struct_15_type->initialize(module_ComplexUnion_a_set_struct_15.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_set_struct_15));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_union_16;
  module_ComplexUnion_a_union_16.id = 16;
  module_ComplexUnion_a_union_16.name = "a_union";
  module_ComplexUnion_a_union_16.is_optional = false;
  auto module_ComplexUnion_a_union_16_type = std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata);
  module_ComplexUnion_a_union_16_type->initialize(module_ComplexUnion_a_union_16.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_union_16));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_opt_a_union_216;
  module_ComplexUnion_opt_a_union_216.id = 216;
  module_ComplexUnion_opt_a_union_216.name = "opt_a_union";
  module_ComplexUnion_opt_a_union_216.is_optional = true;
  auto module_ComplexUnion_opt_a_union_216_type = std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata);
  module_ComplexUnion_opt_a_union_216_type->initialize(module_ComplexUnion_opt_a_union_216.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_opt_a_union_216));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_union_list_17;
  module_ComplexUnion_a_union_list_17.id = 17;
  module_ComplexUnion_a_union_list_17.name = "a_union_list";
  module_ComplexUnion_a_union_list_17.is_optional = false;
  auto module_ComplexUnion_a_union_list_17_type = std::make_unique<List>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata));
  module_ComplexUnion_a_union_list_17_type->initialize(module_ComplexUnion_a_union_list_17.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_union_list_17));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_union_typedef_18;
  module_ComplexUnion_a_union_typedef_18.id = 18;
  module_ComplexUnion_a_union_typedef_18.name = "a_union_typedef";
  module_ComplexUnion_a_union_typedef_18.is_optional = false;
  auto module_ComplexUnion_a_union_typedef_18_type = std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata)));
  module_ComplexUnion_a_union_typedef_18_type->initialize(module_ComplexUnion_a_union_typedef_18.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_union_typedef_18));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_a_union_typedef_list_19;
  module_ComplexUnion_a_union_typedef_list_19.id = 19;
  module_ComplexUnion_a_union_typedef_list_19.name = "a_union_typedef_list";
  module_ComplexUnion_a_union_typedef_list_19.is_optional = false;
  auto module_ComplexUnion_a_union_typedef_list_19_type = std::make_unique<List>(std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata))));
  module_ComplexUnion_a_union_typedef_list_19_type->initialize(module_ComplexUnion_a_union_typedef_list_19.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_a_union_typedef_list_19));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_MyBinaryField_20;
  module_ComplexUnion_MyBinaryField_20.id = 20;
  module_ComplexUnion_MyBinaryField_20.name = "MyBinaryField";
  module_ComplexUnion_MyBinaryField_20.is_optional = false;
  auto module_ComplexUnion_MyBinaryField_20_type = std::make_unique<Primitive>(ThriftPrimitiveType::BINARY);
  module_ComplexUnion_MyBinaryField_20_type->initialize(module_ComplexUnion_MyBinaryField_20.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_MyBinaryField_20));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_MyBinaryField2_21;
  module_ComplexUnion_MyBinaryField2_21.id = 21;
  module_ComplexUnion_MyBinaryField2_21.name = "MyBinaryField2";
  module_ComplexUnion_MyBinaryField2_21.is_optional = true;
  auto module_ComplexUnion_MyBinaryField2_21_type = std::make_unique<Primitive>(ThriftPrimitiveType::BINARY);
  module_ComplexUnion_MyBinaryField2_21_type->initialize(module_ComplexUnion_MyBinaryField2_21.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_MyBinaryField2_21));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_MyBinaryListField4_23;
  module_ComplexUnion_MyBinaryListField4_23.id = 23;
  module_ComplexUnion_MyBinaryListField4_23.name = "MyBinaryListField4";
  module_ComplexUnion_MyBinaryListField4_23.is_optional = false;
  auto module_ComplexUnion_MyBinaryListField4_23_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::BINARY));
  module_ComplexUnion_MyBinaryListField4_23_type->initialize(module_ComplexUnion_MyBinaryListField4_23.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_MyBinaryListField4_23));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_ref_field_24;
  module_ComplexUnion_ref_field_24.id = 24;
  module_ComplexUnion_ref_field_24.name = "ref_field";
  module_ComplexUnion_ref_field_24.is_optional = false;
  auto module_ComplexUnion_ref_field_24_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_ComplexUnion_ref_field_24_type->initialize(module_ComplexUnion_ref_field_24.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_ref_field_24));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_ref_field2_25;
  module_ComplexUnion_ref_field2_25.id = 25;
  module_ComplexUnion_ref_field2_25.name = "ref_field2";
  module_ComplexUnion_ref_field2_25.is_optional = false;
  auto module_ComplexUnion_ref_field2_25_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_ComplexUnion_ref_field2_25_type->initialize(module_ComplexUnion_ref_field2_25.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_ref_field2_25));
  ::apache::thrift::metadata::ThriftField module_ComplexUnion_excp_field_26;
  module_ComplexUnion_excp_field_26.id = 26;
  module_ComplexUnion_excp_field_26.name = "excp_field";
  module_ComplexUnion_excp_field_26.is_optional = false;
  auto module_ComplexUnion_excp_field_26_type = std::make_unique<Typedef>("module.AnException", std::make_unique<Struct< ::some::valid::ns::AnException>>("module.AnException", metadata));
  module_ComplexUnion_excp_field_26_type->initialize(module_ComplexUnion_excp_field_26.type);
  module_ComplexUnion.fields.push_back(std::move(module_ComplexUnion_excp_field_26));
}
void GeneratedStructMetadata<::some::valid::ns::AnException>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.AnException", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_AnException = res.first->second;
  module_AnException.name = "module.AnException";
  module_AnException.is_union = false;
  ::apache::thrift::metadata::ThriftField module_AnException_code_1;
  module_AnException_code_1.id = 1;
  module_AnException_code_1.name = "code";
  module_AnException_code_1.is_optional = false;
  auto module_AnException_code_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnException_code_1_type->initialize(module_AnException_code_1.type);
  module_AnException.fields.push_back(std::move(module_AnException_code_1));
  ::apache::thrift::metadata::ThriftField module_AnException_req_code_101;
  module_AnException_req_code_101.id = 101;
  module_AnException_req_code_101.name = "req_code";
  module_AnException_req_code_101.is_optional = false;
  auto module_AnException_req_code_101_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnException_req_code_101_type->initialize(module_AnException_req_code_101.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_code_101));
  ::apache::thrift::metadata::ThriftField module_AnException_message2_2;
  module_AnException_message2_2.id = 2;
  module_AnException_message2_2.name = "message2";
  module_AnException_message2_2.is_optional = false;
  auto module_AnException_message2_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnException_message2_2_type->initialize(module_AnException_message2_2.type);
  module_AnException.fields.push_back(std::move(module_AnException_message2_2));
  ::apache::thrift::metadata::ThriftField module_AnException_req_message_102;
  module_AnException_req_message_102.id = 102;
  module_AnException_req_message_102.name = "req_message";
  module_AnException_req_message_102.is_optional = false;
  auto module_AnException_req_message_102_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnException_req_message_102_type->initialize(module_AnException_req_message_102.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_message_102));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_list_3;
  module_AnException_exception_list_3.id = 3;
  module_AnException_exception_list_3.name = "exception_list";
  module_AnException_exception_list_3.is_optional = false;
  auto module_AnException_exception_list_3_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_exception_list_3_type->initialize(module_AnException_exception_list_3.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_list_3));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_set_4;
  module_AnException_exception_set_4.id = 4;
  module_AnException_exception_set_4.name = "exception_set";
  module_AnException_exception_set_4.is_optional = false;
  auto module_AnException_exception_set_4_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I64));
  module_AnException_exception_set_4_type->initialize(module_AnException_exception_set_4.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_set_4));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_map_5;
  module_AnException_exception_map_5.id = 5;
  module_AnException_exception_map_5.name = "exception_map";
  module_AnException_exception_map_5.is_optional = false;
  auto module_AnException_exception_map_5_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_exception_map_5_type->initialize(module_AnException_exception_map_5.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_map_5));
  ::apache::thrift::metadata::ThriftField module_AnException_req_exception_map_105;
  module_AnException_req_exception_map_105.id = 105;
  module_AnException_req_exception_map_105.name = "req_exception_map";
  module_AnException_req_exception_map_105.is_optional = false;
  auto module_AnException_req_exception_map_105_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_req_exception_map_105_type->initialize(module_AnException_req_exception_map_105.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_exception_map_105));
  ::apache::thrift::metadata::ThriftField module_AnException_enum_field_6;
  module_AnException_enum_field_6.id = 6;
  module_AnException_enum_field_6.name = "enum_field";
  module_AnException_enum_field_6.is_optional = false;
  auto module_AnException_enum_field_6_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_AnException_enum_field_6_type->initialize(module_AnException_enum_field_6.type);
  module_AnException.fields.push_back(std::move(module_AnException_enum_field_6));
  ::apache::thrift::metadata::ThriftField module_AnException_enum_container_7;
  module_AnException_enum_container_7.id = 7;
  module_AnException_enum_container_7.name = "enum_container";
  module_AnException_enum_container_7.is_optional = false;
  auto module_AnException_enum_container_7_type = std::make_unique<List>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata));
  module_AnException_enum_container_7_type->initialize(module_AnException_enum_container_7.type);
  module_AnException.fields.push_back(std::move(module_AnException_enum_container_7));
  ::apache::thrift::metadata::ThriftField module_AnException_a_struct_8;
  module_AnException_a_struct_8.id = 8;
  module_AnException_a_struct_8.name = "a_struct";
  module_AnException_a_struct_8.is_optional = false;
  auto module_AnException_a_struct_8_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_AnException_a_struct_8_type->initialize(module_AnException_a_struct_8.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_struct_8));
  ::apache::thrift::metadata::ThriftField module_AnException_a_set_struct_9;
  module_AnException_a_set_struct_9.id = 9;
  module_AnException_a_set_struct_9.name = "a_set_struct";
  module_AnException_a_set_struct_9.is_optional = false;
  auto module_AnException_a_set_struct_9_type = std::make_unique<Set>(std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata));
  module_AnException_a_set_struct_9_type->initialize(module_AnException_a_set_struct_9.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_set_struct_9));
  ::apache::thrift::metadata::ThriftField module_AnException_a_union_list_10;
  module_AnException_a_union_list_10.id = 10;
  module_AnException_a_union_list_10.name = "a_union_list";
  module_AnException_a_union_list_10.is_optional = false;
  auto module_AnException_a_union_list_10_type = std::make_unique<List>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata));
  module_AnException_a_union_list_10_type->initialize(module_AnException_a_union_list_10.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_union_list_10));
  ::apache::thrift::metadata::ThriftField module_AnException_union_typedef_11;
  module_AnException_union_typedef_11.id = 11;
  module_AnException_union_typedef_11.name = "union_typedef";
  module_AnException_union_typedef_11.is_optional = false;
  auto module_AnException_union_typedef_11_type = std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata)));
  module_AnException_union_typedef_11_type->initialize(module_AnException_union_typedef_11.type);
  module_AnException.fields.push_back(std::move(module_AnException_union_typedef_11));
  ::apache::thrift::metadata::ThriftField module_AnException_a_union_typedef_list_19;
  module_AnException_a_union_typedef_list_19.id = 19;
  module_AnException_a_union_typedef_list_19.name = "a_union_typedef_list";
  module_AnException_a_union_typedef_list_19.is_optional = false;
  auto module_AnException_a_union_typedef_list_19_type = std::make_unique<List>(std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata))));
  module_AnException_a_union_typedef_list_19_type->initialize(module_AnException_a_union_typedef_list_19.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_union_typedef_list_19));
}
void GeneratedStructMetadata<::some::valid::ns::AnotherException>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.AnotherException", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_AnotherException = res.first->second;
  module_AnotherException.name = "module.AnotherException";
  module_AnotherException.is_union = false;
  ::apache::thrift::metadata::ThriftField module_AnotherException_code_1;
  module_AnotherException_code_1.id = 1;
  module_AnotherException_code_1.name = "code";
  module_AnotherException_code_1.is_optional = false;
  auto module_AnotherException_code_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnotherException_code_1_type->initialize(module_AnotherException_code_1.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_code_1));
  ::apache::thrift::metadata::ThriftField module_AnotherException_req_code_101;
  module_AnotherException_req_code_101.id = 101;
  module_AnotherException_req_code_101.name = "req_code";
  module_AnotherException_req_code_101.is_optional = false;
  auto module_AnotherException_req_code_101_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnotherException_req_code_101_type->initialize(module_AnotherException_req_code_101.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_req_code_101));
  ::apache::thrift::metadata::ThriftField module_AnotherException_message_2;
  module_AnotherException_message_2.id = 2;
  module_AnotherException_message_2.name = "message";
  module_AnotherException_message_2.is_optional = false;
  auto module_AnotherException_message_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnotherException_message_2_type->initialize(module_AnotherException_message_2.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_message_2));
}
void GeneratedStructMetadata<::some::valid::ns::containerStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.containerStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_containerStruct = res.first->second;
  module_containerStruct.name = "module.containerStruct";
  module_containerStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldA_1;
  module_containerStruct_fieldA_1.id = 1;
  module_containerStruct_fieldA_1.name = "fieldA";
  module_containerStruct_fieldA_1.is_optional = false;
  auto module_containerStruct_fieldA_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_containerStruct_fieldA_1_type->initialize(module_containerStruct_fieldA_1.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldA_1));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldA_101;
  module_containerStruct_req_fieldA_101.id = 101;
  module_containerStruct_req_fieldA_101.name = "req_fieldA";
  module_containerStruct_req_fieldA_101.is_optional = false;
  auto module_containerStruct_req_fieldA_101_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_containerStruct_req_fieldA_101_type->initialize(module_containerStruct_req_fieldA_101.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldA_101));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldA_201;
  module_containerStruct_opt_fieldA_201.id = 201;
  module_containerStruct_opt_fieldA_201.name = "opt_fieldA";
  module_containerStruct_opt_fieldA_201.is_optional = true;
  auto module_containerStruct_opt_fieldA_201_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_containerStruct_opt_fieldA_201_type->initialize(module_containerStruct_opt_fieldA_201.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldA_201));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldB_2;
  module_containerStruct_fieldB_2.id = 2;
  module_containerStruct_fieldB_2.name = "fieldB";
  module_containerStruct_fieldB_2.is_optional = false;
  auto module_containerStruct_fieldB_2_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::BOOL));
  module_containerStruct_fieldB_2_type->initialize(module_containerStruct_fieldB_2.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldB_2));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldB_102;
  module_containerStruct_req_fieldB_102.id = 102;
  module_containerStruct_req_fieldB_102.name = "req_fieldB";
  module_containerStruct_req_fieldB_102.is_optional = false;
  auto module_containerStruct_req_fieldB_102_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::BOOL));
  module_containerStruct_req_fieldB_102_type->initialize(module_containerStruct_req_fieldB_102.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldB_102));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldB_202;
  module_containerStruct_opt_fieldB_202.id = 202;
  module_containerStruct_opt_fieldB_202.name = "opt_fieldB";
  module_containerStruct_opt_fieldB_202.is_optional = true;
  auto module_containerStruct_opt_fieldB_202_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::BOOL));
  module_containerStruct_opt_fieldB_202_type->initialize(module_containerStruct_opt_fieldB_202.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldB_202));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldC_3;
  module_containerStruct_fieldC_3.id = 3;
  module_containerStruct_fieldC_3.name = "fieldC";
  module_containerStruct_fieldC_3.is_optional = false;
  auto module_containerStruct_fieldC_3_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_containerStruct_fieldC_3_type->initialize(module_containerStruct_fieldC_3.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldC_3));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldC_103;
  module_containerStruct_req_fieldC_103.id = 103;
  module_containerStruct_req_fieldC_103.name = "req_fieldC";
  module_containerStruct_req_fieldC_103.is_optional = false;
  auto module_containerStruct_req_fieldC_103_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_containerStruct_req_fieldC_103_type->initialize(module_containerStruct_req_fieldC_103.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldC_103));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldC_203;
  module_containerStruct_opt_fieldC_203.id = 203;
  module_containerStruct_opt_fieldC_203.name = "opt_fieldC";
  module_containerStruct_opt_fieldC_203.is_optional = true;
  auto module_containerStruct_opt_fieldC_203_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_containerStruct_opt_fieldC_203_type->initialize(module_containerStruct_opt_fieldC_203.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldC_203));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldD_4;
  module_containerStruct_fieldD_4.id = 4;
  module_containerStruct_fieldD_4.name = "fieldD";
  module_containerStruct_fieldD_4.is_optional = false;
  auto module_containerStruct_fieldD_4_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_containerStruct_fieldD_4_type->initialize(module_containerStruct_fieldD_4.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldD_4));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldE_5;
  module_containerStruct_fieldE_5.id = 5;
  module_containerStruct_fieldE_5.name = "fieldE";
  module_containerStruct_fieldE_5.is_optional = false;
  auto module_containerStruct_fieldE_5_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_containerStruct_fieldE_5_type->initialize(module_containerStruct_fieldE_5.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldE_5));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldE_105;
  module_containerStruct_req_fieldE_105.id = 105;
  module_containerStruct_req_fieldE_105.name = "req_fieldE";
  module_containerStruct_req_fieldE_105.is_optional = false;
  auto module_containerStruct_req_fieldE_105_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_containerStruct_req_fieldE_105_type->initialize(module_containerStruct_req_fieldE_105.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldE_105));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldE_205;
  module_containerStruct_opt_fieldE_205.id = 205;
  module_containerStruct_opt_fieldE_205.name = "opt_fieldE";
  module_containerStruct_opt_fieldE_205.is_optional = true;
  auto module_containerStruct_opt_fieldE_205_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_containerStruct_opt_fieldE_205_type->initialize(module_containerStruct_opt_fieldE_205.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldE_205));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldF_6;
  module_containerStruct_fieldF_6.id = 6;
  module_containerStruct_fieldF_6.name = "fieldF";
  module_containerStruct_fieldF_6.is_optional = false;
  auto module_containerStruct_fieldF_6_type = std::make_unique<List>(std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_containerStruct_fieldF_6_type->initialize(module_containerStruct_fieldF_6.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldF_6));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldG_7;
  module_containerStruct_fieldG_7.id = 7;
  module_containerStruct_fieldG_7.name = "fieldG";
  module_containerStruct_fieldG_7.is_optional = false;
  auto module_containerStruct_fieldG_7_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32))));
  module_containerStruct_fieldG_7_type->initialize(module_containerStruct_fieldG_7.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldG_7));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldH_8;
  module_containerStruct_fieldH_8.id = 8;
  module_containerStruct_fieldH_8.name = "fieldH";
  module_containerStruct_fieldH_8.is_optional = false;
  auto module_containerStruct_fieldH_8_type = std::make_unique<List>(std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_containerStruct_fieldH_8_type->initialize(module_containerStruct_fieldH_8.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldH_8));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldI_9;
  module_containerStruct_fieldI_9.id = 9;
  module_containerStruct_fieldI_9.name = "fieldI";
  module_containerStruct_fieldI_9.is_optional = false;
  auto module_containerStruct_fieldI_9_type = std::make_unique<Primitive>(ThriftPrimitiveType::BOOL);
  module_containerStruct_fieldI_9_type->initialize(module_containerStruct_fieldI_9.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldI_9));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldJ_10;
  module_containerStruct_fieldJ_10.id = 10;
  module_containerStruct_fieldJ_10.name = "fieldJ";
  module_containerStruct_fieldJ_10.is_optional = false;
  auto module_containerStruct_fieldJ_10_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_containerStruct_fieldJ_10_type->initialize(module_containerStruct_fieldJ_10.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldJ_10));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldK_11;
  module_containerStruct_fieldK_11.id = 11;
  module_containerStruct_fieldK_11.name = "fieldK";
  module_containerStruct_fieldK_11.is_optional = false;
  auto module_containerStruct_fieldK_11_type = std::make_unique<List>(std::make_unique<List>(std::make_unique<List>(std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32)))));
  module_containerStruct_fieldK_11_type->initialize(module_containerStruct_fieldK_11.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldK_11));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldL_12;
  module_containerStruct_fieldL_12.id = 12;
  module_containerStruct_fieldL_12.name = "fieldL";
  module_containerStruct_fieldL_12.is_optional = false;
  auto module_containerStruct_fieldL_12_type = std::make_unique<Set>(std::make_unique<Set>(std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::BOOL))));
  module_containerStruct_fieldL_12_type->initialize(module_containerStruct_fieldL_12.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldL_12));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldM_13;
  module_containerStruct_fieldM_13.id = 13;
  module_containerStruct_fieldM_13.name = "fieldM";
  module_containerStruct_fieldM_13.is_optional = false;
  auto module_containerStruct_fieldM_13_type = std::make_unique<Map>(std::make_unique<Set>(std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32))), std::make_unique<Map>(std::make_unique<List>(std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING))), std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_containerStruct_fieldM_13_type->initialize(module_containerStruct_fieldM_13.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldM_13));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldN_14;
  module_containerStruct_fieldN_14.id = 14;
  module_containerStruct_fieldN_14.name = "fieldN";
  module_containerStruct_fieldN_14.is_optional = false;
  auto module_containerStruct_fieldN_14_type = std::make_unique<Typedef>("module.simpleTypeDef", std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_containerStruct_fieldN_14_type->initialize(module_containerStruct_fieldN_14.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldN_14));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldO_15;
  module_containerStruct_fieldO_15.id = 15;
  module_containerStruct_fieldO_15.name = "fieldO";
  module_containerStruct_fieldO_15.is_optional = false;
  auto module_containerStruct_fieldO_15_type = std::make_unique<Typedef>("module.complexStructTypeDef", std::make_unique<List>(std::make_unique<Map>(std::make_unique<Struct< ::some::valid::ns::Empty>>("module.Empty", metadata), std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata))));
  module_containerStruct_fieldO_15_type->initialize(module_containerStruct_fieldO_15.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldO_15));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldP_16;
  module_containerStruct_fieldP_16.id = 16;
  module_containerStruct_fieldP_16.name = "fieldP";
  module_containerStruct_fieldP_16.is_optional = false;
  auto module_containerStruct_fieldP_16_type = std::make_unique<List>(std::make_unique<Typedef>("module.mostComplexTypeDef", std::make_unique<List>(std::make_unique<Typedef>("module.complexStructTypeDef", std::make_unique<List>(std::make_unique<Map>(std::make_unique<Struct< ::some::valid::ns::Empty>>("module.Empty", metadata), std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata)))))));
  module_containerStruct_fieldP_16_type->initialize(module_containerStruct_fieldP_16.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldP_16));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldQ_17;
  module_containerStruct_fieldQ_17.id = 17;
  module_containerStruct_fieldQ_17.name = "fieldQ";
  module_containerStruct_fieldQ_17.is_optional = false;
  auto module_containerStruct_fieldQ_17_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_containerStruct_fieldQ_17_type->initialize(module_containerStruct_fieldQ_17.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldQ_17));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldR_18;
  module_containerStruct_fieldR_18.id = 18;
  module_containerStruct_fieldR_18.name = "fieldR";
  module_containerStruct_fieldR_18.is_optional = false;
  auto module_containerStruct_fieldR_18_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_containerStruct_fieldR_18_type->initialize(module_containerStruct_fieldR_18.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldR_18));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldR_118;
  module_containerStruct_req_fieldR_118.id = 118;
  module_containerStruct_req_fieldR_118.name = "req_fieldR";
  module_containerStruct_req_fieldR_118.is_optional = false;
  auto module_containerStruct_req_fieldR_118_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_containerStruct_req_fieldR_118_type->initialize(module_containerStruct_req_fieldR_118.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldR_118));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldR_218;
  module_containerStruct_opt_fieldR_218.id = 218;
  module_containerStruct_opt_fieldR_218.name = "opt_fieldR";
  module_containerStruct_opt_fieldR_218.is_optional = true;
  auto module_containerStruct_opt_fieldR_218_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_containerStruct_opt_fieldR_218_type->initialize(module_containerStruct_opt_fieldR_218.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldR_218));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldS_19;
  module_containerStruct_fieldS_19.id = 19;
  module_containerStruct_fieldS_19.name = "fieldS";
  module_containerStruct_fieldS_19.is_optional = false;
  auto module_containerStruct_fieldS_19_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_containerStruct_fieldS_19_type->initialize(module_containerStruct_fieldS_19.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldS_19));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldT_21;
  module_containerStruct_fieldT_21.id = 21;
  module_containerStruct_fieldT_21.name = "fieldT";
  module_containerStruct_fieldT_21.is_optional = false;
  auto module_containerStruct_fieldT_21_type = std::make_unique<List>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata));
  module_containerStruct_fieldT_21_type->initialize(module_containerStruct_fieldT_21.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldT_21));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldU_22;
  module_containerStruct_fieldU_22.id = 22;
  module_containerStruct_fieldU_22.name = "fieldU";
  module_containerStruct_fieldU_22.is_optional = false;
  auto module_containerStruct_fieldU_22_type = std::make_unique<List>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata));
  module_containerStruct_fieldU_22_type->initialize(module_containerStruct_fieldU_22.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldU_22));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldV_23;
  module_containerStruct_fieldV_23.id = 23;
  module_containerStruct_fieldV_23.name = "fieldV";
  module_containerStruct_fieldV_23.is_optional = false;
  auto module_containerStruct_fieldV_23_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_containerStruct_fieldV_23_type->initialize(module_containerStruct_fieldV_23.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldV_23));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldV_123;
  module_containerStruct_req_fieldV_123.id = 123;
  module_containerStruct_req_fieldV_123.name = "req_fieldV";
  module_containerStruct_req_fieldV_123.is_optional = false;
  auto module_containerStruct_req_fieldV_123_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_containerStruct_req_fieldV_123_type->initialize(module_containerStruct_req_fieldV_123.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldV_123));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldV_223;
  module_containerStruct_opt_fieldV_223.id = 223;
  module_containerStruct_opt_fieldV_223.name = "opt_fieldV";
  module_containerStruct_opt_fieldV_223.is_optional = true;
  auto module_containerStruct_opt_fieldV_223_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_containerStruct_opt_fieldV_223_type->initialize(module_containerStruct_opt_fieldV_223.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldV_223));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldW_24;
  module_containerStruct_fieldW_24.id = 24;
  module_containerStruct_fieldW_24.name = "fieldW";
  module_containerStruct_fieldW_24.is_optional = false;
  auto module_containerStruct_fieldW_24_type = std::make_unique<Set>(std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata));
  module_containerStruct_fieldW_24_type->initialize(module_containerStruct_fieldW_24.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldW_24));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldX_25;
  module_containerStruct_fieldX_25.id = 25;
  module_containerStruct_fieldX_25.name = "fieldX";
  module_containerStruct_fieldX_25.is_optional = false;
  auto module_containerStruct_fieldX_25_type = std::make_unique<Union< ::some::valid::ns::ComplexUnion>>("module.ComplexUnion", metadata);
  module_containerStruct_fieldX_25_type->initialize(module_containerStruct_fieldX_25.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldX_25));
  ::apache::thrift::metadata::ThriftField module_containerStruct_req_fieldX_125;
  module_containerStruct_req_fieldX_125.id = 125;
  module_containerStruct_req_fieldX_125.name = "req_fieldX";
  module_containerStruct_req_fieldX_125.is_optional = false;
  auto module_containerStruct_req_fieldX_125_type = std::make_unique<Union< ::some::valid::ns::ComplexUnion>>("module.ComplexUnion", metadata);
  module_containerStruct_req_fieldX_125_type->initialize(module_containerStruct_req_fieldX_125.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_req_fieldX_125));
  ::apache::thrift::metadata::ThriftField module_containerStruct_opt_fieldX_225;
  module_containerStruct_opt_fieldX_225.id = 225;
  module_containerStruct_opt_fieldX_225.name = "opt_fieldX";
  module_containerStruct_opt_fieldX_225.is_optional = true;
  auto module_containerStruct_opt_fieldX_225_type = std::make_unique<Union< ::some::valid::ns::ComplexUnion>>("module.ComplexUnion", metadata);
  module_containerStruct_opt_fieldX_225_type->initialize(module_containerStruct_opt_fieldX_225.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_opt_fieldX_225));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldY_26;
  module_containerStruct_fieldY_26.id = 26;
  module_containerStruct_fieldY_26.name = "fieldY";
  module_containerStruct_fieldY_26.is_optional = false;
  auto module_containerStruct_fieldY_26_type = std::make_unique<List>(std::make_unique<Union< ::some::valid::ns::ComplexUnion>>("module.ComplexUnion", metadata));
  module_containerStruct_fieldY_26_type->initialize(module_containerStruct_fieldY_26.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldY_26));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldZ_27;
  module_containerStruct_fieldZ_27.id = 27;
  module_containerStruct_fieldZ_27.name = "fieldZ";
  module_containerStruct_fieldZ_27.is_optional = false;
  auto module_containerStruct_fieldZ_27_type = std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata)));
  module_containerStruct_fieldZ_27_type->initialize(module_containerStruct_fieldZ_27.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldZ_27));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldAA_28;
  module_containerStruct_fieldAA_28.id = 28;
  module_containerStruct_fieldAA_28.name = "fieldAA";
  module_containerStruct_fieldAA_28.is_optional = false;
  auto module_containerStruct_fieldAA_28_type = std::make_unique<List>(std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata))));
  module_containerStruct_fieldAA_28_type->initialize(module_containerStruct_fieldAA_28.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldAA_28));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldAB_29;
  module_containerStruct_fieldAB_29.id = 29;
  module_containerStruct_fieldAB_29.name = "fieldAB";
  module_containerStruct_fieldAB_29.is_optional = false;
  auto module_containerStruct_fieldAB_29_type = std::make_unique<Map>(std::make_unique<Typedef>("module.IndirectionB", std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE)), std::make_unique<Typedef>("module.IndirectionC", std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_containerStruct_fieldAB_29_type->initialize(module_containerStruct_fieldAB_29.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldAB_29));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldAC_30;
  module_containerStruct_fieldAC_30.id = 30;
  module_containerStruct_fieldAC_30.name = "fieldAC";
  module_containerStruct_fieldAC_30.is_optional = false;
  auto module_containerStruct_fieldAC_30_type = std::make_unique<Typedef>("module.MyEnumB", std::make_unique<Enum< ::some::valid::ns::MyEnumB>>("module.MyEnumB", metadata));
  module_containerStruct_fieldAC_30_type->initialize(module_containerStruct_fieldAC_30.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldAC_30));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldAD_31;
  module_containerStruct_fieldAD_31.id = 31;
  module_containerStruct_fieldAD_31.name = "fieldAD";
  module_containerStruct_fieldAD_31.is_optional = false;
  auto module_containerStruct_fieldAD_31_type = std::make_unique<Enum< ::a::different::ns::AnEnum>>("includes.AnEnum", metadata);
  module_containerStruct_fieldAD_31_type->initialize(module_containerStruct_fieldAD_31.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldAD_31));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldAE_32;
  module_containerStruct_fieldAE_32.id = 32;
  module_containerStruct_fieldAE_32.name = "fieldAE";
  module_containerStruct_fieldAE_32.is_optional = false;
  auto module_containerStruct_fieldAE_32_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_containerStruct_fieldAE_32_type->initialize(module_containerStruct_fieldAE_32.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldAE_32));
  ::apache::thrift::metadata::ThriftField module_containerStruct_fieldSD_33;
  module_containerStruct_fieldSD_33.id = 33;
  module_containerStruct_fieldSD_33.name = "fieldSD";
  module_containerStruct_fieldSD_33.is_optional = false;
  auto module_containerStruct_fieldSD_33_type = std::make_unique<Typedef>("module.IndirectionD", std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_containerStruct_fieldSD_33_type->initialize(module_containerStruct_fieldSD_33.type);
  module_containerStruct.fields.push_back(std::move(module_containerStruct_fieldSD_33));
}
void GeneratedStructMetadata<::some::valid::ns::MyIncludedStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.MyIncludedStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_MyIncludedStruct = res.first->second;
  module_MyIncludedStruct.name = "module.MyIncludedStruct";
  module_MyIncludedStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_MyIncludedStruct_MyIncludedInt_1;
  module_MyIncludedStruct_MyIncludedInt_1.id = 1;
  module_MyIncludedStruct_MyIncludedInt_1.name = "MyIncludedInt";
  module_MyIncludedStruct_MyIncludedInt_1.is_optional = false;
  auto module_MyIncludedStruct_MyIncludedInt_1_type = std::make_unique<Typedef>("includes.IncludedInt64", std::make_unique<Primitive>(ThriftPrimitiveType::I64));
  module_MyIncludedStruct_MyIncludedInt_1_type->initialize(module_MyIncludedStruct_MyIncludedInt_1.type);
  module_MyIncludedStruct.fields.push_back(std::move(module_MyIncludedStruct_MyIncludedInt_1));
  ::apache::thrift::metadata::ThriftField module_MyIncludedStruct_MyIncludedStruct_2;
  module_MyIncludedStruct_MyIncludedStruct_2.id = 2;
  module_MyIncludedStruct_MyIncludedStruct_2.name = "MyIncludedStruct";
  module_MyIncludedStruct_MyIncludedStruct_2.is_optional = false;
  auto module_MyIncludedStruct_MyIncludedStruct_2_type = std::make_unique<Typedef>("module.AStruct", std::make_unique<Struct< ::a::different::ns::AStruct>>("includes.AStruct", metadata));
  module_MyIncludedStruct_MyIncludedStruct_2_type->initialize(module_MyIncludedStruct_MyIncludedStruct_2.type);
  module_MyIncludedStruct.fields.push_back(std::move(module_MyIncludedStruct_MyIncludedStruct_2));
  ::apache::thrift::metadata::ThriftField module_MyIncludedStruct_ARefField_3;
  module_MyIncludedStruct_ARefField_3.id = 3;
  module_MyIncludedStruct_ARefField_3.name = "ARefField";
  module_MyIncludedStruct_ARefField_3.is_optional = false;
  auto module_MyIncludedStruct_ARefField_3_type = std::make_unique<Typedef>("module.AStruct", std::make_unique<Struct< ::a::different::ns::AStruct>>("includes.AStruct", metadata));
  module_MyIncludedStruct_ARefField_3_type->initialize(module_MyIncludedStruct_ARefField_3.type);
  module_MyIncludedStruct.fields.push_back(std::move(module_MyIncludedStruct_ARefField_3));
  ::apache::thrift::metadata::ThriftField module_MyIncludedStruct_ARequiredField_4;
  module_MyIncludedStruct_ARequiredField_4.id = 4;
  module_MyIncludedStruct_ARequiredField_4.name = "ARequiredField";
  module_MyIncludedStruct_ARequiredField_4.is_optional = false;
  auto module_MyIncludedStruct_ARequiredField_4_type = std::make_unique<Typedef>("module.AStruct", std::make_unique<Struct< ::a::different::ns::AStruct>>("includes.AStruct", metadata));
  module_MyIncludedStruct_ARequiredField_4_type->initialize(module_MyIncludedStruct_ARequiredField_4.type);
  module_MyIncludedStruct.fields.push_back(std::move(module_MyIncludedStruct_ARequiredField_4));
}
void GeneratedStructMetadata<::some::valid::ns::AnnotatedStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.AnnotatedStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_AnnotatedStruct = res.first->second;
  module_AnnotatedStruct.name = "module.AnnotatedStruct";
  module_AnnotatedStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_no_annotation_1;
  module_AnnotatedStruct_no_annotation_1.id = 1;
  module_AnnotatedStruct_no_annotation_1.name = "no_annotation";
  module_AnnotatedStruct_no_annotation_1.is_optional = false;
  auto module_AnnotatedStruct_no_annotation_1_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_no_annotation_1_type->initialize(module_AnnotatedStruct_no_annotation_1.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_no_annotation_1));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_cpp_unique_ref_2;
  module_AnnotatedStruct_cpp_unique_ref_2.id = 2;
  module_AnnotatedStruct_cpp_unique_ref_2.name = "cpp_unique_ref";
  module_AnnotatedStruct_cpp_unique_ref_2.is_optional = false;
  auto module_AnnotatedStruct_cpp_unique_ref_2_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_cpp_unique_ref_2_type->initialize(module_AnnotatedStruct_cpp_unique_ref_2.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_cpp_unique_ref_2));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_cpp2_unique_ref_3;
  module_AnnotatedStruct_cpp2_unique_ref_3.id = 3;
  module_AnnotatedStruct_cpp2_unique_ref_3.name = "cpp2_unique_ref";
  module_AnnotatedStruct_cpp2_unique_ref_3.is_optional = false;
  auto module_AnnotatedStruct_cpp2_unique_ref_3_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_cpp2_unique_ref_3_type->initialize(module_AnnotatedStruct_cpp2_unique_ref_3.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_cpp2_unique_ref_3));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_container_with_ref_4;
  module_AnnotatedStruct_container_with_ref_4.id = 4;
  module_AnnotatedStruct_container_with_ref_4.name = "container_with_ref";
  module_AnnotatedStruct_container_with_ref_4.is_optional = false;
  auto module_AnnotatedStruct_container_with_ref_4_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::I32), std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_container_with_ref_4_type->initialize(module_AnnotatedStruct_container_with_ref_4.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_container_with_ref_4));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_cpp_unique_ref_5;
  module_AnnotatedStruct_req_cpp_unique_ref_5.id = 5;
  module_AnnotatedStruct_req_cpp_unique_ref_5.name = "req_cpp_unique_ref";
  module_AnnotatedStruct_req_cpp_unique_ref_5.is_optional = false;
  auto module_AnnotatedStruct_req_cpp_unique_ref_5_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_req_cpp_unique_ref_5_type->initialize(module_AnnotatedStruct_req_cpp_unique_ref_5.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_cpp_unique_ref_5));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_cpp2_unique_ref_6;
  module_AnnotatedStruct_req_cpp2_unique_ref_6.id = 6;
  module_AnnotatedStruct_req_cpp2_unique_ref_6.name = "req_cpp2_unique_ref";
  module_AnnotatedStruct_req_cpp2_unique_ref_6.is_optional = false;
  auto module_AnnotatedStruct_req_cpp2_unique_ref_6_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_req_cpp2_unique_ref_6_type->initialize(module_AnnotatedStruct_req_cpp2_unique_ref_6.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_cpp2_unique_ref_6));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_container_with_ref_7;
  module_AnnotatedStruct_req_container_with_ref_7.id = 7;
  module_AnnotatedStruct_req_container_with_ref_7.name = "req_container_with_ref";
  module_AnnotatedStruct_req_container_with_ref_7.is_optional = false;
  auto module_AnnotatedStruct_req_container_with_ref_7_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_AnnotatedStruct_req_container_with_ref_7_type->initialize(module_AnnotatedStruct_req_container_with_ref_7.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_container_with_ref_7));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_cpp_unique_ref_8;
  module_AnnotatedStruct_opt_cpp_unique_ref_8.id = 8;
  module_AnnotatedStruct_opt_cpp_unique_ref_8.name = "opt_cpp_unique_ref";
  module_AnnotatedStruct_opt_cpp_unique_ref_8.is_optional = true;
  auto module_AnnotatedStruct_opt_cpp_unique_ref_8_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_opt_cpp_unique_ref_8_type->initialize(module_AnnotatedStruct_opt_cpp_unique_ref_8.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_cpp_unique_ref_8));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_cpp2_unique_ref_9;
  module_AnnotatedStruct_opt_cpp2_unique_ref_9.id = 9;
  module_AnnotatedStruct_opt_cpp2_unique_ref_9.name = "opt_cpp2_unique_ref";
  module_AnnotatedStruct_opt_cpp2_unique_ref_9.is_optional = true;
  auto module_AnnotatedStruct_opt_cpp2_unique_ref_9_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_opt_cpp2_unique_ref_9_type->initialize(module_AnnotatedStruct_opt_cpp2_unique_ref_9.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_cpp2_unique_ref_9));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_container_with_ref_10;
  module_AnnotatedStruct_opt_container_with_ref_10.id = 10;
  module_AnnotatedStruct_opt_container_with_ref_10.name = "opt_container_with_ref";
  module_AnnotatedStruct_opt_container_with_ref_10.is_optional = true;
  auto module_AnnotatedStruct_opt_container_with_ref_10_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnnotatedStruct_opt_container_with_ref_10_type->initialize(module_AnnotatedStruct_opt_container_with_ref_10.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_container_with_ref_10));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_ref_type_unique_11;
  module_AnnotatedStruct_ref_type_unique_11.id = 11;
  module_AnnotatedStruct_ref_type_unique_11.name = "ref_type_unique";
  module_AnnotatedStruct_ref_type_unique_11.is_optional = false;
  auto module_AnnotatedStruct_ref_type_unique_11_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_ref_type_unique_11_type->initialize(module_AnnotatedStruct_ref_type_unique_11.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_ref_type_unique_11));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_ref_type_shared_12;
  module_AnnotatedStruct_ref_type_shared_12.id = 12;
  module_AnnotatedStruct_ref_type_shared_12.name = "ref_type_shared";
  module_AnnotatedStruct_ref_type_shared_12.is_optional = false;
  auto module_AnnotatedStruct_ref_type_shared_12_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_ref_type_shared_12_type->initialize(module_AnnotatedStruct_ref_type_shared_12.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_ref_type_shared_12));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_ref_type_const_13;
  module_AnnotatedStruct_ref_type_const_13.id = 13;
  module_AnnotatedStruct_ref_type_const_13.name = "ref_type_const";
  module_AnnotatedStruct_ref_type_const_13.is_optional = false;
  auto module_AnnotatedStruct_ref_type_const_13_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::I32), std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_ref_type_const_13_type->initialize(module_AnnotatedStruct_ref_type_const_13.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_ref_type_const_13));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_ref_type_shared_14;
  module_AnnotatedStruct_req_ref_type_shared_14.id = 14;
  module_AnnotatedStruct_req_ref_type_shared_14.name = "req_ref_type_shared";
  module_AnnotatedStruct_req_ref_type_shared_14.is_optional = false;
  auto module_AnnotatedStruct_req_ref_type_shared_14_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_req_ref_type_shared_14_type->initialize(module_AnnotatedStruct_req_ref_type_shared_14.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_ref_type_shared_14));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_ref_type_const_15;
  module_AnnotatedStruct_req_ref_type_const_15.id = 15;
  module_AnnotatedStruct_req_ref_type_const_15.name = "req_ref_type_const";
  module_AnnotatedStruct_req_ref_type_const_15.is_optional = false;
  auto module_AnnotatedStruct_req_ref_type_const_15_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_req_ref_type_const_15_type->initialize(module_AnnotatedStruct_req_ref_type_const_15.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_ref_type_const_15));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_req_ref_type_unique_16;
  module_AnnotatedStruct_req_ref_type_unique_16.id = 16;
  module_AnnotatedStruct_req_ref_type_unique_16.name = "req_ref_type_unique";
  module_AnnotatedStruct_req_ref_type_unique_16.is_optional = false;
  auto module_AnnotatedStruct_req_ref_type_unique_16_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_AnnotatedStruct_req_ref_type_unique_16_type->initialize(module_AnnotatedStruct_req_ref_type_unique_16.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_req_ref_type_unique_16));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_ref_type_const_17;
  module_AnnotatedStruct_opt_ref_type_const_17.id = 17;
  module_AnnotatedStruct_opt_ref_type_const_17.name = "opt_ref_type_const";
  module_AnnotatedStruct_opt_ref_type_const_17.is_optional = true;
  auto module_AnnotatedStruct_opt_ref_type_const_17_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_opt_ref_type_const_17_type->initialize(module_AnnotatedStruct_opt_ref_type_const_17.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_ref_type_const_17));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_ref_type_unique_18;
  module_AnnotatedStruct_opt_ref_type_unique_18.id = 18;
  module_AnnotatedStruct_opt_ref_type_unique_18.name = "opt_ref_type_unique";
  module_AnnotatedStruct_opt_ref_type_unique_18.is_optional = true;
  auto module_AnnotatedStruct_opt_ref_type_unique_18_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_opt_ref_type_unique_18_type->initialize(module_AnnotatedStruct_opt_ref_type_unique_18.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_ref_type_unique_18));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_opt_ref_type_shared_19;
  module_AnnotatedStruct_opt_ref_type_shared_19.id = 19;
  module_AnnotatedStruct_opt_ref_type_shared_19.name = "opt_ref_type_shared";
  module_AnnotatedStruct_opt_ref_type_shared_19.is_optional = true;
  auto module_AnnotatedStruct_opt_ref_type_shared_19_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnnotatedStruct_opt_ref_type_shared_19_type->initialize(module_AnnotatedStruct_opt_ref_type_shared_19.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_opt_ref_type_shared_19));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_base_type_20;
  module_AnnotatedStruct_base_type_20.id = 20;
  module_AnnotatedStruct_base_type_20.name = "base_type";
  module_AnnotatedStruct_base_type_20.is_optional = false;
  auto module_AnnotatedStruct_base_type_20_type = std::make_unique<Typedef>("module.CppFakeI32", std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnnotatedStruct_base_type_20_type->initialize(module_AnnotatedStruct_base_type_20.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_base_type_20));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_list_type_21;
  module_AnnotatedStruct_list_type_21.id = 21;
  module_AnnotatedStruct_list_type_21.name = "list_type";
  module_AnnotatedStruct_list_type_21.is_optional = false;
  auto module_AnnotatedStruct_list_type_21_type = std::make_unique<Typedef>("module.FollySmallVectorI64", std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I64)));
  module_AnnotatedStruct_list_type_21_type->initialize(module_AnnotatedStruct_list_type_21.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_list_type_21));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_set_type_22;
  module_AnnotatedStruct_set_type_22.id = 22;
  module_AnnotatedStruct_set_type_22.name = "set_type";
  module_AnnotatedStruct_set_type_22.is_optional = false;
  auto module_AnnotatedStruct_set_type_22_type = std::make_unique<Typedef>("module.SortedVectorSetString", std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_set_type_22_type->initialize(module_AnnotatedStruct_set_type_22.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_set_type_22));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_map_type_23;
  module_AnnotatedStruct_map_type_23.id = 23;
  module_AnnotatedStruct_map_type_23.name = "map_type";
  module_AnnotatedStruct_map_type_23.is_optional = false;
  auto module_AnnotatedStruct_map_type_23_type = std::make_unique<Typedef>("module.FakeMap", std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::I64), std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE)));
  module_AnnotatedStruct_map_type_23_type->initialize(module_AnnotatedStruct_map_type_23.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_map_type_23));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_map_struct_type_24;
  module_AnnotatedStruct_map_struct_type_24.id = 24;
  module_AnnotatedStruct_map_struct_type_24.name = "map_struct_type";
  module_AnnotatedStruct_map_struct_type_24.is_optional = false;
  auto module_AnnotatedStruct_map_struct_type_24_type = std::make_unique<Typedef>("module.UnorderedMapStruct", std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata)));
  module_AnnotatedStruct_map_struct_type_24_type->initialize(module_AnnotatedStruct_map_struct_type_24.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_map_struct_type_24));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_iobuf_type_25;
  module_AnnotatedStruct_iobuf_type_25.id = 25;
  module_AnnotatedStruct_iobuf_type_25.name = "iobuf_type";
  module_AnnotatedStruct_iobuf_type_25.is_optional = false;
  auto module_AnnotatedStruct_iobuf_type_25_type = std::make_unique<Typedef>("module.IOBuf", std::make_unique<Typedef>("module.IOBuf", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY)));
  module_AnnotatedStruct_iobuf_type_25_type->initialize(module_AnnotatedStruct_iobuf_type_25.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_iobuf_type_25));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_iobuf_ptr_26;
  module_AnnotatedStruct_iobuf_ptr_26.id = 26;
  module_AnnotatedStruct_iobuf_ptr_26.name = "iobuf_ptr";
  module_AnnotatedStruct_iobuf_ptr_26.is_optional = false;
  auto module_AnnotatedStruct_iobuf_ptr_26_type = std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY)));
  module_AnnotatedStruct_iobuf_ptr_26_type->initialize(module_AnnotatedStruct_iobuf_ptr_26.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_iobuf_ptr_26));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_list_i32_template_27;
  module_AnnotatedStruct_list_i32_template_27.id = 27;
  module_AnnotatedStruct_list_i32_template_27.name = "list_i32_template";
  module_AnnotatedStruct_list_i32_template_27.is_optional = false;
  auto module_AnnotatedStruct_list_i32_template_27_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnnotatedStruct_list_i32_template_27_type->initialize(module_AnnotatedStruct_list_i32_template_27.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_list_i32_template_27));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_list_string_template_28;
  module_AnnotatedStruct_list_string_template_28.id = 28;
  module_AnnotatedStruct_list_string_template_28.name = "list_string_template";
  module_AnnotatedStruct_list_string_template_28.is_optional = false;
  auto module_AnnotatedStruct_list_string_template_28_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_AnnotatedStruct_list_string_template_28_type->initialize(module_AnnotatedStruct_list_string_template_28.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_list_string_template_28));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_set_template_29;
  module_AnnotatedStruct_set_template_29.id = 29;
  module_AnnotatedStruct_set_template_29.name = "set_template";
  module_AnnotatedStruct_set_template_29.is_optional = false;
  auto module_AnnotatedStruct_set_template_29_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_AnnotatedStruct_set_template_29_type->initialize(module_AnnotatedStruct_set_template_29.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_set_template_29));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_map_template_30;
  module_AnnotatedStruct_map_template_30.id = 30;
  module_AnnotatedStruct_map_template_30.name = "map_template";
  module_AnnotatedStruct_map_template_30.is_optional = false;
  auto module_AnnotatedStruct_map_template_30_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::I64), std::make_unique<Primitive>(ThriftPrimitiveType::STRING));
  module_AnnotatedStruct_map_template_30_type->initialize(module_AnnotatedStruct_map_template_30.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_map_template_30));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_typedef_list_template_31;
  module_AnnotatedStruct_typedef_list_template_31.id = 31;
  module_AnnotatedStruct_typedef_list_template_31.name = "typedef_list_template";
  module_AnnotatedStruct_typedef_list_template_31.is_optional = false;
  auto module_AnnotatedStruct_typedef_list_template_31_type = std::make_unique<Typedef>("module.std_list", std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_AnnotatedStruct_typedef_list_template_31_type->initialize(module_AnnotatedStruct_typedef_list_template_31.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_typedef_list_template_31));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_typedef_deque_template_32;
  module_AnnotatedStruct_typedef_deque_template_32.id = 32;
  module_AnnotatedStruct_typedef_deque_template_32.name = "typedef_deque_template";
  module_AnnotatedStruct_typedef_deque_template_32.is_optional = false;
  auto module_AnnotatedStruct_typedef_deque_template_32_type = std::make_unique<Typedef>("module.std_deque", std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_typedef_deque_template_32_type->initialize(module_AnnotatedStruct_typedef_deque_template_32.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_typedef_deque_template_32));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_typedef_set_template_33;
  module_AnnotatedStruct_typedef_set_template_33.id = 33;
  module_AnnotatedStruct_typedef_set_template_33.name = "typedef_set_template";
  module_AnnotatedStruct_typedef_set_template_33.is_optional = false;
  auto module_AnnotatedStruct_typedef_set_template_33_type = std::make_unique<Typedef>("module.folly_set", std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_typedef_set_template_33_type->initialize(module_AnnotatedStruct_typedef_set_template_33.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_typedef_set_template_33));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_typedef_map_template_34;
  module_AnnotatedStruct_typedef_map_template_34.id = 34;
  module_AnnotatedStruct_typedef_map_template_34.name = "typedef_map_template";
  module_AnnotatedStruct_typedef_map_template_34.is_optional = false;
  auto module_AnnotatedStruct_typedef_map_template_34_type = std::make_unique<Typedef>("module.folly_map", std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::I64), std::make_unique<Primitive>(ThriftPrimitiveType::STRING)));
  module_AnnotatedStruct_typedef_map_template_34_type->initialize(module_AnnotatedStruct_typedef_map_template_34.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_typedef_map_template_34));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_indirection_a_35;
  module_AnnotatedStruct_indirection_a_35.id = 35;
  module_AnnotatedStruct_indirection_a_35.name = "indirection_a";
  module_AnnotatedStruct_indirection_a_35.is_optional = false;
  auto module_AnnotatedStruct_indirection_a_35_type = std::make_unique<Typedef>("module.IndirectionA", std::make_unique<Primitive>(ThriftPrimitiveType::I64));
  module_AnnotatedStruct_indirection_a_35_type->initialize(module_AnnotatedStruct_indirection_a_35.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_indirection_a_35));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_indirection_b_36;
  module_AnnotatedStruct_indirection_b_36.id = 36;
  module_AnnotatedStruct_indirection_b_36.name = "indirection_b";
  module_AnnotatedStruct_indirection_b_36.is_optional = false;
  auto module_AnnotatedStruct_indirection_b_36_type = std::make_unique<List>(std::make_unique<Typedef>("module.IndirectionB", std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE)));
  module_AnnotatedStruct_indirection_b_36_type->initialize(module_AnnotatedStruct_indirection_b_36.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_indirection_b_36));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_indirection_c_37;
  module_AnnotatedStruct_indirection_c_37.id = 37;
  module_AnnotatedStruct_indirection_c_37.name = "indirection_c";
  module_AnnotatedStruct_indirection_c_37.is_optional = false;
  auto module_AnnotatedStruct_indirection_c_37_type = std::make_unique<Set>(std::make_unique<Typedef>("module.IndirectionC", std::make_unique<Primitive>(ThriftPrimitiveType::I32)));
  module_AnnotatedStruct_indirection_c_37_type->initialize(module_AnnotatedStruct_indirection_c_37.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_indirection_c_37));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_iobuf_type_val_38;
  module_AnnotatedStruct_iobuf_type_val_38.id = 38;
  module_AnnotatedStruct_iobuf_type_val_38.name = "iobuf_type_val";
  module_AnnotatedStruct_iobuf_type_val_38.is_optional = false;
  auto module_AnnotatedStruct_iobuf_type_val_38_type = std::make_unique<Typedef>("module.IOBuf", std::make_unique<Typedef>("module.IOBuf", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY)));
  module_AnnotatedStruct_iobuf_type_val_38_type->initialize(module_AnnotatedStruct_iobuf_type_val_38.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_iobuf_type_val_38));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_iobuf_ptr_val_39;
  module_AnnotatedStruct_iobuf_ptr_val_39.id = 39;
  module_AnnotatedStruct_iobuf_ptr_val_39.name = "iobuf_ptr_val";
  module_AnnotatedStruct_iobuf_ptr_val_39.is_optional = false;
  auto module_AnnotatedStruct_iobuf_ptr_val_39_type = std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY)));
  module_AnnotatedStruct_iobuf_ptr_val_39_type->initialize(module_AnnotatedStruct_iobuf_ptr_val_39.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_iobuf_ptr_val_39));
  ::apache::thrift::metadata::ThriftField module_AnnotatedStruct_struct_struct_40;
  module_AnnotatedStruct_struct_struct_40.id = 40;
  module_AnnotatedStruct_struct_struct_40.name = "struct_struct";
  module_AnnotatedStruct_struct_struct_40.is_optional = false;
  auto module_AnnotatedStruct_struct_struct_40_type = std::make_unique<Struct< ::some::valid::ns::containerStruct>>("module.containerStruct", metadata);
  module_AnnotatedStruct_struct_struct_40_type->initialize(module_AnnotatedStruct_struct_struct_40.type);
  module_AnnotatedStruct.fields.push_back(std::move(module_AnnotatedStruct_struct_struct_40));
}
void GeneratedStructMetadata<::some::valid::ns::ComplexContainerStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.ComplexContainerStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_ComplexContainerStruct = res.first->second;
  module_ComplexContainerStruct.name = "module.ComplexContainerStruct";
  module_ComplexContainerStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_ComplexContainerStruct_map_of_iobufs_1;
  module_ComplexContainerStruct_map_of_iobufs_1.id = 1;
  module_ComplexContainerStruct_map_of_iobufs_1.name = "map_of_iobufs";
  module_ComplexContainerStruct_map_of_iobufs_1.is_optional = false;
  auto module_ComplexContainerStruct_map_of_iobufs_1_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Typedef>("module.IOBuf", std::make_unique<Typedef>("module.IOBuf", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY))));
  module_ComplexContainerStruct_map_of_iobufs_1_type->initialize(module_ComplexContainerStruct_map_of_iobufs_1.type);
  module_ComplexContainerStruct.fields.push_back(std::move(module_ComplexContainerStruct_map_of_iobufs_1));
  ::apache::thrift::metadata::ThriftField module_ComplexContainerStruct_map_of_iobuf_ptrs_2;
  module_ComplexContainerStruct_map_of_iobuf_ptrs_2.id = 2;
  module_ComplexContainerStruct_map_of_iobuf_ptrs_2.name = "map_of_iobuf_ptrs";
  module_ComplexContainerStruct_map_of_iobuf_ptrs_2.is_optional = false;
  auto module_ComplexContainerStruct_map_of_iobuf_ptrs_2_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Typedef>("module.IOBufPtr", std::make_unique<Primitive>(ThriftPrimitiveType::BINARY))));
  module_ComplexContainerStruct_map_of_iobuf_ptrs_2_type->initialize(module_ComplexContainerStruct_map_of_iobuf_ptrs_2.type);
  module_ComplexContainerStruct.fields.push_back(std::move(module_ComplexContainerStruct_map_of_iobuf_ptrs_2));
}
void GeneratedStructMetadata<::some::valid::ns::FloatStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.FloatStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_FloatStruct = res.first->second;
  module_FloatStruct.name = "module.FloatStruct";
  module_FloatStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_FloatStruct_floatField_1;
  module_FloatStruct_floatField_1.id = 1;
  module_FloatStruct_floatField_1.name = "floatField";
  module_FloatStruct_floatField_1.is_optional = false;
  auto module_FloatStruct_floatField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::FLOAT);
  module_FloatStruct_floatField_1_type->initialize(module_FloatStruct_floatField_1.type);
  module_FloatStruct.fields.push_back(std::move(module_FloatStruct_floatField_1));
  ::apache::thrift::metadata::ThriftField module_FloatStruct_doubleField_2;
  module_FloatStruct_doubleField_2.id = 2;
  module_FloatStruct_doubleField_2.name = "doubleField";
  module_FloatStruct_doubleField_2.is_optional = false;
  auto module_FloatStruct_doubleField_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE);
  module_FloatStruct_doubleField_2_type->initialize(module_FloatStruct_doubleField_2.type);
  module_FloatStruct.fields.push_back(std::move(module_FloatStruct_doubleField_2));
}
void GeneratedStructMetadata<::some::valid::ns::FloatUnion>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.FloatUnion", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_FloatUnion = res.first->second;
  module_FloatUnion.name = "module.FloatUnion";
  module_FloatUnion.is_union = true;
  ::apache::thrift::metadata::ThriftField module_FloatUnion_floatSide_1;
  module_FloatUnion_floatSide_1.id = 1;
  module_FloatUnion_floatSide_1.name = "floatSide";
  module_FloatUnion_floatSide_1.is_optional = false;
  auto module_FloatUnion_floatSide_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::FLOAT);
  module_FloatUnion_floatSide_1_type->initialize(module_FloatUnion_floatSide_1.type);
  module_FloatUnion.fields.push_back(std::move(module_FloatUnion_floatSide_1));
  ::apache::thrift::metadata::ThriftField module_FloatUnion_doubleSide_2;
  module_FloatUnion_doubleSide_2.id = 2;
  module_FloatUnion_doubleSide_2.name = "doubleSide";
  module_FloatUnion_doubleSide_2.is_optional = false;
  auto module_FloatUnion_doubleSide_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::DOUBLE);
  module_FloatUnion_doubleSide_2_type->initialize(module_FloatUnion_doubleSide_2.type);
  module_FloatUnion.fields.push_back(std::move(module_FloatUnion_doubleSide_2));
}
void GeneratedStructMetadata<::some::valid::ns::AllRequiredNoExceptMoveCtrStruct>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("module.AllRequiredNoExceptMoveCtrStruct", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& module_AllRequiredNoExceptMoveCtrStruct = res.first->second;
  module_AllRequiredNoExceptMoveCtrStruct.name = "module.AllRequiredNoExceptMoveCtrStruct";
  module_AllRequiredNoExceptMoveCtrStruct.is_union = false;
  ::apache::thrift::metadata::ThriftField module_AllRequiredNoExceptMoveCtrStruct_intField_1;
  module_AllRequiredNoExceptMoveCtrStruct_intField_1.id = 1;
  module_AllRequiredNoExceptMoveCtrStruct_intField_1.name = "intField";
  module_AllRequiredNoExceptMoveCtrStruct_intField_1.is_optional = false;
  auto module_AllRequiredNoExceptMoveCtrStruct_intField_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I64);
  module_AllRequiredNoExceptMoveCtrStruct_intField_1_type->initialize(module_AllRequiredNoExceptMoveCtrStruct_intField_1.type);
  module_AllRequiredNoExceptMoveCtrStruct.fields.push_back(std::move(module_AllRequiredNoExceptMoveCtrStruct_intField_1));
}

void GeneratedExceptionMetadata<::some::valid::ns::AnException>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.exceptions.emplace("module.AnException", ::apache::thrift::metadata::ThriftException{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftException& module_AnException = res.first->second;
  module_AnException.name = "module.AnException";
  ::apache::thrift::metadata::ThriftField module_AnException_code_1;
  module_AnException_code_1.id = 1;
  module_AnException_code_1.name = "code";
  module_AnException_code_1.is_optional = false;
  auto module_AnException_code_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnException_code_1_type->initialize(module_AnException_code_1.type);
  module_AnException.fields.push_back(std::move(module_AnException_code_1));
  ::apache::thrift::metadata::ThriftField module_AnException_req_code_101;
  module_AnException_req_code_101.id = 101;
  module_AnException_req_code_101.name = "req_code";
  module_AnException_req_code_101.is_optional = false;
  auto module_AnException_req_code_101_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnException_req_code_101_type->initialize(module_AnException_req_code_101.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_code_101));
  ::apache::thrift::metadata::ThriftField module_AnException_message2_2;
  module_AnException_message2_2.id = 2;
  module_AnException_message2_2.name = "message2";
  module_AnException_message2_2.is_optional = false;
  auto module_AnException_message2_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnException_message2_2_type->initialize(module_AnException_message2_2.type);
  module_AnException.fields.push_back(std::move(module_AnException_message2_2));
  ::apache::thrift::metadata::ThriftField module_AnException_req_message_102;
  module_AnException_req_message_102.id = 102;
  module_AnException_req_message_102.name = "req_message";
  module_AnException_req_message_102.is_optional = false;
  auto module_AnException_req_message_102_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnException_req_message_102_type->initialize(module_AnException_req_message_102.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_message_102));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_list_3;
  module_AnException_exception_list_3.id = 3;
  module_AnException_exception_list_3.name = "exception_list";
  module_AnException_exception_list_3.is_optional = false;
  auto module_AnException_exception_list_3_type = std::make_unique<List>(std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_exception_list_3_type->initialize(module_AnException_exception_list_3.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_list_3));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_set_4;
  module_AnException_exception_set_4.id = 4;
  module_AnException_exception_set_4.name = "exception_set";
  module_AnException_exception_set_4.is_optional = false;
  auto module_AnException_exception_set_4_type = std::make_unique<Set>(std::make_unique<Primitive>(ThriftPrimitiveType::I64));
  module_AnException_exception_set_4_type->initialize(module_AnException_exception_set_4.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_set_4));
  ::apache::thrift::metadata::ThriftField module_AnException_exception_map_5;
  module_AnException_exception_map_5.id = 5;
  module_AnException_exception_map_5.name = "exception_map";
  module_AnException_exception_map_5.is_optional = false;
  auto module_AnException_exception_map_5_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_exception_map_5_type->initialize(module_AnException_exception_map_5.type);
  module_AnException.fields.push_back(std::move(module_AnException_exception_map_5));
  ::apache::thrift::metadata::ThriftField module_AnException_req_exception_map_105;
  module_AnException_req_exception_map_105.id = 105;
  module_AnException_req_exception_map_105.name = "req_exception_map";
  module_AnException_req_exception_map_105.is_optional = false;
  auto module_AnException_req_exception_map_105_type = std::make_unique<Map>(std::make_unique<Primitive>(ThriftPrimitiveType::STRING), std::make_unique<Primitive>(ThriftPrimitiveType::I32));
  module_AnException_req_exception_map_105_type->initialize(module_AnException_req_exception_map_105.type);
  module_AnException.fields.push_back(std::move(module_AnException_req_exception_map_105));
  ::apache::thrift::metadata::ThriftField module_AnException_enum_field_6;
  module_AnException_enum_field_6.id = 6;
  module_AnException_enum_field_6.name = "enum_field";
  module_AnException_enum_field_6.is_optional = false;
  auto module_AnException_enum_field_6_type = std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata);
  module_AnException_enum_field_6_type->initialize(module_AnException_enum_field_6.type);
  module_AnException.fields.push_back(std::move(module_AnException_enum_field_6));
  ::apache::thrift::metadata::ThriftField module_AnException_enum_container_7;
  module_AnException_enum_container_7.id = 7;
  module_AnException_enum_container_7.name = "enum_container";
  module_AnException_enum_container_7.is_optional = false;
  auto module_AnException_enum_container_7_type = std::make_unique<List>(std::make_unique<Enum< ::some::valid::ns::MyEnumA>>("module.MyEnumA", metadata));
  module_AnException_enum_container_7_type->initialize(module_AnException_enum_container_7.type);
  module_AnException.fields.push_back(std::move(module_AnException_enum_container_7));
  ::apache::thrift::metadata::ThriftField module_AnException_a_struct_8;
  module_AnException_a_struct_8.id = 8;
  module_AnException_a_struct_8.name = "a_struct";
  module_AnException_a_struct_8.is_optional = false;
  auto module_AnException_a_struct_8_type = std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata);
  module_AnException_a_struct_8_type->initialize(module_AnException_a_struct_8.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_struct_8));
  ::apache::thrift::metadata::ThriftField module_AnException_a_set_struct_9;
  module_AnException_a_set_struct_9.id = 9;
  module_AnException_a_set_struct_9.name = "a_set_struct";
  module_AnException_a_set_struct_9.is_optional = false;
  auto module_AnException_a_set_struct_9_type = std::make_unique<Set>(std::make_unique<Struct< ::some::valid::ns::MyStruct>>("module.MyStruct", metadata));
  module_AnException_a_set_struct_9_type->initialize(module_AnException_a_set_struct_9.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_set_struct_9));
  ::apache::thrift::metadata::ThriftField module_AnException_a_union_list_10;
  module_AnException_a_union_list_10.id = 10;
  module_AnException_a_union_list_10.name = "a_union_list";
  module_AnException_a_union_list_10.is_optional = false;
  auto module_AnException_a_union_list_10_type = std::make_unique<List>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata));
  module_AnException_a_union_list_10_type->initialize(module_AnException_a_union_list_10.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_union_list_10));
  ::apache::thrift::metadata::ThriftField module_AnException_union_typedef_11;
  module_AnException_union_typedef_11.id = 11;
  module_AnException_union_typedef_11.name = "union_typedef";
  module_AnException_union_typedef_11.is_optional = false;
  auto module_AnException_union_typedef_11_type = std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata)));
  module_AnException_union_typedef_11_type->initialize(module_AnException_union_typedef_11.type);
  module_AnException.fields.push_back(std::move(module_AnException_union_typedef_11));
  ::apache::thrift::metadata::ThriftField module_AnException_a_union_typedef_list_19;
  module_AnException_a_union_typedef_list_19.id = 19;
  module_AnException_a_union_typedef_list_19.name = "a_union_typedef_list";
  module_AnException_a_union_typedef_list_19.is_optional = false;
  auto module_AnException_a_union_typedef_list_19_type = std::make_unique<List>(std::make_unique<Typedef>("module.unionTypeDef", std::make_unique<Set>(std::make_unique<Union< ::some::valid::ns::SimpleUnion>>("module.SimpleUnion", metadata))));
  module_AnException_a_union_typedef_list_19_type->initialize(module_AnException_a_union_typedef_list_19.type);
  module_AnException.fields.push_back(std::move(module_AnException_a_union_typedef_list_19));
}
void GeneratedExceptionMetadata<::some::valid::ns::AnotherException>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.exceptions.emplace("module.AnotherException", ::apache::thrift::metadata::ThriftException{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftException& module_AnotherException = res.first->second;
  module_AnotherException.name = "module.AnotherException";
  ::apache::thrift::metadata::ThriftField module_AnotherException_code_1;
  module_AnotherException_code_1.id = 1;
  module_AnotherException_code_1.name = "code";
  module_AnotherException_code_1.is_optional = false;
  auto module_AnotherException_code_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnotherException_code_1_type->initialize(module_AnotherException_code_1.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_code_1));
  ::apache::thrift::metadata::ThriftField module_AnotherException_req_code_101;
  module_AnotherException_req_code_101.id = 101;
  module_AnotherException_req_code_101.name = "req_code";
  module_AnotherException_req_code_101.is_optional = false;
  auto module_AnotherException_req_code_101_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  module_AnotherException_req_code_101_type->initialize(module_AnotherException_req_code_101.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_req_code_101));
  ::apache::thrift::metadata::ThriftField module_AnotherException_message_2;
  module_AnotherException_message_2.id = 2;
  module_AnotherException_message_2.name = "message";
  module_AnotherException_message_2.is_optional = false;
  auto module_AnotherException_message_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  module_AnotherException_message_2_type->initialize(module_AnotherException_message_2.type);
  module_AnotherException.fields.push_back(std::move(module_AnotherException_message_2));
}
} // apache::thrift::detail::metadata
