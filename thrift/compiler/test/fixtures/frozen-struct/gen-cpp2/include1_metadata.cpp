/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include <thrift/lib/cpp2/gen/module_metadata_cpp.h>
#include "thrift/compiler/test/fixtures/frozen-struct/gen-cpp2/include1_metadata.h"

namespace apache::thrift::detail::metadata {

using ThriftMetadata = ::apache::thrift::metadata::ThriftMetadata;
using ThriftPrimitiveType = ::apache::thrift::metadata::ThriftPrimitiveType;
using ThriftType = ::apache::thrift::metadata::ThriftType;


void GeneratedStructMetadata<::some::ns::IncludedA>::genMetadata(ThriftMetadata& metadata) {
  auto res = metadata.structs.emplace("include1.IncludedA", ::apache::thrift::metadata::ThriftStruct{});
  if (!res.second) {
    return;
  }
  ::apache::thrift::metadata::ThriftStruct& include1_IncludedA = res.first->second;
  include1_IncludedA.name = "include1.IncludedA";
  include1_IncludedA.is_union = false;
  ::apache::thrift::metadata::ThriftField include1_IncludedA_i32Field_1;
  include1_IncludedA_i32Field_1.id = 1;
  include1_IncludedA_i32Field_1.name = "i32Field";
  include1_IncludedA_i32Field_1.is_optional = false;
  auto include1_IncludedA_i32Field_1_type = std::make_unique<Primitive>(ThriftPrimitiveType::I32);
  include1_IncludedA_i32Field_1_type->initialize(include1_IncludedA_i32Field_1.type);
  include1_IncludedA.fields.push_back(std::move(include1_IncludedA_i32Field_1));
  ::apache::thrift::metadata::ThriftField include1_IncludedA_strField_2;
  include1_IncludedA_strField_2.id = 2;
  include1_IncludedA_strField_2.name = "strField";
  include1_IncludedA_strField_2.is_optional = false;
  auto include1_IncludedA_strField_2_type = std::make_unique<Primitive>(ThriftPrimitiveType::STRING);
  include1_IncludedA_strField_2_type->initialize(include1_IncludedA_strField_2.type);
  include1_IncludedA.fields.push_back(std::move(include1_IncludedA_strField_2));
}

} // apache::thrift::detail::metadata
